"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/cardStudio/useWebSocket.ts":
/*!******************************************!*\
  !*** ./hooks/cardStudio/useWebSocket.ts ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWebSocket: function() { return /* binding */ useWebSocket; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! socket.io-client */ \"(app-pages-browser)/./node_modules/socket.io-client/build/esm/index.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./hooks/cardStudio/constants.ts\");\n/* __next_internal_client_entry_do_not_use__ useWebSocket auto */ \n\n\n\nfunction useWebSocket() {\n    const socketRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [isSocketConnected, setIsSocketConnected] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const currentJobRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const subscribedJobsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(new Set()); // Track all subscribed jobs\n    const lastJobUpdateRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(Date.now());\n    const connectionStartTimeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const reconnectionAttemptsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(0);\n    const MAX_CONNECTION_AGE = 5 * 60 * 1000; // 5 minutes in milliseconds\n    const hasShownStaleToastRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const connectWebSocket = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        var _socketRef_current;\n        if ((_socketRef_current = socketRef.current) === null || _socketRef_current === void 0 ? void 0 : _socketRef_current.connected) {\n            console.log(\"✅ WebSocket already connected\");\n            return;\n        }\n        // Check if connection is stale (older than 5 minutes)\n        if (connectionStartTimeRef.current && Date.now() - connectionStartTimeRef.current > MAX_CONNECTION_AGE) {\n            console.log(\"⏰ Connection attempt is stale (>5 minutes), stopping reconnection\");\n            reconnectionAttemptsRef.current = 0;\n            connectionStartTimeRef.current = null;\n            // Only show toast once\n            if (!hasShownStaleToastRef.current) {\n                sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Connection timed out. Please refresh the page if needed.\");\n                hasShownStaleToastRef.current = true;\n            }\n            return;\n        }\n        // Set connection start time on first attempt\n        if (!connectionStartTimeRef.current) {\n            connectionStartTimeRef.current = Date.now();\n        }\n        reconnectionAttemptsRef.current++;\n        try {\n            console.log(\"\\uD83D\\uDD0C Connecting to WebSocket...\");\n            const socket = (0,socket_io_client__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(_constants__WEBPACK_IMPORTED_MODULE_3__.BACKEND_API_BASE_URL, {\n                transports: [\n                    \"websocket\",\n                    \"polling\"\n                ],\n                timeout: 120000,\n                reconnection: true,\n                reconnectionDelay: 1000,\n                reconnectionAttempts: 20,\n                reconnectionDelayMax: 5000,\n                forceNew: true // Force new connection to avoid stale connections\n            });\n            socket.on(\"connect\", ()=>{\n                console.log(\"✅ WebSocket connected:\", socket.id);\n                setIsSocketConnected(true);\n                sonner__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"\\uD83D\\uDD17 Real-time updates connected\");\n                // Reset connection tracking on successful connect\n                connectionStartTimeRef.current = null;\n                reconnectionAttemptsRef.current = 0;\n                hasShownStaleToastRef.current = false;\n                // Resubscribe to all subscribed jobs\n                if (subscribedJobsRef.current.size > 0) {\n                    console.log(\"\\uD83D\\uDD04 Resubscribing to jobs:\", Array.from(subscribedJobsRef.current));\n                    subscribedJobsRef.current.forEach((jobId)=>{\n                        socket.emit(\"subscribe_job\", {\n                            job_id: jobId\n                        });\n                    });\n                }\n            });\n            socket.on(\"disconnect\", (reason)=>{\n                console.log(\"❌ WebSocket disconnected:\", reason);\n                setIsSocketConnected(false);\n                if (reason === \"io server disconnect\") {\n                    // Server disconnected, try to reconnect\n                    socket.connect();\n                }\n            });\n            socket.on(\"connect_error\", (error)=>{\n                console.error(\"❌ WebSocket connection error:\", error);\n                setIsSocketConnected(false);\n                // Check if we should stop trying\n                if (connectionStartTimeRef.current && Date.now() - connectionStartTimeRef.current > MAX_CONNECTION_AGE) {\n                    console.log(\"⏰ Stopping reconnection attempts after 5 minutes\");\n                    socket.disconnect();\n                    connectionStartTimeRef.current = null;\n                    reconnectionAttemptsRef.current = 0;\n                }\n            });\n            socketRef.current = socket;\n        } catch (error) {\n            console.error(\"❌ Failed to connect WebSocket:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Failed to connect real-time updates. Using fallback mode.\");\n        }\n    }, []);\n    const disconnectWebSocket = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (socketRef.current) {\n            console.log(\"\\uD83D\\uDD0C Disconnecting WebSocket...\");\n            socketRef.current.disconnect();\n            socketRef.current = null;\n            setIsSocketConnected(false);\n            connectionStartTimeRef.current = null;\n            reconnectionAttemptsRef.current = 0;\n        }\n    }, []);\n    const subscribeToJob = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((jobId)=>{\n        var _socketRef_current, _socketRef_current1;\n        // For draft jobs, don't unsubscribe from other drafts\n        const isDraftJob = jobId.startsWith(\"draft-\");\n        // Only unsubscribe from previous job if it's not a draft job\n        if (!isDraftJob && currentJobRef.current && currentJobRef.current !== jobId && ((_socketRef_current = socketRef.current) === null || _socketRef_current === void 0 ? void 0 : _socketRef_current.connected)) {\n            console.log(\"\\uD83D\\uDD04 Unsubscribing from previous job:\", currentJobRef.current);\n            socketRef.current.emit(\"unsubscribe_job\", {\n                job_id: currentJobRef.current\n            });\n            subscribedJobsRef.current.delete(currentJobRef.current);\n        }\n        // Add to subscribed jobs set\n        subscribedJobsRef.current.add(jobId);\n        if (!isDraftJob) {\n            currentJobRef.current = jobId;\n        }\n        if ((_socketRef_current1 = socketRef.current) === null || _socketRef_current1 === void 0 ? void 0 : _socketRef_current1.connected) {\n            console.log(\"\\uD83D\\uDCE1 Subscribing to job updates:\", jobId);\n            socketRef.current.emit(\"subscribe_job\", {\n                job_id: jobId\n            });\n        } else {\n            console.log(\"⏳ WebSocket not connected, will subscribe when connected\");\n        }\n    }, []);\n    const unsubscribeFromJob = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((jobId)=>{\n        var _socketRef_current;\n        if (currentJobRef.current === jobId) {\n            currentJobRef.current = null;\n        }\n        // Remove from subscribed jobs set\n        subscribedJobsRef.current.delete(jobId);\n        if ((_socketRef_current = socketRef.current) === null || _socketRef_current === void 0 ? void 0 : _socketRef_current.connected) {\n            console.log(\"\\uD83D\\uDCE1 Unsubscribing from job updates:\", jobId);\n            socketRef.current.emit(\"unsubscribe_job\", {\n                job_id: jobId\n            });\n        }\n    }, []);\n    const unsubscribeFromAllJobs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        var _socketRef_current;\n        console.log(\"\\uD83E\\uDDF9 Unsubscribing from all job updates\");\n        currentJobRef.current = null;\n        subscribedJobsRef.current.clear();\n        if ((_socketRef_current = socketRef.current) === null || _socketRef_current === void 0 ? void 0 : _socketRef_current.connected) {\n            // Emit a special event to clear all job subscriptions\n            socketRef.current.emit(\"unsubscribe_all_jobs\", {});\n        }\n    }, []);\n    // Set up job update listener\n    const setJobUpdateHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((handler)=>{\n        if (socketRef.current) {\n            socketRef.current.off(\"job_update\"); // Remove any existing handler\n            socketRef.current.on(\"job_update\", (data)=>{\n                console.log(\"\\uD83D\\uDCE6 Job update received:\", data);\n                lastJobUpdateRef.current = Date.now();\n                // Update connection start time to track how long we've been connected\n                if (!connectionStartTimeRef.current) {\n                    connectionStartTimeRef.current = Date.now();\n                }\n                handler(data);\n            });\n        }\n    }, []);\n    // WebSocket connection lifecycle management\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Connect WebSocket when component mounts\n        connectWebSocket();\n        // Cleanup on unmount\n        return ()=>{\n            disconnectWebSocket();\n        };\n    }, [\n        connectWebSocket,\n        disconnectWebSocket\n    ]);\n    return {\n        isSocketConnected,\n        connectWebSocket,\n        disconnectWebSocket,\n        subscribeToJob,\n        unsubscribeFromJob,\n        unsubscribeFromAllJobs,\n        setJobUpdateHandler,\n        currentJobRef,\n        lastJobUpdateRef\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/cardStudio/useWebSocket.ts\n"));

/***/ })

});