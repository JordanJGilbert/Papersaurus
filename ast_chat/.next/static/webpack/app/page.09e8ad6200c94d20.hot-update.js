"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/wizard/CardWizardEffects.tsx":
/*!*************************************************!*\
  !*** ./components/wizard/CardWizardEffects.tsx ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardWizardEffects: function() { return /* binding */ CardWizardEffects; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ CardWizardEffects auto */ var _s = $RefreshSig$();\n\nfunction CardWizardEffects(param) {\n    let { cardStudio, cardForm, cardHistory, wizardState, updateWizardState, isResumingDraft, isRestoringJobs } = param;\n    _s();\n    // Check for pending jobs on component mount but don't auto-navigate\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const restorePendingJobs = async ()=>{\n            console.log(\"\\uD83D\\uDD04 CardWizardEffects: Starting checkPendingJobs...\");\n            await cardStudio.checkPendingJobs();\n            // Only auto-navigate if there's an active generation in progress\n            // Don't navigate for completed drafts - let user choose\n            if (cardStudio.isGenerating && cardStudio.generationProgress) {\n                if (cardStudio.isGeneratingFinalCard) {\n                    console.log(\"\\uD83D\\uDD04 Restoring to Step 6 due to ongoing final generation\");\n                    // Mark all previous steps as completed\n                    for(let i = 1; i <= 5; i++){\n                        if (!wizardState.completedSteps.includes(i)) wizardState.markStepCompleted(i);\n                    }\n                    wizardState.updateCurrentStep(6);\n                } else if (cardStudio.isDraftMode && cardStudio.isGenerating) {\n                    console.log(\"\\uD83D\\uDD04 Restoring to Step 5 due to ongoing draft generation\");\n                    // Mark previous steps as completed\n                    if (!wizardState.completedSteps.includes(1)) wizardState.markStepCompleted(1);\n                    if (!wizardState.completedSteps.includes(2)) wizardState.markStepCompleted(2);\n                    if (!wizardState.completedSteps.includes(3)) wizardState.markStepCompleted(3);\n                    if (!wizardState.completedSteps.includes(4)) wizardState.markStepCompleted(4);\n                    wizardState.updateCurrentStep(5);\n                }\n            } else {\n                // No active generation - reset wizard to step 1 if we're on a later step\n                // This handles the case where user left off on step 5 but isn't actively generating\n                if (wizardState.currentStep > 1 && !cardStudio.isGenerating) {\n                    console.log(\"\\uD83D\\uDD04 No active generation, resetting to Step 1\");\n                    wizardState.updateCurrentStep(1);\n                }\n            }\n        // If we have completed drafts but no active generation, stay on Step 1\n        // User can choose to resume via the UI\n        };\n        restorePendingJobs();\n    }, []);\n    // Only mark step 1 as completed if user has made selections, but don't auto-advance\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!wizardState.isInitialLoadComplete || !cardForm.isInitialLoadComplete) return;\n        // Only mark step as completed, don't navigate\n        if (wizardState.currentStep === 1 && !wizardState.completedSteps.includes(1)) {\n            const formData = cardForm.formData;\n            // Mark step 1 as completed if user has made selections\n            if (formData.selectedType && formData.selectedTone) {\n                console.log(\"âœ… Marking step 1 as completed based on saved data\");\n                wizardState.markStepCompleted(1);\n            }\n        }\n    }, [\n        wizardState.isInitialLoadComplete,\n        cardForm.isInitialLoadComplete\n    ]);\n    // Only navigate to Step 5 when NEW draft cards are being generated (not restored)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Only navigate if we're actively generating NEW drafts, not restoring old ones\n        if (cardStudio.draftCards.length > 0 && wizardState.currentStep < 5 && cardStudio.isGenerating && !isRestoringJobs) {\n            console.log(\"\\uD83D\\uDCCB New draft cards being generated, navigating to Step 5\");\n            // Mark previous steps as completed\n            for(let i = 1; i <= 4; i++){\n                if (!wizardState.completedSteps.includes(i)) {\n                    wizardState.markStepCompleted(i);\n                }\n            }\n            wizardState.updateCurrentStep(5);\n        }\n    }, [\n        cardStudio.draftCards.length,\n        cardStudio.isGenerating,\n        isRestoringJobs\n    ]);\n    // Auto-save drafts when user creates draft cards\n    // Track the current session ID to update the same session\n    const [currentDraftSessionId, setCurrentDraftSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [lastSavedDraftCount, setLastSavedDraftCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Only save if we have draft cards and not resuming or restoring\n        if (cardStudio.draftCards.length > 0) {\n            console.log(\"\\uD83D\\uDD0D Auto-save check:\", {\n                hasCards: cardStudio.draftCards.length > 0,\n                isInitialLoadComplete: cardForm.isInitialLoadComplete,\n                isResumingDraft,\n                isRestoringJobs,\n                shouldSave: cardForm.isInitialLoadComplete && !isResumingDraft && !isRestoringJobs\n            });\n        }\n        if (cardStudio.draftCards.length > 0 && cardForm.isInitialLoadComplete && !isResumingDraft && !isRestoringJobs) {\n            // Count non-null draft cards\n            const validDrafts = cardStudio.draftCards.filter((card)=>card !== null).length;\n            // Only save when:\n            // 1. All 5 drafts are complete (validDrafts === 5)\n            // 2. This is the first draft and we haven't saved yet (validDrafts === 1 && !currentDraftSessionId)\n            // 3. User selected a draft (selectedDraftIndex >= 0)\n            const shouldSave = validDrafts === 5 && lastSavedDraftCount < 5 || // All drafts complete\n            validDrafts === 1 && !currentDraftSessionId || // First draft\n            cardStudio.selectedDraftIndex >= 0 && validDrafts > lastSavedDraftCount // User selected\n            ;\n            if (shouldSave && validDrafts > 0) {\n                // Save or update the session with the same ID\n                const sessionId = cardHistory.saveDraftSession(cardForm.formData, cardStudio.draftCards, cardStudio.selectedDraftIndex, currentDraftSessionId || undefined // Use existing session ID if available\n                );\n                // Store the session ID for future updates\n                if (!currentDraftSessionId) {\n                    setCurrentDraftSessionId(sessionId);\n                }\n                // Update the last saved count\n                setLastSavedDraftCount(validDrafts);\n                console.log(\"\\uD83D\\uDCBE Draft session saved: \".concat(validDrafts, \"/5 drafts complete\"));\n            }\n        }\n    }, [\n        cardStudio.draftCards,\n        cardStudio.selectedDraftIndex,\n        cardForm.formData,\n        cardForm.isInitialLoadComplete,\n        isResumingDraft,\n        isRestoringJobs,\n        currentDraftSessionId,\n        lastSavedDraftCount\n    ]);\n    // Reset session ID when drafts are cleared\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const validDrafts = cardStudio.draftCards.filter((card)=>card !== null).length;\n        if (validDrafts === 0) {\n            setCurrentDraftSessionId(null);\n            setLastSavedDraftCount(0);\n        }\n    }, [\n        cardStudio.draftCards\n    ]);\n    // Auto-save completed cards and ensure we're on Step 6\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardStudio.generatedCard && cardStudio.isCardCompleted) {\n            cardHistory.addCompletedCard(cardStudio.generatedCard);\n            // Ensure we're on Step 6 to see the completed card\n            if (wizardState.currentStep !== 6) {\n                console.log(\"\\uD83D\\uDCCD Card completed but not on Step 6, navigating there now...\");\n                wizardState.updateCurrentStep(6);\n            }\n        }\n    }, [\n        cardStudio.generatedCard,\n        cardStudio.isCardCompleted,\n        wizardState.currentStep\n    ]);\n    // Sync form data with cardStudio when form data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!cardForm.isInitialLoadComplete) return;\n        const { formData } = cardForm;\n        // Update cardStudio with form data\n        cardStudio.setSelectedType(formData.selectedType);\n        cardStudio.setCustomCardType(formData.customCardType);\n        cardStudio.setSelectedTone(formData.selectedTone);\n        cardStudio.setToField(formData.toField);\n        cardStudio.setFromField(formData.fromField);\n        cardStudio.setRelationshipField(formData.relationshipField);\n        cardStudio.setPrompt(formData.prompt);\n        cardStudio.setFinalCardMessage(formData.finalCardMessage);\n        cardStudio.setIsHandwrittenMessage(formData.isHandwrittenMessage);\n        cardStudio.setSelectedArtisticStyle(formData.selectedArtisticStyle);\n        cardStudio.setCustomStyleDescription(formData.customStyleDescription);\n        // Skip syncing reference images from form to cardStudio\n        // This should only flow from cardStudio -> form after uploads\n        // cardStudio.setReferenceImages(formData.referenceImages);\n        // cardStudio.setReferenceImageUrls(formData.referenceImageUrls);\n        cardStudio.setImageTransformation(formData.imageTransformation);\n        cardStudio.setUserEmail(formData.userEmail);\n        cardStudio.setSelectedImageModel(formData.selectedImageModel);\n        cardStudio.setSelectedDraftModel(formData.selectedDraftModel);\n        cardStudio.setSelectedPaperSize(formData.selectedPaperSize);\n        cardStudio.setNumberOfCards(formData.numberOfCards);\n        cardStudio.setIsFrontBackOnly(formData.isFrontBackOnly);\n    }, [\n        cardForm.formData,\n        cardForm.isInitialLoadComplete\n    ]);\n    // Auto-complete step 1 once user makes selections\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardForm.validateStep(1) && !wizardState.completedSteps.includes(1)) {\n            wizardState.markStepCompleted(1);\n        }\n    }, [\n        cardForm.formData.selectedType,\n        cardForm.formData.selectedTone,\n        cardForm.formData.customCardType,\n        wizardState\n    ]);\n    // Auto-complete step 4 once email is valid\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardForm.validateStep(4) && !wizardState.completedSteps.includes(4)) {\n            wizardState.markStepCompleted(4);\n        }\n    }, [\n        cardForm.formData.userEmail,\n        wizardState\n    ]);\n    // Auto-advance to Step 6 when final card generation starts\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardStudio.isGeneratingFinalCard && wizardState.currentStep < 6) {\n            console.log(\"\\uD83D\\uDE80 Auto-advancing to Step 6: Final Generation\");\n            if (!wizardState.completedSteps.includes(5)) {\n                wizardState.markStepCompleted(5);\n            }\n            wizardState.updateCurrentStep(6);\n        }\n    }, [\n        cardStudio.isGeneratingFinalCard,\n        wizardState\n    ]);\n    // Sync reference images from cardStudio to form when they change\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!cardForm.isInitialLoadComplete) return;\n        // Sync if cardStudio has images but form doesn't, or if photoReferences changed\n        const shouldSync = cardStudio.referenceImageUrls.length > 0 && cardForm.formData.referenceImageUrls.length !== cardStudio.referenceImageUrls.length || cardStudio.photoReferences && cardStudio.photoReferences !== cardForm.formData.photoReferences;\n        if (shouldSync) {\n            cardForm.updateFormData({\n                referenceImages: cardStudio.referenceImages,\n                referenceImageUrls: cardStudio.referenceImageUrls,\n                photoReferences: cardStudio.photoReferences\n            });\n        }\n    }, [\n        cardStudio.referenceImageUrls,\n        cardStudio.referenceImages,\n        cardStudio.photoReferences,\n        cardForm.isInitialLoadComplete\n    ]);\n    return null;\n}\n_s(CardWizardEffects, \"03JOOMzcta+/cU75gy+c1oeoKMs=\");\n_c = CardWizardEffects;\nvar _c;\n$RefreshReg$(_c, \"CardWizardEffects\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2NvbXBvbmVudHMvd2l6YXJkL0NhcmRXaXphcmRFZmZlY3RzLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBRTRDO0FBY3JDLFNBQVNFLGtCQUFrQixLQVFUO1FBUlMsRUFDaENDLFVBQVUsRUFDVkMsUUFBUSxFQUNSQyxXQUFXLEVBQ1hDLFdBQVcsRUFDWEMsaUJBQWlCLEVBQ2pCQyxlQUFlLEVBQ2ZDLGVBQWUsRUFDUSxHQVJTOztJQVNoQyxvRUFBb0U7SUFDcEVULGdEQUFTQSxDQUFDO1FBQ1IsTUFBTVUscUJBQXFCO1lBQ3pCQyxRQUFRQyxHQUFHLENBQUM7WUFDWixNQUFNVCxXQUFXVSxnQkFBZ0I7WUFFakMsaUVBQWlFO1lBQ2pFLHdEQUF3RDtZQUN4RCxJQUFJVixXQUFXVyxZQUFZLElBQUlYLFdBQVdZLGtCQUFrQixFQUFFO2dCQUM1RCxJQUFJWixXQUFXYSxxQkFBcUIsRUFBRTtvQkFDcENMLFFBQVFDLEdBQUcsQ0FBQztvQkFDWix1Q0FBdUM7b0JBQ3ZDLElBQUssSUFBSUssSUFBSSxHQUFHQSxLQUFLLEdBQUdBLElBQUs7d0JBQzNCLElBQUksQ0FBQ1gsWUFBWVksY0FBYyxDQUFDQyxRQUFRLENBQUNGLElBQUlYLFlBQVljLGlCQUFpQixDQUFDSDtvQkFDN0U7b0JBQ0FYLFlBQVllLGlCQUFpQixDQUFDO2dCQUNoQyxPQUFPLElBQUlsQixXQUFXbUIsV0FBVyxJQUFJbkIsV0FBV1csWUFBWSxFQUFFO29CQUM1REgsUUFBUUMsR0FBRyxDQUFDO29CQUNaLG1DQUFtQztvQkFDbkMsSUFBSSxDQUFDTixZQUFZWSxjQUFjLENBQUNDLFFBQVEsQ0FBQyxJQUFJYixZQUFZYyxpQkFBaUIsQ0FBQztvQkFDM0UsSUFBSSxDQUFDZCxZQUFZWSxjQUFjLENBQUNDLFFBQVEsQ0FBQyxJQUFJYixZQUFZYyxpQkFBaUIsQ0FBQztvQkFDM0UsSUFBSSxDQUFDZCxZQUFZWSxjQUFjLENBQUNDLFFBQVEsQ0FBQyxJQUFJYixZQUFZ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QUFpRTtJQUNqRU4sZ0RBQVNBLENBQUM7UUFDUixJQUFJLENBQUNJLFNBQVNvQixxQkFBcUIsRUFBRTtRQUVyQyxnRkFBZ0Y7UUFDaEYsTUFBTXlELGFBQ0osV0FBWUMsa0JBQWtCLENBQUNyRCxNQUFNLEdBQUcsS0FDdkN6QixTQUFTcUIsUUFBUSxDQUFDeUQsa0JBQWtCLENBQUNyRCxNQUFNLEtBQUsxQixXQUFXK0Usa0JBQWtCLENBQUNyRCxNQUFNLElBQ3BGMUIsV0FBV2dGLGVBQWUsSUFBSWhGLFdBQVdnRixlQUFlLEtBQUsvRSxTQUFTcUIsUUFBUSxDQUFDMEQsZUFBZTtRQUdqRyxJQUFJRixZQUFZO1lBQ2Q3RSxTQUFTZ0YsY0FBYyxDQUFDO2dCQUN0QkMsaUJBQWlCbEYsV0FBV2tGLGVBQWU7Z0JBQzNDSCxvQkFBb0IvRSxXQUFXK0Usa0JBQWtCO2dCQUNqREMsaUJBQWlCaEYsV0FBV2dGLGVBQWU7WUFDN0M7UUFDRjtJQUNGLEdBQUc7UUFBQ2hGLFdBQVcrRSxrQkFBa0I7UUFBRS9FLFdBQVdrRixlQUFlO1FBQUVsRixXQUFXZ0YsZUFBZTtRQUFFL0UsU0FBU29CLHFCQUFxQjtLQUFDO0lBRTFILE9BQU87QUFDVDtHQTNPZ0J0QjtLQUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb21wb25lbnRzL3dpemFyZC9DYXJkV2l6YXJkRWZmZWN0cy50c3g/ZGE0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQ2FyZEZvcm1EYXRhIH0gZnJvbSBcIkAvaG9va3MvdXNlQ2FyZEZvcm1cIjtcbmltcG9ydCB7IEdlbmVyYXRlZENhcmQgfSBmcm9tIFwiQC9ob29rcy9jYXJkU3R1ZGlvL2NvbnN0YW50c1wiO1xuXG5pbnRlcmZhY2UgQ2FyZFdpemFyZEVmZmVjdHNQcm9wcyB7XG4gIGNhcmRTdHVkaW86IGFueTtcbiAgY2FyZEZvcm06IGFueTtcbiAgY2FyZEhpc3Rvcnk6IGFueTtcbiAgd2l6YXJkU3RhdGU6IGFueTtcbiAgdXBkYXRlV2l6YXJkU3RhdGU6ICh1cGRhdGVzOiBhbnkpID0+IHZvaWQ7XG4gIGlzUmVzdW1pbmdEcmFmdDogYm9vbGVhbjtcbiAgaXNSZXN0b3JpbmdKb2JzOiBib29sZWFuO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQ2FyZFdpemFyZEVmZmVjdHMoe1xuICBjYXJkU3R1ZGlvLFxuICBjYXJkRm9ybSxcbiAgY2FyZEhpc3RvcnksXG4gIHdpemFyZFN0YXRlLFxuICB1cGRhdGVXaXphcmRTdGF0ZSxcbiAgaXNSZXN1bWluZ0RyYWZ0LFxuICBpc1Jlc3RvcmluZ0pvYnNcbn06IENhcmRXaXphcmRFZmZlY3RzUHJvcHMpIHtcbiAgLy8gQ2hlY2sgZm9yIHBlbmRpbmcgam9icyBvbiBjb21wb25lbnQgbW91bnQgYnV0IGRvbid0IGF1dG8tbmF2aWdhdGVcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCByZXN0b3JlUGVuZGluZ0pvYnMgPSBhc3luYyAoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZygn8J+UhCBDYXJkV2l6YXJkRWZmZWN0czogU3RhcnRpbmcgY2hlY2tQZW5kaW5nSm9icy4uLicpO1xuICAgICAgYXdhaXQgY2FyZFN0dWRpby5jaGVja1BlbmRpbmdKb2JzKCk7XG4gICAgICBcbiAgICAgIC8vIE9ubHkgYXV0by1uYXZpZ2F0ZSBpZiB0aGVyZSdzIGFuIGFjdGl2ZSBnZW5lcmF0aW9uIGluIHByb2dyZXNzXG4gICAgICAvLyBEb24ndCBuYXZpZ2F0ZSBmb3IgY29tcGxldGVkIGRyYWZ0cyAtIGxldCB1c2VyIGNob29zZVxuICAgICAgaWYgKGNhcmRTdHVkaW8uaXNHZW5lcmF0aW5nICYmIGNhcmRTdHVkaW8uZ2VuZXJhdGlvblByb2dyZXNzKSB7XG4gICAgICAgIGlmIChjYXJkU3R1ZGlvLmlzR2VuZXJhdGluZ0ZpbmFsQ2FyZCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCfwn5SEIFJlc3RvcmluZyB0byBTdGVwIDYgZHVlIHRvIG9uZ29pbmcgZmluYWwgZ2VuZXJhdGlvbicpO1xuICAgICAgICAgIC8vIE1hcmsgYWxsIHByZXZpb3VzIHN0ZXBzIGFzIGNvbXBsZXRlZFxuICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IDU7IGkrKykge1xuICAgICAgICAgICAgaWYgKCF3aXphcmRTdGF0ZS5jb21wbGV0ZWRTdGVwcy5pbmNsdWRlcyhpKSkgd2l6YXJkU3RhdGUubWFya1N0ZXBDb21wbGV0ZWQoaSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHdpemFyZFN0YXRlLnVwZGF0ZUN1cnJlbnRTdGVwKDYpO1xuICAgICAgICB9IGVsc2UgaWYgKGNhcmRTdHVkaW8uaXNEcmFmdE1vZGUgJiYgY2FyZFN0dWRpby5pc0dlbmVyYXRpbmcpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygn8J+UhCBSZXN0b3JpbmcgdG8gU3RlcCA1IGR1ZSB0byBvbmdvaW5nIGRyYWZ0IGdlbmVyYXRpb24nKTtcbiAgICAgICAgICAvLyBNYXJrIHByZXZpb3VzIHN0ZXBzIGFzIGNvbXBsZXRlZFxuICAgICAgICAgIGlmICghd2l6YXJkU3RhdGUuY29tcGxldGVkU3RlcHMuaW5jbHVkZXMoMSkpIHdpemFyZFN0YXRlLm1hcmtTdGVwQ29tcGxldGVkKDEpO1xuICAgICAgICAgIGlmICghd2l6YXJkU3RhdGUuY29tcGxldGVkU3RlcHMuaW5jbHVkZXMoMikpIHdpemFyZFN0YXRlLm1hcmtTdGVwQ29tcGxldGVkKDIpO1xuICAgICAgICAgIGlmICghd2l6YXJkU3RhdGUuY29tcGxldGVkU3RlcHMuaW5jbHVkZXMoMykpIHdpemFyZFN0YXRlLm1hcmtTdGVwQ29tcGxldGVkKDMpO1xuICAgICAgICAgIGlmICghd2l6YXJkU3RhdGUuY29tcGxldGVkU3RlcHMuaW5jbHVkZXMoNCkpIHdpemFyZFN0YXRlLm1hcmtTdGVwQ29tcGxldGVkKDQpO1xuICAgICAgICAgIHdpemFyZFN0YXRlLnVwZGF0ZUN1cnJlbnRTdGVwKDUpO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBObyBhY3RpdmUgZ2VuZXJhdGlvbiAtIHJlc2V0IHdpemFyZCB0byBzdGVwIDEgaWYgd2UncmUgb24gYSBsYXRlciBzdGVwXG4gICAgICAgIC8vIFRoaXMgaGFuZGxlcyB0aGUgY2FzZSB3aGVyZSB1c2VyIGxlZnQgb2ZmIG9uIHN0ZXAgNSBidXQgaXNuJ3QgYWN0aXZlbHkgZ2VuZXJhdGluZ1xuICAgICAgICBpZiAod2l6YXJkU3RhdGUuY3VycmVudFN0ZXAgPiAxICYmICFjYXJkU3R1ZGlvLmlzR2VuZXJhdGluZykge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCfwn5SEIE5vIGFjdGl2ZSBnZW5lcmF0aW9uLCByZXNldHRpbmcgdG8gU3RlcCAxJyk7XG4gICAgICAgICAgd2l6YXJkU3RhdGUudXBkYXRlQ3VycmVudFN0ZXAoMSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIC8vIElmIHdlIGhhdmUgY29tcGxldGVkIGRyYWZ0cyBidXQgbm8gYWN0aXZlIGdlbmVyYXRpb24sIHN0YXkgb24gU3RlcCAxXG4gICAgICAvLyBVc2VyIGNhbiBjaG9vc2UgdG8gcmVzdW1lIHZpYSB0aGUgVUlcbiAgICB9O1xuICAgIFxuICAgIHJlc3RvcmVQZW5kaW5nSm9icygpO1xuICB9LCBbXSk7XG5cbiAgLy8gT25seSBtYXJrIHN0ZXAgMSBhcyBjb21wbGV0ZWQgaWYgdXNlciBoYXMgbWFkZSBzZWxlY3Rpb25zLCBidXQgZG9uJ3QgYXV0by1hZHZhbmNlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCF3aXphcmRTdGF0ZS5pc0luaXRpYWxMb2FkQ29tcGxldGUgfHwgIWNhcmRGb3JtLmlzSW5pdGlhbExvYWRDb21wbGV0ZSkgcmV0dXJuO1xuICAgIFxuICAgIC8vIE9ubHkgbWFyayBzdGVwIGFzIGNvbXBsZXRlZCwgZG9uJ3QgbmF2aWdhdGVcbiAgICBpZiAod2l6YXJkU3RhdGUuY3VycmVudFN0ZXAgPT09IDEgJiYgIXdpemFyZFN0YXRlLmNvbXBsZXRlZFN0ZXBzLmluY2x1ZGVzKDEpKSB7XG4gICAgICBjb25zdCBmb3JtRGF0YSA9IGNhcmRGb3JtLmZvcm1EYXRhO1xuICAgICAgXG4gICAgICAvLyBNYXJrIHN0ZXAgMSBhcyBjb21wbGV0ZWQgaWYgdXNlciBoYXMgbWFkZSBzZWxlY3Rpb25zXG4gICAgICBpZiAoZm9ybURhdGEuc2VsZWN0ZWRUeXBlICYmIGZvcm1EYXRhLnNlbGVjdGVkVG9uZSkge1xuICAgICAgICBjb25zb2xlLmxvZygn4pyFIE1hcmtpbmcgc3RlcCAxIGFzIGNvbXBsZXRlZCBiYXNlZCBvbiBzYXZlZCBkYXRhJyk7XG4gICAgICAgIHdpemFyZFN0YXRlLm1hcmtTdGVwQ29tcGxldGVkKDEpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW3dpemFyZFN0YXRlLmlzSW5pdGlhbExvYWRDb21wbGV0ZSwgY2FyZEZvcm0uaXNJbml0aWFsTG9hZENvbXBsZXRlXSk7XG5cbiAgLy8gT25seSBuYXZpZ2F0ZSB0byBTdGVwIDUgd2hlbiBORVcgZHJhZnQgY2FyZHMgYXJlIGJlaW5nIGdlbmVyYXRlZCAobm90IHJlc3RvcmVkKVxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vIE9ubHkgbmF2aWdhdGUgaWYgd2UncmUgYWN0aXZlbHkgZ2VuZXJhdGluZyBORVcgZHJhZnRzLCBub3QgcmVzdG9yaW5nIG9sZCBvbmVzXG4gICAgaWYgKGNhcmRTdHVkaW8uZHJhZnRDYXJkcy5sZW5ndGggPiAwICYmIFxuICAgICAgICB3aXphcmRTdGF0ZS5jdXJyZW50U3RlcCA8IDUgJiYgXG4gICAgICAgIGNhcmRTdHVkaW8uaXNHZW5lcmF0aW5nICYmIFxuICAgICAgICAhaXNSZXN0b3JpbmdKb2JzKSB7XG4gICAgICBjb25zb2xlLmxvZygn8J+TiyBOZXcgZHJhZnQgY2FyZHMgYmVpbmcgZ2VuZXJhdGVkLCBuYXZpZ2F0aW5nIHRvIFN0ZXAgNScpO1xuICAgICAgLy8gTWFyayBwcmV2aW91cyBzdGVwcyBhcyBjb21wbGV0ZWRcbiAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IDQ7IGkrKykge1xuICAgICAgICBpZiAoIXdpemFyZFN0YXRlLmNvbXBsZXRlZFN0ZXBzLmluY2x1ZGVzKGkpKSB7XG4gICAgICAgICAgd2l6YXJkU3RhdGUubWFya1N0ZXBDb21wbGV0ZWQoaSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHdpemFyZFN0YXRlLnVwZGF0ZUN1cnJlbnRTdGVwKDUpO1xuICAgIH1cbiAgfSwgW2NhcmRTdHVkaW8uZHJhZnRDYXJkcy5sZW5ndGgsIGNhcmRTdHVkaW8uaXNHZW5lcmF0aW5nLCBpc1Jlc3RvcmluZ0pvYnNdKTtcblxuICAvLyBBdXRvLXNhdmUgZHJhZnRzIHdoZW4gdXNlciBjcmVhdGVzIGRyYWZ0IGNhcmRzXG4gIC8vIFRyYWNrIHRoZSBjdXJyZW50IHNlc3Npb24gSUQgdG8gdXBkYXRlIHRoZSBzYW1lIHNlc3Npb25cbiAgY29uc3QgW2N1cnJlbnREcmFmdFNlc3Npb25JZCwgc2V0Q3VycmVudERyYWZ0U2Vzc2lvbklkXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbbGFzdFNhdmVkRHJhZnRDb3VudCwgc2V0TGFzdFNhdmVkRHJhZnRDb3VudF0gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xuICBcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBPbmx5IHNhdmUgaWYgd2UgaGF2ZSBkcmFmdCBjYXJkcyBhbmQgbm90IHJlc3VtaW5nIG9yIHJlc3RvcmluZ1xuICAgIGlmIChjYXJkU3R1ZGlvLmRyYWZ0Q2FyZHMubGVuZ3RoID4gMCkge1xuICAgICAgY29uc29sZS5sb2coJ/CflI0gQXV0by1zYXZlIGNoZWNrOicsIHtcbiAgICAgICAgaGFzQ2FyZHM6IGNhcmRTdHVkaW8uZHJhZnRDYXJkcy5sZW5ndGggPiAwLFxuICAgICAgICBpc0luaXRpYWxMb2FkQ29tcGxldGU6IGNhcmRGb3JtLmlzSW5pdGlhbExvYWRDb21wbGV0ZSxcbiAgICAgICAgaXNSZXN1bWluZ0RyYWZ0LFxuICAgICAgICBpc1Jlc3RvcmluZ0pvYnMsXG4gICAgICAgIHNob3VsZFNhdmU6IGNhcmRGb3JtLmlzSW5pdGlhbExvYWRDb21wbGV0ZSAmJiAhaXNSZXN1bWluZ0RyYWZ0ICYmICFpc1Jlc3RvcmluZ0pvYnNcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICBpZiAoY2FyZFN0dWRpby5kcmFmdENhcmRzLmxlbmd0aCA+IDAgJiYgY2FyZEZvcm0uaXNJbml0aWFsTG9hZENvbXBsZXRlICYmICFpc1Jlc3VtaW5nRHJhZnQgJiYgIWlzUmVzdG9yaW5nSm9icykge1xuICAgICAgLy8gQ291bnQgbm9uLW51bGwgZHJhZnQgY2FyZHNcbiAgICAgIGNvbnN0IHZhbGlkRHJhZnRzID0gY2FyZFN0dWRpby5kcmFmdENhcmRzLmZpbHRlcihjYXJkID0+IGNhcmQgIT09IG51bGwpLmxlbmd0aDtcbiAgICAgIFxuICAgICAgLy8gT25seSBzYXZlIHdoZW46XG4gICAgICAvLyAxLiBBbGwgNSBkcmFmdHMgYXJlIGNvbXBsZXRlICh2YWxpZERyYWZ0cyA9PT0gNSlcbiAgICAgIC8vIDIuIFRoaXMgaXMgdGhlIGZpcnN0IGRyYWZ0IGFuZCB3ZSBoYXZlbid0IHNhdmVkIHlldCAodmFsaWREcmFmdHMgPT09IDEgJiYgIWN1cnJlbnREcmFmdFNlc3Npb25JZClcbiAgICAgIC8vIDMuIFVzZXIgc2VsZWN0ZWQgYSBkcmFmdCAoc2VsZWN0ZWREcmFmdEluZGV4ID49IDApXG4gICAgICBjb25zdCBzaG91bGRTYXZlID0gKFxuICAgICAgICAodmFsaWREcmFmdHMgPT09IDUgJiYgbGFzdFNhdmVkRHJhZnRDb3VudCA8IDUpIHx8IC8vIEFsbCBkcmFmdHMgY29tcGxldGVcbiAgICAgICAgKHZhbGlkRHJhZnRzID09PSAxICYmICFjdXJyZW50RHJhZnRTZXNzaW9uSWQpIHx8IC8vIEZpcnN0IGRyYWZ0XG4gICAgICAgIChjYXJkU3R1ZGlvLnNlbGVjdGVkRHJhZnRJbmRleCA+PSAwICYmIHZhbGlkRHJhZnRzID4gbGFzdFNhdmVkRHJhZnRDb3VudCkgLy8gVXNlciBzZWxlY3RlZFxuICAgICAgKTtcbiAgICAgIFxuICAgICAgaWYgKHNob3VsZFNhdmUgJiYgdmFsaWREcmFmdHMgPiAwKSB7XG4gICAgICAgIC8vIFNhdmUgb3IgdXBkYXRlIHRoZSBzZXNzaW9uIHdpdGggdGhlIHNhbWUgSURcbiAgICAgICAgY29uc3Qgc2Vzc2lvbklkID0gY2FyZEhpc3Rvcnkuc2F2ZURyYWZ0U2Vzc2lvbihcbiAgICAgICAgICBjYXJkRm9ybS5mb3JtRGF0YSxcbiAgICAgICAgICBjYXJkU3R1ZGlvLmRyYWZ0Q2FyZHMsXG4gICAgICAgICAgY2FyZFN0dWRpby5zZWxlY3RlZERyYWZ0SW5kZXgsXG4gICAgICAgICAgY3VycmVudERyYWZ0U2Vzc2lvbklkIHx8IHVuZGVmaW5lZCAvLyBVc2UgZXhpc3Rpbmcgc2Vzc2lvbiBJRCBpZiBhdmFpbGFibGVcbiAgICAgICAgKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFN0b3JlIHRoZSBzZXNzaW9uIElEIGZvciBmdXR1cmUgdXBkYXRlc1xuICAgICAgICBpZiAoIWN1cnJlbnREcmFmdFNlc3Npb25JZCkge1xuICAgICAgICAgIHNldEN1cnJlbnREcmFmdFNlc3Npb25JZChzZXNzaW9uSWQpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBVcGRhdGUgdGhlIGxhc3Qgc2F2ZWQgY291bnRcbiAgICAgICAgc2V0TGFzdFNhdmVkRHJhZnRDb3VudCh2YWxpZERyYWZ0cyk7XG4gICAgICAgIFxuICAgICAgICBjb25zb2xlLmxvZyhg8J+SviBEcmFmdCBzZXNzaW9uIHNhdmVkOiAke3ZhbGlkRHJhZnRzfS81IGRyYWZ0cyBjb21wbGV0ZWApO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW2NhcmRTdHVkaW8uZHJhZnRDYXJkcywgY2FyZFN0dWRpby5zZWxlY3RlZERyYWZ0SW5kZXgsIGNhcmRGb3JtLmZvcm1EYXRhLCBjYXJkRm9ybS5pc0luaXRpYWxMb2FkQ29tcGxldGUsIGlzUmVzdW1pbmdEcmFmdCwgaXNSZXN0b3JpbmdKb2JzLCBjdXJyZW50RHJhZnRTZXNzaW9uSWQsIGxhc3RTYXZlZERyYWZ0Q291bnRdKTtcbiAgXG4gIC8vIFJlc2V0IHNlc3Npb24gSUQgd2hlbiBkcmFmdHMgYXJlIGNsZWFyZWRcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB2YWxpZERyYWZ0cyA9IGNhcmRTdHVkaW8uZHJhZnRDYXJkcy5maWx0ZXIoY2FyZCA9PiBjYXJkICE9PSBudWxsKS5sZW5ndGg7XG4gICAgaWYgKHZhbGlkRHJhZnRzID09PSAwKSB7XG4gICAgICBzZXRDdXJyZW50RHJhZnRTZXNzaW9uSWQobnVsbCk7XG4gICAgICBzZXRMYXN0U2F2ZWREcmFmdENvdW50KDApO1xuICAgIH1cbiAgfSwgW2NhcmRTdHVkaW8uZHJhZnRDYXJkc10pO1xuXG4gIC8vIEF1dG8tc2F2ZSBjb21wbGV0ZWQgY2FyZHMgYW5kIGVuc3VyZSB3ZSdyZSBvbiBTdGVwIDZcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoY2FyZFN0dWRpby5nZW5lcmF0ZWRDYXJkICYmIGNhcmRTdHVkaW8uaXNDYXJkQ29tcGxldGVkKSB7XG4gICAgICBjYXJkSGlzdG9yeS5hZGRDb21wbGV0ZWRDYXJkKGNhcmRTdHVkaW8uZ2VuZXJhdGVkQ2FyZCk7XG4gICAgICBcbiAgICAgIC8vIEVuc3VyZSB3ZSdyZSBvbiBTdGVwIDYgdG8gc2VlIHRoZSBjb21wbGV0ZWQgY2FyZFxuICAgICAgaWYgKHdpemFyZFN0YXRlLmN1cnJlbnRTdGVwICE9PSA2KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCfwn5ONIENhcmQgY29tcGxldGVkIGJ1dCBub3Qgb24gU3RlcCA2LCBuYXZpZ2F0aW5nIHRoZXJlIG5vdy4uLicpO1xuICAgICAgICB3aXphcmRTdGF0ZS51cGRhdGVDdXJyZW50U3RlcCg2KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtjYXJkU3R1ZGlvLmdlbmVyYXRlZENhcmQsIGNhcmRTdHVkaW8uaXNDYXJkQ29tcGxldGVkLCB3aXphcmRTdGF0ZS5jdXJyZW50U3RlcF0pO1xuXG4gIC8vIFN5bmMgZm9ybSBkYXRhIHdpdGggY2FyZFN0dWRpbyB3aGVuIGZvcm0gZGF0YSBjaGFuZ2VzXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFjYXJkRm9ybS5pc0luaXRpYWxMb2FkQ29tcGxldGUpIHJldHVybjtcblxuICAgIGNvbnN0IHsgZm9ybURhdGEgfSA9IGNhcmRGb3JtO1xuICAgIFxuICAgIC8vIFVwZGF0ZSBjYXJkU3R1ZGlvIHdpdGggZm9ybSBkYXRhXG4gICAgY2FyZFN0dWRpby5zZXRTZWxlY3RlZFR5cGUoZm9ybURhdGEuc2VsZWN0ZWRUeXBlKTtcbiAgICBjYXJkU3R1ZGlvLnNldEN1c3RvbUNhcmRUeXBlKGZvcm1EYXRhLmN1c3RvbUNhcmRUeXBlKTtcbiAgICBjYXJkU3R1ZGlvLnNldFNlbGVjdGVkVG9uZShmb3JtRGF0YS5zZWxlY3RlZFRvbmUpO1xuICAgIGNhcmRTdHVkaW8uc2V0VG9GaWVsZChmb3JtRGF0YS50b0ZpZWxkKTtcbiAgICBjYXJkU3R1ZGlvLnNldEZyb21GaWVsZChmb3JtRGF0YS5mcm9tRmllbGQpO1xuICAgIGNhcmRTdHVkaW8uc2V0UmVsYXRpb25zaGlwRmllbGQoZm9ybURhdGEucmVsYXRpb25zaGlwRmllbGQpO1xuICAgIGNhcmRTdHVkaW8uc2V0UHJvbXB0KGZvcm1EYXRhLnByb21wdCk7XG4gICAgY2FyZFN0dWRpby5zZXRGaW5hbENhcmRNZXNzYWdlKGZvcm1EYXRhLmZpbmFsQ2FyZE1lc3NhZ2UpO1xuICAgIGNhcmRTdHVkaW8uc2V0SXNIYW5kd3JpdHRlbk1lc3NhZ2UoZm9ybURhdGEuaXNIYW5kd3JpdHRlbk1lc3NhZ2UpO1xuICAgIGNhcmRTdHVkaW8uc2V0U2VsZWN0ZWRBcnRpc3RpY1N0eWxlKGZvcm1EYXRhLnNlbGVjdGVkQXJ0aXN0aWNTdHlsZSk7XG4gICAgY2FyZFN0dWRpby5zZXRDdXN0b21TdHlsZURlc2NyaXB0aW9uKGZvcm1EYXRhLmN1c3RvbVN0eWxlRGVzY3JpcHRpb24pO1xuICAgIC8vIFNraXAgc3luY2luZyByZWZlcmVuY2UgaW1hZ2VzIGZyb20gZm9ybSB0byBjYXJkU3R1ZGlvXG4gICAgLy8gVGhpcyBzaG91bGQgb25seSBmbG93IGZyb20gY2FyZFN0dWRpbyAtPiBmb3JtIGFmdGVyIHVwbG9hZHNcbiAgICAvLyBjYXJkU3R1ZGlvLnNldFJlZmVyZW5jZUltYWdlcyhmb3JtRGF0YS5yZWZlcmVuY2VJbWFnZXMpO1xuICAgIC8vIGNhcmRTdHVkaW8uc2V0UmVmZXJlbmNlSW1hZ2VVcmxzKGZvcm1EYXRhLnJlZmVyZW5jZUltYWdlVXJscyk7XG4gICAgY2FyZFN0dWRpby5zZXRJbWFnZVRyYW5zZm9ybWF0aW9uKGZvcm1EYXRhLmltYWdlVHJhbnNmb3JtYXRpb24pO1xuICAgIGNhcmRTdHVkaW8uc2V0VXNlckVtYWlsKGZvcm1EYXRhLnVzZXJFbWFpbCk7XG4gICAgY2FyZFN0dWRpby5zZXRTZWxlY3RlZEltYWdlTW9kZWwoZm9ybURhdGEuc2VsZWN0ZWRJbWFnZU1vZGVsKTtcbiAgICBjYXJkU3R1ZGlvLnNldFNlbGVjdGVkRHJhZnRNb2RlbChmb3JtRGF0YS5zZWxlY3RlZERyYWZ0TW9kZWwpO1xuICAgIGNhcmRTdHVkaW8uc2V0U2VsZWN0ZWRQYXBlclNpemUoZm9ybURhdGEuc2VsZWN0ZWRQYXBlclNpemUpO1xuICAgIGNhcmRTdHVkaW8uc2V0TnVtYmVyT2ZDYXJkcyhmb3JtRGF0YS5udW1iZXJPZkNhcmRzKTtcbiAgICBjYXJkU3R1ZGlvLnNldElzRnJvbnRCYWNrT25seShmb3JtRGF0YS5pc0Zyb250QmFja09ubHkpO1xuICB9LCBbY2FyZEZvcm0uZm9ybURhdGEsIGNhcmRGb3JtLmlzSW5pdGlhbExvYWRDb21wbGV0ZV0pO1xuXG4gIC8vIEF1dG8tY29tcGxldGUgc3RlcCAxIG9uY2UgdXNlciBtYWtlcyBzZWxlY3Rpb25zXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGNhcmRGb3JtLnZhbGlkYXRlU3RlcCgxKSAmJiAhd2l6YXJkU3RhdGUuY29tcGxldGVkU3RlcHMuaW5jbHVkZXMoMSkpIHtcbiAgICAgIHdpemFyZFN0YXRlLm1hcmtTdGVwQ29tcGxldGVkKDEpO1xuICAgIH1cbiAgfSwgW2NhcmRGb3JtLmZvcm1EYXRhLnNlbGVjdGVkVHlwZSwgY2FyZEZvcm0uZm9ybURhdGEuc2VsZWN0ZWRUb25lLCBjYXJkRm9ybS5mb3JtRGF0YS5jdXN0b21DYXJkVHlwZSwgd2l6YXJkU3RhdGVdKTtcblxuICAvLyBBdXRvLWNvbXBsZXRlIHN0ZXAgNCBvbmNlIGVtYWlsIGlzIHZhbGlkXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGNhcmRGb3JtLnZhbGlkYXRlU3RlcCg0KSAmJiAhd2l6YXJkU3RhdGUuY29tcGxldGVkU3RlcHMuaW5jbHVkZXMoNCkpIHtcbiAgICAgIHdpemFyZFN0YXRlLm1hcmtTdGVwQ29tcGxldGVkKDQpO1xuICAgIH1cbiAgfSwgW2NhcmRGb3JtLmZvcm1EYXRhLnVzZXJFbWFpbCwgd2l6YXJkU3RhdGVdKTtcblxuICAvLyBBdXRvLWFkdmFuY2UgdG8gU3RlcCA2IHdoZW4gZmluYWwgY2FyZCBnZW5lcmF0aW9uIHN0YXJ0c1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChjYXJkU3R1ZGlvLmlzR2VuZXJhdGluZ0ZpbmFsQ2FyZCAmJiB3aXphcmRTdGF0ZS5jdXJyZW50U3RlcCA8IDYpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfwn5qAIEF1dG8tYWR2YW5jaW5nIHRvIFN0ZXAgNjogRmluYWwgR2VuZXJhdGlvbicpO1xuICAgICAgaWYgKCF3aXphcmRTdGF0ZS5jb21wbGV0ZWRTdGVwcy5pbmNsdWRlcyg1KSkge1xuICAgICAgICB3aXphcmRTdGF0ZS5tYXJrU3RlcENvbXBsZXRlZCg1KTtcbiAgICAgIH1cbiAgICAgIHdpemFyZFN0YXRlLnVwZGF0ZUN1cnJlbnRTdGVwKDYpO1xuICAgIH1cbiAgfSwgW2NhcmRTdHVkaW8uaXNHZW5lcmF0aW5nRmluYWxDYXJkLCB3aXphcmRTdGF0ZV0pO1xuXG4gIC8vIFN5bmMgcmVmZXJlbmNlIGltYWdlcyBmcm9tIGNhcmRTdHVkaW8gdG8gZm9ybSB3aGVuIHRoZXkgY2hhbmdlXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKCFjYXJkRm9ybS5pc0luaXRpYWxMb2FkQ29tcGxldGUpIHJldHVybjtcbiAgICBcbiAgICAvLyBTeW5jIGlmIGNhcmRTdHVkaW8gaGFzIGltYWdlcyBidXQgZm9ybSBkb2Vzbid0LCBvciBpZiBwaG90b1JlZmVyZW5jZXMgY2hhbmdlZFxuICAgIGNvbnN0IHNob3VsZFN5bmMgPSAoXG4gICAgICAoY2FyZFN0dWRpby5yZWZlcmVuY2VJbWFnZVVybHMubGVuZ3RoID4gMCAmJiBcbiAgICAgICBjYXJkRm9ybS5mb3JtRGF0YS5yZWZlcmVuY2VJbWFnZVVybHMubGVuZ3RoICE9PSBjYXJkU3R1ZGlvLnJlZmVyZW5jZUltYWdlVXJscy5sZW5ndGgpIHx8XG4gICAgICAoY2FyZFN0dWRpby5waG90b1JlZmVyZW5jZXMgJiYgY2FyZFN0dWRpby5waG90b1JlZmVyZW5jZXMgIT09IGNhcmRGb3JtLmZvcm1EYXRhLnBob3RvUmVmZXJlbmNlcylcbiAgICApO1xuICAgIFxuICAgIGlmIChzaG91bGRTeW5jKSB7XG4gICAgICBjYXJkRm9ybS51cGRhdGVGb3JtRGF0YSh7XG4gICAgICAgIHJlZmVyZW5jZUltYWdlczogY2FyZFN0dWRpby5yZWZlcmVuY2VJbWFnZXMsXG4gICAgICAgIHJlZmVyZW5jZUltYWdlVXJsczogY2FyZFN0dWRpby5yZWZlcmVuY2VJbWFnZVVybHMsXG4gICAgICAgIHBob3RvUmVmZXJlbmNlczogY2FyZFN0dWRpby5waG90b1JlZmVyZW5jZXNcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW2NhcmRTdHVkaW8ucmVmZXJlbmNlSW1hZ2VVcmxzLCBjYXJkU3R1ZGlvLnJlZmVyZW5jZUltYWdlcywgY2FyZFN0dWRpby5waG90b1JlZmVyZW5jZXMsIGNhcmRGb3JtLmlzSW5pdGlhbExvYWRDb21wbGV0ZV0pO1xuXG4gIHJldHVybiBudWxsO1xufSJdLCJuYW1lcyI6WyJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsIkNhcmRXaXphcmRFZmZlY3RzIiwiY2FyZFN0dWRpbyIsImNhcmRGb3JtIiwiY2FyZEhpc3RvcnkiLCJ3aXphcmRTdGF0ZSIsInVwZGF0ZVdpemFyZFN0YXRlIiwiaXNSZXN1bWluZ0RyYWZ0IiwiaXNSZXN0b3JpbmdKb2JzIiwicmVzdG9yZVBlbmRpbmdKb2JzIiwiY29uc29sZSIsImxvZyIsImNoZWNrUGVuZGluZ0pvYnMiLCJpc0dlbmVyYXRpbmciLCJnZW5lcmF0aW9uUHJvZ3Jlc3MiLCJpc0dlbmVyYXRpbmdGaW5hbENhcmQiLCJpIiwiY29tcGxldGVkU3RlcHMiLCJpbmNsdWRlcyIsIm1hcmtTdGVwQ29tcGxldGVkIiwidXBkYXRlQ3VycmVudFN0ZXAiLCJpc0RyYWZ0TW9kZSIsImN1cnJlbnRTdGVwIiwiaXNJbml0aWFsTG9hZENvbXBsZXRlIiwiZm9ybURhdGEiLCJzZWxlY3RlZFR5cGUiLCJzZWxlY3RlZFRvbmUiLCJkcmFmdENhcmRzIiwibGVuZ3RoIiwiY3VycmVudERyYWZ0U2Vzc2lvbklkIiwic2V0Q3VycmVudERyYWZ0U2Vzc2lvbklkIiwibGFzdFNhdmVkRHJhZnRDb3VudCIsInNldExhc3RTYXZlZERyYWZ0Q291bnQiLCJoYXNDYXJkcyIsInNob3VsZFNhdmUiLCJ2YWxpZERyYWZ0cyIsImZpbHRlciIsImNhcmQiLCJzZWxlY3RlZERyYWZ0SW5kZXgiLCJzZXNzaW9uSWQiLCJzYXZlRHJhZnRTZXNzaW9uIiwidW5kZWZpbmVkIiwiZ2VuZXJhdGVkQ2FyZCIsImlzQ2FyZENvbXBsZXRlZCIsImFkZENvbXBsZXRlZENhcmQiLCJzZXRTZWxlY3RlZFR5cGUiLCJzZXRDdXN0b21DYXJkVHlwZSIsImN1c3RvbUNhcmRUeXBlIiwic2V0U2VsZWN0ZWRUb25lIiwic2V0VG9GaWVsZCIsInRvRmllbGQiLCJzZXRGcm9tRmllbGQiLCJmcm9tRmllbGQiLCJzZXRSZWxhdGlvbnNoaXBGaWVsZCIsInJlbGF0aW9uc2hpcEZpZWxkIiwic2V0UHJvbXB0IiwicHJvbXB0Iiwic2V0RmluYWxDYXJkTWVzc2FnZSIsImZpbmFsQ2FyZE1lc3NhZ2UiLCJzZXRJc0hhbmR3cml0dGVuTWVzc2FnZSIsImlzSGFuZHdyaXR0ZW5NZXNzYWdlIiwic2V0U2VsZWN0ZWRBcnRpc3RpY1N0eWxlIiwic2VsZWN0ZWRBcnRpc3RpY1N0eWxlIiwic2V0Q3VzdG9tU3R5bGVEZXNjcmlwdGlvbiIsImN1c3RvbVN0eWxlRGVzY3JpcHRpb24iLCJzZXRJbWFnZVRyYW5zZm9ybWF0aW9uIiwiaW1hZ2VUcmFuc2Zvcm1hdGlvbiIsInNldFVzZXJFbWFpbCIsInVzZXJFbWFpbCIsInNldFNlbGVjdGVkSW1hZ2VNb2RlbCIsInNlbGVjdGVkSW1hZ2VNb2RlbCIsInNldFNlbGVjdGVkRHJhZnRNb2RlbCIsInNlbGVjdGVkRHJhZnRNb2RlbCIsInNldFNlbGVjdGVkUGFwZXJTaXplIiwic2VsZWN0ZWRQYXBlclNpemUiLCJzZXROdW1iZXJPZkNhcmRzIiwibnVtYmVyT2ZDYXJkcyIsInNldElzRnJvbnRCYWNrT25seSIsImlzRnJvbnRCYWNrT25seSIsInZhbGlkYXRlU3RlcCIsInNob3VsZFN5bmMiLCJyZWZlcmVuY2VJbWFnZVVybHMiLCJwaG90b1JlZmVyZW5jZXMiLCJ1cGRhdGVGb3JtRGF0YSIsInJlZmVyZW5jZUltYWdlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/wizard/CardWizardEffects.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/wizard/CardWizardHelpers.tsx":
/*!*************************************************!*\
  !*** ./components/wizard/CardWizardHelpers.tsx ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFileUploadWrapper: function() { return /* binding */ createFileUploadWrapper; },\n/* harmony export */   createMessageHelpWrapper: function() { return /* binding */ createMessageHelpWrapper; },\n/* harmony export */   createRedoWrapper: function() { return /* binding */ createRedoWrapper; },\n/* harmony export */   createUndoWrapper: function() { return /* binding */ createUndoWrapper; },\n/* harmony export */   extractCardTypeFromPrompt: function() { return /* binding */ extractCardTypeFromPrompt; },\n/* harmony export */   handleResumeDraft: function() { return /* binding */ handleResumeDraft; },\n/* harmony export */   handleTemplateSelect: function() { return /* binding */ handleTemplateSelect; }\n/* harmony export */ });\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ extractCardTypeFromPrompt,createFileUploadWrapper,createMessageHelpWrapper,createUndoWrapper,createRedoWrapper,handleTemplateSelect,handleResumeDraft auto */ \n// Extract card type from prompt (basic implementation)\nconst extractCardTypeFromPrompt = (prompt)=>{\n    if (!prompt) return null;\n    const lowerPrompt = prompt.toLowerCase();\n    if (lowerPrompt.includes(\"birthday\")) return \"birthday\";\n    if (lowerPrompt.includes(\"thank\") || lowerPrompt.includes(\"grateful\")) return \"thank-you\";\n    if (lowerPrompt.includes(\"anniversary\")) return \"anniversary\";\n    if (lowerPrompt.includes(\"congratulat\")) return \"congratulations\";\n    if (lowerPrompt.includes(\"holiday\") || lowerPrompt.includes(\"christmas\") || lowerPrompt.includes(\"new year\")) return \"holiday\";\n    if (lowerPrompt.includes(\"love\") || lowerPrompt.includes(\"romantic\")) return \"love\";\n    if (lowerPrompt.includes(\"wedding\")) return \"wedding\";\n    if (lowerPrompt.includes(\"graduat\")) return \"graduation\";\n    if (lowerPrompt.includes(\"baby\")) return \"new-baby\";\n    if (lowerPrompt.includes(\"sorry\") || lowerPrompt.includes(\"apolog\")) return \"apology\";\n    return null;\n};\n// Create a wrapper for handleFileUpload that updates both form and cardStudio\nconst createFileUploadWrapper = (cardStudio, cardForm, updateFormData)=>{\n    return async (file, type)=>{\n        // Store the current state before upload\n        const prevImages = cardForm.formData.referenceImages || [];\n        const prevUrls = cardForm.formData.referenceImageUrls || [];\n        // Use the handleFileUpload method from cardStudio (useFileHandling hook)\n        // This will properly trigger the photo analysis modal\n        await cardStudio.handleFileUpload(file, type);\n        // After successful upload, sync the form data with cardStudio state\n        // For reference images, we need to sync the state immediately\n        if (type === \"reference\") {\n            // Wait a moment to ensure cardStudio state is updated\n            // This needs to be longer to avoid race conditions with CardWizardEffects\n            await new Promise((resolve)=>setTimeout(resolve, 100));\n            // Force sync the updated state to form data\n            // Get the latest state from cardStudio\n            const currentImages = cardStudio.referenceImages;\n            const currentUrls = cardStudio.referenceImageUrls;\n            // Always update form data with the current state\n            updateFormData({\n                referenceImages: currentImages,\n                referenceImageUrls: currentUrls\n            });\n        }\n    };\n};\n// Create a wrapper for handleGetMessageHelp that updates both form and cardStudio\nconst createMessageHelpWrapper = (cardStudio, updateFormData)=>{\n    return async ()=>{\n        const generatedMessage = await cardStudio.handleGetMessageHelp();\n        // After message generation, update the form data with the new message\n        if (generatedMessage) {\n            updateFormData({\n                finalCardMessage: generatedMessage\n            });\n        }\n    };\n};\n// Create wrappers for undo/redo that update both form and cardStudio\nconst createUndoWrapper = (cardStudio, updateFormData)=>{\n    return ()=>{\n        cardStudio.undoMessage();\n        // Update form data with the new message from history\n        if (cardStudio.currentMessageIndex > 0) {\n            const newMessage = cardStudio.messageHistory[cardStudio.currentMessageIndex - 1];\n            updateFormData({\n                finalCardMessage: newMessage\n            });\n        }\n    };\n};\nconst createRedoWrapper = (cardStudio, updateFormData)=>{\n    return ()=>{\n        cardStudio.redoMessage();\n        // Update form data with the new message from history\n        if (cardStudio.currentMessageIndex < cardStudio.messageHistory.length - 1) {\n            const newMessage = cardStudio.messageHistory[cardStudio.currentMessageIndex + 1];\n            updateFormData({\n                finalCardMessage: newMessage\n            });\n        }\n    };\n};\n// Handle template selection\nconst handleTemplateSelect = (template, updateFormData, cardStudio)=>{\n    var _template_styleInfo;\n    // Update form data with template information\n    updateFormData({\n        prompt: template.prompt || \"\",\n        selectedType: extractCardTypeFromPrompt(template.prompt) || cardStudio.selectedType,\n        selectedArtisticStyle: ((_template_styleInfo = template.styleInfo) === null || _template_styleInfo === void 0 ? void 0 : _template_styleInfo.styleName) || cardStudio.selectedArtisticStyle\n    });\n    // Store template info in cardStudio for later use\n    cardStudio.setSelectedTemplate(template);\n};\n// Resume draft session\nconst handleResumeDraft = (sessionId, cardHistory, cardForm, cardStudio, wizardState, setIsResumingDraft)=>{\n    // Set flag to prevent auto-saving during resume\n    setIsResumingDraft(true);\n    const session = cardHistory.resumeDraftSession(sessionId);\n    if (session) {\n        // Update form data with saved session data\n        cardForm.updateFormData(session.formData);\n        // Update cardStudio with draft cards\n        cardStudio.setDraftCards(session.draftCards);\n        cardStudio.setSelectedDraftIndex(session.selectedDraftIndex);\n        cardStudio.setIsDraftMode(true);\n        // Navigate to appropriate step\n        if (session.draftCards.length > 0) {\n            // If drafts exist, go to draft selection step\n            wizardState.updateCurrentStep(5);\n        } else {\n            // Otherwise go to content creation step\n            wizardState.updateCurrentStep(2);\n        }\n        sonner__WEBPACK_IMPORTED_MODULE_0__.toast.success(\"Draft session resumed successfully!\");\n        // Reset flag after a short delay to allow state updates to complete\n        setTimeout(()=>{\n            setIsResumingDraft(false);\n        }, 100);\n    } else {\n        setIsResumingDraft(false);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/wizard/CardWizardHelpers.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./components/wizard/CardWizardSteps.tsx":
/*!***********************************************!*\
  !*** ./components/wizard/CardWizardSteps.tsx ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardWizardSteps: function() { return /* binding */ CardWizardSteps; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _steps_Step1CardBasics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./steps/Step1CardBasics */ \"(app-pages-browser)/./components/wizard/steps/Step1CardBasics.tsx\");\n/* harmony import */ var _steps_Step2ContentCreation__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./steps/Step2ContentCreation */ \"(app-pages-browser)/./components/wizard/steps/Step2ContentCreation.tsx\");\n/* harmony import */ var _steps_Step3Personalization__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./steps/Step3Personalization */ \"(app-pages-browser)/./components/wizard/steps/Step3Personalization.tsx\");\n/* harmony import */ var _steps_Step4Details__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./steps/Step4Details */ \"(app-pages-browser)/./components/wizard/steps/Step4Details.tsx\");\n/* harmony import */ var _steps_Step5Review__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./steps/Step5Review */ \"(app-pages-browser)/./components/wizard/steps/Step5Review.tsx\");\n/* harmony import */ var _steps_Step6FinalGeneration__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./steps/Step6FinalGeneration */ \"(app-pages-browser)/./components/wizard/steps/Step6FinalGeneration.tsx\");\n/* __next_internal_client_entry_do_not_use__ CardWizardSteps auto */ \n\n\n\n\n\n\n\nfunction CardWizardSteps(param) {\n    let { currentStep, formData, updateFormData, cardStudio, wizardState, handleFileUploadWrapper, handleGetMessageHelpWrapper, undoMessageWrapper, redoMessageWrapper, handleTemplateSelect, cardHistory, handleResumeDraft } = param;\n    switch(currentStep){\n        case 1:\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_Step1CardBasics__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                formData: formData,\n                updateFormData: updateFormData,\n                onStepComplete: ()=>{\n                    if (!wizardState.completedSteps.includes(1)) {\n                        wizardState.markStepCompleted(1);\n                    }\n                },\n                onTemplateSelect: handleTemplateSelect,\n                // Photo upload props (moved from Step3)\n                handleFileUpload: handleFileUploadWrapper,\n                handleRemoveReferenceImage: (index)=>{\n                    // Update both cardStudio and form data\n                    const newImages = formData.referenceImages.filter((_, i)=>i !== index);\n                    const newUrls = formData.referenceImageUrls.filter((_, i)=>i !== index);\n                    // Update cardStudio state\n                    cardStudio.setReferenceImages(newImages);\n                    cardStudio.setReferenceImageUrls(newUrls);\n                    cardStudio.handleRemoveReferenceImage(index);\n                    // Update form data\n                    updateFormData({\n                        referenceImages: newImages,\n                        referenceImageUrls: newUrls\n                    });\n                },\n                isUploading: cardStudio.isUploading,\n                // Simplified photo references\n                photoReferences: cardStudio.photoReferences,\n                updatePhotoDescription: cardStudio.updatePhotoDescription,\n                // Pass cardStudio's URLs directly for immediate access\n                referenceImageUrlsFromStudio: cardStudio.referenceImageUrls,\n                // Card history props\n                cardHistory: cardHistory,\n                onResumeDraft: handleResumeDraft\n            }, void 0, false, {\n                fileName: \"/var/www/flask_app/ast_chat/components/wizard/CardWizardSteps.tsx\",\n                lineNumber: 44,\n                columnNumber: 9\n            }, this);\n        case 2:\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_Step2ContentCreation__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                formData: formData,\n                updateFormData: updateFormData,\n                onStepComplete: ()=>{\n                    if (!wizardState.completedSteps.includes(2)) {\n                        wizardState.markStepCompleted(2);\n                    }\n                },\n                handleGetMessageHelp: handleGetMessageHelpWrapper,\n                isGeneratingMessage: cardStudio.isGeneratingMessage,\n                messageHistory: cardStudio.messageHistory,\n                currentMessageIndex: cardStudio.currentMessageIndex,\n                undoMessage: undoMessageWrapper,\n                redoMessage: redoMessageWrapper,\n                photoReferences: cardStudio.photoReferences\n            }, void 0, false, {\n                fileName: \"/var/www/flask_app/ast_chat/components/wizard/CardWizardSteps.tsx\",\n                lineNumber: 85,\n                columnNumber: 9\n            }, this);\n        case 3:\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_Step3Personalization__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                formData: formData,\n                updateFormData: updateFormData,\n                onStepComplete: ()=>{\n                    if (!wizardState.completedSteps.includes(3)) {\n                        wizardState.markStepCompleted(3);\n                    }\n                }\n            }, void 0, false, {\n                fileName: \"/var/www/flask_app/ast_chat/components/wizard/CardWizardSteps.tsx\",\n                lineNumber: 105,\n                columnNumber: 9\n            }, this);\n        case 4:\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_Step4Details__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                formData: formData,\n                updateFormData: updateFormData,\n                onStepComplete: ()=>{\n                    if (!wizardState.completedSteps.includes(4)) {\n                        wizardState.markStepCompleted(4);\n                    }\n                }\n            }, void 0, false, {\n                fileName: \"/var/www/flask_app/ast_chat/components/wizard/CardWizardSteps.tsx\",\n                lineNumber: 118,\n                columnNumber: 9\n            }, this);\n        case 5:\n            // Log only significant state changes\n            if (true) {\n                const stateKey = \"\".concat(cardStudio.isGenerating, \"-\").concat(cardStudio.isDraftMode, \"-\").concat(cardStudio.draftCards.length);\n                if (window.lastStep5State !== stateKey) {\n                    console.log(\"\\uD83D\\uDCCD Step 5 state changed:\", {\n                        isGenerating: cardStudio.isGenerating,\n                        isDraftMode: cardStudio.isDraftMode,\n                        draftCards: cardStudio.draftCards.length,\n                        progressPercentage: cardStudio.progressPercentage\n                    });\n                    window.lastStep5State = stateKey;\n                }\n            }\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_Step5Review__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                formData: formData,\n                updateFormData: updateFormData,\n                onStepComplete: ()=>{\n                    if (!wizardState.completedSteps.includes(5)) {\n                        wizardState.markStepCompleted(5);\n                    }\n                },\n                isGenerating: cardStudio.isGenerating,\n                isGeneratingFinalCard: cardStudio.isGeneratingFinalCard,\n                isGeneratingMessage: cardStudio.isGeneratingMessage,\n                generationProgress: cardStudio.generationProgress,\n                progressPercentage: cardStudio.progressPercentage,\n                currentElapsedTime: cardStudio.currentElapsedTime,\n                isDraftMode: cardStudio.isDraftMode,\n                draftCards: cardStudio.draftCards,\n                selectedDraftIndex: cardStudio.selectedDraftIndex,\n                formatGenerationTime: cardStudio.formatGenerationTime,\n                onGenerateDraftCards: cardStudio.handleGenerateDraftCards,\n                onSelectDraft: (index)=>{\n                    cardStudio.setSelectedDraftIndex(index);\n                    // Auto-advance to final generation step when draft is selected\n                    if (!wizardState.completedSteps.includes(5)) {\n                        wizardState.markStepCompleted(5);\n                    }\n                    wizardState.updateCurrentStep(6);\n                }\n            }, void 0, false, {\n                fileName: \"/var/www/flask_app/ast_chat/components/wizard/CardWizardSteps.tsx\",\n                lineNumber: 144,\n                columnNumber: 9\n            }, this);\n        case 6:\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_Step6FinalGeneration__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                formData: formData,\n                isGeneratingFinalCard: cardStudio.isGeneratingFinalCard,\n                generationProgress: cardStudio.generationProgress,\n                progressPercentage: cardStudio.progressPercentage,\n                currentElapsedTime: cardStudio.currentElapsedTime,\n                selectedDraftIndex: cardStudio.selectedDraftIndex,\n                draftCards: cardStudio.draftCards,\n                generatedCard: cardStudio.generatedCard,\n                isCardCompleted: cardStudio.isCardCompleted,\n                onGenerateFinalCard: cardStudio.handleGenerateFinalFromDraft,\n                formatGenerationTime: cardStudio.formatGenerationTime\n            }, void 0, false, {\n                fileName: \"/var/www/flask_app/ast_chat/components/wizard/CardWizardSteps.tsx\",\n                lineNumber: 176,\n                columnNumber: 9\n            }, this);\n        default:\n            return null;\n    }\n}\n_c = CardWizardSteps;\nvar _c;\n$RefreshReg$(_c, \"CardWizardSteps\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/wizard/CardWizardSteps.tsx\n"));

/***/ })

});