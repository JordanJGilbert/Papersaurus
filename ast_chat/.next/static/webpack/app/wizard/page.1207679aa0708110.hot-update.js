"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/wizard/page",{

/***/ "(app-pages-browser)/./hooks/cardStudio/utils.ts":
/*!***********************************!*\
  !*** ./hooks/cardStudio/utils.ts ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chatWithAI: function() { return /* binding */ chatWithAI; },\n/* harmony export */   scrollToCardPreview: function() { return /* binding */ scrollToCardPreview; },\n/* harmony export */   sendThankYouEmail: function() { return /* binding */ sendThankYouEmail; }\n/* harmony export */ });\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./hooks/cardStudio/constants.ts\");\n/* __next_internal_client_entry_do_not_use__ sendThankYouEmail,chatWithAI,scrollToCardPreview auto */ \n\n// Email Helper Function\nasync function sendThankYouEmail(toEmail, cardType, cardUrl) {\n    console.log(\"\\uD83D\\uDCE7 sendThankYouEmail called with:\", {\n        toEmail,\n        cardType,\n        cardUrl\n    });\n    // Type validation\n    if (typeof toEmail !== \"string\") {\n        console.error(\"\\uD83D\\uDCE7 sendThankYouEmail - toEmail is not a string:\", typeof toEmail, toEmail);\n        return;\n    }\n    if (!toEmail.trim()) {\n        console.log(\"\\uD83D\\uDCE7 sendThankYouEmail - toEmail is empty, returning\");\n        return;\n    }\n    try {\n        // Create HTML email body\n        const htmlBody = '\\n      <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; color: #333;\">\\n        <div style=\"text-align: center; margin-bottom: 30px;\">\\n          <h1 style=\"color: #2563eb; margin-bottom: 10px;\">\\uD83C\\uDF89 Your Card is Ready!</h1>\\n        </div>\\n        \\n        <p style=\"font-size: 16px; line-height: 1.6; margin-bottom: 20px;\">Hi there!</p>\\n        \\n        <p style=\"font-size: 16px; line-height: 1.6; margin-bottom: 20px;\">\\n          Thank you for using VibeCarding to create your beautiful <strong>'.concat(cardType, '</strong> card!\\n        </p>\\n        \\n        <p style=\"font-size: 16px; line-height: 1.6; margin-bottom: 20px;\">\\n          We hope you love how it turned out. Your card has been generated and is ready for printing or sharing.\\n        </p>\\n        \\n        <div style=\"text-align: center; margin: 30px 0;\">\\n          <a href=\"').concat(cardUrl, '\" style=\"background-color: #2563eb; color: white; padding: 12px 24px; text-decoration: none; border-radius: 6px; font-weight: bold; display: inline-block;\">\\n            View Your Card\\n          </a>\\n        </div>\\n        \\n        <p style=\"font-size: 16px; line-height: 1.6; margin-bottom: 20px;\">\\n          If you have any questions or feedback, feel free to reach out to us.\\n        </p>\\n        \\n        <p style=\"font-size: 16px; line-height: 1.6; margin-bottom: 20px;\">\\n          Happy card making!\\n        </p>\\n        \\n        <div style=\"margin-top: 40px; padding-top: 20px; border-top: 1px solid #e5e7eb; color: #6b7280;\">\\n          <p style=\"margin-bottom: 5px;\"><strong>Best regards,</strong></p>\\n          <p style=\"margin-bottom: 5px;\">The VibeCarding Team</p>\\n          <p style=\"margin: 0;\">\\n            <a href=\"mailto:vibecarding@ast.engineer\" style=\"color: #2563eb; text-decoration: none;\">vibecarding@ast.engineer</a>\\n          </p>\\n        </div>\\n      </div>\\n    ');\n        // Plain text fallback\n        const textBody = \"Hi there!\\n\\nThank you for using VibeCarding to create your beautiful \".concat(cardType, \" card!\\n\\nWe hope you love how it turned out. Your card has been generated and is ready for printing or sharing.\\n\\nView your card: \").concat(cardUrl, \"\\n\\nIf you have any questions or feedback, feel free to reach out to us.\\n\\nHappy card making!\\n\\nBest regards,\\nThe VibeCarding Team\\nvibecarding@ast.engineer\");\n        // Send to user\n        console.log(\"\\uD83D\\uDCE7 Attempting to send email to user:\", toEmail);\n        const userResponse = await fetch(\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_1__.BACKEND_API_BASE_URL, \"/send_email_nodejs_style\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\"\n            },\n            body: JSON.stringify({\n                to: toEmail,\n                from: \"vibecarding@ast.engineer\",\n                subject: \"Your \".concat(cardType, \" card is ready!\"),\n                body: htmlBody,\n                text: textBody,\n                html: htmlBody\n            })\n        });\n        console.log(\"\\uD83D\\uDCE7 User email response status:\", userResponse.status);\n        if (userResponse.ok) {\n            const userResponseData = await userResponse.json();\n            console.log(\"\\uD83D\\uDCE7 User email response data:\", userResponseData);\n        }\n        // Send copy to jordan@ast.engineer\n        const adminResponse = await fetch(\"\".concat(_constants__WEBPACK_IMPORTED_MODULE_1__.BACKEND_API_BASE_URL, \"/send_email_nodejs_style\"), {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                to: \"jordan@ast.engineer\",\n                from: \"vibecarding@ast.engineer\",\n                subject: \"Card Created - \".concat(cardType, \" for \").concat(toEmail),\n                body: '<div style=\"font-family: Arial, sans-serif; padding: 20px;\">\\n          <h3 style=\"color: #2563eb;\">New Card Created on VibeCarding</h3>\\n          <p><strong>User:</strong> '.concat(toEmail, \"</p>\\n          <p><strong>Card Type:</strong> \").concat(cardType, '</p>\\n          <p><strong>Card URL:</strong> <a href=\"').concat(cardUrl, '\">').concat(cardUrl, '</a></p>\\n          <p style=\"margin-top: 20px; color: #6b7280; font-size: 14px;\">\\n            This is an automated notification of card creation activity.\\n          </p>\\n        </div>'),\n                text: \"New card created on VibeCarding:\\n\\nUser: \".concat(toEmail, \"\\nCard Type: \").concat(cardType, \"\\nCard URL: \").concat(cardUrl, \"\\n\\nThis is an automated notification of card creation activity.\")\n            })\n        });\n        if (userResponse.ok) {\n            sonner__WEBPACK_IMPORTED_MODULE_0__.toast.success(\"✉️ Thank you email sent!\");\n        }\n    } catch (error) {\n        console.error(\"Failed to send thank you email:\", error);\n    // Don't show error toast - this is a nice-to-have feature\n    }\n}\n// Chat Helper Function\nasync function chatWithAI(userMessage) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const { systemPrompt = null, model = \"gemini-2.5-pro\", includeThoughts = false, jsonSchema = null, attachments = [] // Default to empty array\n     } = options;\n    console.log(\"\\uD83E\\uDD16 chatWithAI called with:\", {\n        messageLength: userMessage.length,\n        model,\n        hasAttachments: attachments.length > 0,\n        attachmentCount: attachments.length,\n        hasJsonSchema: !!jsonSchema\n    });\n    try {\n        const response = await fetch(\"/internal/call_mcp_tool\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                tool_name: \"ai_chat\",\n                arguments: {\n                    messages: userMessage,\n                    system_prompt: systemPrompt,\n                    model: model,\n                    include_thoughts: includeThoughts,\n                    json_schema: jsonSchema,\n                    ...attachments.length > 0 && {\n                        attachments\n                    } // Only include if there are attachments\n                }\n            })\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error(\"chatWithAI error response:\", errorText);\n            throw new Error(\"HTTP \".concat(response.status, \": \").concat(errorText));\n        }\n        const data = await response.json();\n        console.log(\"\\uD83E\\uDD16 chatWithAI response data:\", data);\n        if (data.error && data.error !== \"None\" && data.error !== null) {\n            throw new Error(data.error);\n        }\n        let result;\n        if (typeof data.result === \"string\") {\n            try {\n                result = JSON.parse(data.result);\n            } catch (e) {\n                result = {\n                    status: \"error\",\n                    message: \"Invalid JSON response\"\n                };\n            }\n        } else {\n            result = data.result;\n        }\n        if (result.status === \"error\") {\n            throw new Error(result.message);\n        }\n        return result.response;\n    } catch (error) {\n        console.error(\"AI chat failed:\", error);\n        throw error;\n    }\n}\n// Helper function to scroll to card preview\nconst scrollToCardPreview = ()=>{\n    setTimeout(()=>{\n        const cardPreviewElement = document.querySelector(\"[data-card-preview]\");\n        if (cardPreviewElement) {\n            cardPreviewElement.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"start\"\n            });\n        }\n    }, 500);\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/cardStudio/utils.ts\n"));

/***/ })

});