"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/wizard/CardWizardEffects.tsx":
/*!*************************************************!*\
  !*** ./components/wizard/CardWizardEffects.tsx ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardWizardEffects: function() { return /* binding */ CardWizardEffects; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ CardWizardEffects auto */ var _s = $RefreshSig$();\n\nfunction CardWizardEffects(param) {\n    let { cardStudio, cardForm, cardHistory, wizardState, isResumingDraft } = param;\n    _s();\n    // Check for pending jobs on component mount and advance to appropriate step\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const restorePendingJobs = async ()=>{\n            await cardStudio.checkPendingJobs();\n            // After checking pending jobs, if we're generating drafts, ensure we're on step 5\n            // Only navigate if we have actual draft cards or a valid draft generation in progress\n            if ((cardStudio.isDraftMode || cardStudio.isGenerating) && !cardStudio.isGeneratingFinalCard && (cardStudio.draftCards.length > 0 || cardStudio.generationProgress)) {\n                console.log(\"\\uD83D\\uDD04 Restoring to Step 5 due to ongoing draft generation\", {\n                    isDraftMode: cardStudio.isDraftMode,\n                    isGenerating: cardStudio.isGenerating,\n                    draftCards: cardStudio.draftCards.length,\n                    generationProgress: cardStudio.generationProgress\n                });\n                // Mark previous steps as completed\n                if (!wizardState.completedSteps.includes(1)) wizardState.markStepCompleted(1);\n                if (!wizardState.completedSteps.includes(2)) wizardState.markStepCompleted(2);\n                if (!wizardState.completedSteps.includes(3)) wizardState.markStepCompleted(3);\n                if (!wizardState.completedSteps.includes(4)) wizardState.markStepCompleted(4);\n                wizardState.goToStep(5);\n            } else if (cardStudio.isGeneratingFinalCard || cardStudio.isCardCompleted) {\n                console.log(\"\\uD83D\\uDD04 Restoring to Step 6 due to ongoing final generation or completed card\");\n                // Mark all previous steps as completed\n                for(let i = 1; i <= 5; i++){\n                    if (!wizardState.completedSteps.includes(i)) wizardState.markStepCompleted(i);\n                }\n                wizardState.goToStep(6);\n            }\n        };\n        restorePendingJobs();\n    }, []);\n    // Auto-resume to the appropriate step based on saved data\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!wizardState.isInitialLoadComplete || !cardForm.isInitialLoadComplete) return;\n        // Only auto-advance if we're on step 1 and have data\n        if (wizardState.currentStep === 1 && wizardState.completedSteps.length === 0) {\n            const formData = cardForm.formData;\n            // Check if user has meaningful progress\n            if (formData.userEmail) {\n                // User has email, advance to at least step 4\n                console.log(\"\\uD83D\\uDD04 Auto-resuming to email step or beyond\");\n                wizardState.markStepCompleted(1);\n                if (formData.finalCardMessage || formData.prompt) {\n                    wizardState.markStepCompleted(2);\n                }\n                if (formData.selectedArtisticStyle || formData.referenceImages.length > 0) {\n                    wizardState.markStepCompleted(3);\n                }\n                wizardState.markStepCompleted(4);\n                // If they have draft cards OR draft generation is in progress, go to step 5\n                if (cardStudio.draftCards.length > 0 || cardStudio.isDraftMode || cardStudio.isGenerating) {\n                    wizardState.goToStep(5);\n                } else {\n                    wizardState.goToStep(4);\n                }\n            } else if (formData.finalCardMessage || formData.prompt) {\n                // User has message content, advance to step 2\n                console.log(\"\\uD83D\\uDD04 Auto-resuming to message step\");\n                wizardState.markStepCompleted(1);\n                wizardState.goToStep(2);\n            } else if (formData.selectedType && formData.selectedTone) {\n                // User has completed step 1 but not moved on\n                console.log(\"\\uD83D\\uDD04 Auto-completing step 1\");\n                wizardState.markStepCompleted(1);\n            }\n        }\n    }, [\n        wizardState.isInitialLoadComplete,\n        cardForm.isInitialLoadComplete\n    ]);\n    // Navigate to Step 5 when draft cards are loaded\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardStudio.draftCards.length > 0 && wizardState.currentStep < 5) {\n            console.log(\"\\uD83D\\uDCCB Draft cards loaded, navigating to Step 5\");\n            // Mark previous steps as completed\n            for(let i = 1; i <= 4; i++){\n                if (!wizardState.completedSteps.includes(i)) {\n                    wizardState.markStepCompleted(i);\n                }\n            }\n            wizardState.goToStep(5);\n        }\n    }, [\n        cardStudio.draftCards.length\n    ]);\n    // Auto-save drafts when user creates draft cards\n    // Track the current session ID to update the same session\n    const [currentDraftSessionId, setCurrentDraftSessionId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [lastSavedDraftCount, setLastSavedDraftCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Only save if we have draft cards and not resuming\n        if (cardStudio.draftCards.length > 0 && cardForm.isInitialLoadComplete && !isResumingDraft) {\n            // Count non-null draft cards\n            const validDrafts = cardStudio.draftCards.filter((card)=>card !== null).length;\n            // Only save when:\n            // 1. All 5 drafts are complete (validDrafts === 5)\n            // 2. This is the first draft and we haven't saved yet (validDrafts === 1 && !currentDraftSessionId)\n            // 3. User selected a draft (selectedDraftIndex >= 0)\n            const shouldSave = validDrafts === 5 && lastSavedDraftCount < 5 || // All drafts complete\n            validDrafts === 1 && !currentDraftSessionId || // First draft\n            cardStudio.selectedDraftIndex >= 0 && validDrafts > lastSavedDraftCount // User selected\n            ;\n            if (shouldSave && validDrafts > 0) {\n                // Save or update the session with the same ID\n                const sessionId = cardHistory.saveDraftSession(cardForm.formData, cardStudio.draftCards, cardStudio.selectedDraftIndex, currentDraftSessionId || undefined // Use existing session ID if available\n                );\n                // Store the session ID for future updates\n                if (!currentDraftSessionId) {\n                    setCurrentDraftSessionId(sessionId);\n                }\n                // Update the last saved count\n                setLastSavedDraftCount(validDrafts);\n                console.log(\"\\uD83D\\uDCBE Draft session saved: \".concat(validDrafts, \"/5 drafts complete\"));\n            }\n        }\n    }, [\n        cardStudio.draftCards,\n        cardStudio.selectedDraftIndex,\n        cardForm.formData,\n        cardForm.isInitialLoadComplete,\n        isResumingDraft,\n        currentDraftSessionId,\n        lastSavedDraftCount\n    ]);\n    // Reset session ID when drafts are cleared\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const validDrafts = cardStudio.draftCards.filter((card)=>card !== null).length;\n        if (validDrafts === 0) {\n            setCurrentDraftSessionId(null);\n            setLastSavedDraftCount(0);\n        }\n    }, [\n        cardStudio.draftCards\n    ]);\n    // Auto-save completed cards and ensure we're on Step 6\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardStudio.generatedCard && cardStudio.isCardCompleted) {\n            cardHistory.addCompletedCard(cardStudio.generatedCard);\n            // Ensure we're on Step 6 to see the completed card\n            if (wizardState.currentStep !== 6) {\n                console.log(\"\\uD83D\\uDCCD Card completed but not on Step 6, navigating there now...\");\n                wizardState.goToStep(6);\n            }\n        }\n    }, [\n        cardStudio.generatedCard,\n        cardStudio.isCardCompleted,\n        wizardState.currentStep\n    ]);\n    // Sync form data with cardStudio when form data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!cardForm.isInitialLoadComplete) return;\n        const { formData } = cardForm;\n        // Update cardStudio with form data\n        cardStudio.setSelectedType(formData.selectedType);\n        cardStudio.setCustomCardType(formData.customCardType);\n        cardStudio.setSelectedTone(formData.selectedTone);\n        cardStudio.setToField(formData.toField);\n        cardStudio.setFromField(formData.fromField);\n        cardStudio.setRelationshipField(formData.relationshipField);\n        cardStudio.setPrompt(formData.prompt);\n        cardStudio.setFinalCardMessage(formData.finalCardMessage);\n        cardStudio.setIsHandwrittenMessage(formData.isHandwrittenMessage);\n        cardStudio.setSelectedArtisticStyle(formData.selectedArtisticStyle);\n        cardStudio.setCustomStyleDescription(formData.customStyleDescription);\n        // Skip syncing reference images from form to cardStudio\n        // This should only flow from cardStudio -> form after uploads\n        // cardStudio.setReferenceImages(formData.referenceImages);\n        // cardStudio.setReferenceImageUrls(formData.referenceImageUrls);\n        cardStudio.setImageTransformation(formData.imageTransformation);\n        cardStudio.setUserEmail(formData.userEmail);\n        cardStudio.setSelectedImageModel(formData.selectedImageModel);\n        cardStudio.setSelectedDraftModel(formData.selectedDraftModel);\n        cardStudio.setSelectedPaperSize(formData.selectedPaperSize);\n        cardStudio.setNumberOfCards(formData.numberOfCards);\n        cardStudio.setIsFrontBackOnly(formData.isFrontBackOnly);\n    }, [\n        cardForm.formData,\n        cardForm.isInitialLoadComplete\n    ]);\n    // Auto-complete step 1 once user makes selections\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardForm.validateStep(1) && !wizardState.completedSteps.includes(1)) {\n            wizardState.markStepCompleted(1);\n        }\n    }, [\n        cardForm.formData.selectedType,\n        cardForm.formData.selectedTone,\n        cardForm.formData.customCardType,\n        wizardState\n    ]);\n    // Auto-complete step 4 once email is valid\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardForm.validateStep(4) && !wizardState.completedSteps.includes(4)) {\n            wizardState.markStepCompleted(4);\n        }\n    }, [\n        cardForm.formData.userEmail,\n        wizardState\n    ]);\n    // Auto-advance to Step 6 when final card generation starts\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardStudio.isGeneratingFinalCard && wizardState.currentStep < 6) {\n            console.log(\"\\uD83D\\uDE80 Auto-advancing to Step 6: Final Generation\");\n            if (!wizardState.completedSteps.includes(5)) {\n                wizardState.markStepCompleted(5);\n            }\n            wizardState.goToStep(6);\n        }\n    }, [\n        cardStudio.isGeneratingFinalCard,\n        wizardState\n    ]);\n    // Sync reference images from cardStudio to form when they change\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!cardForm.isInitialLoadComplete) return;\n        // Only sync if cardStudio has images but form doesn't\n        if (cardStudio.referenceImageUrls.length > 0 && cardForm.formData.referenceImageUrls.length !== cardStudio.referenceImageUrls.length) {\n            cardForm.updateFormData({\n                referenceImages: cardStudio.referenceImages,\n                referenceImageUrls: cardStudio.referenceImageUrls\n            });\n        }\n    }, [\n        cardStudio.referenceImageUrls,\n        cardStudio.referenceImages,\n        cardForm.isInitialLoadComplete\n    ]);\n    return null;\n}\n_s(CardWizardEffects, \"03JOOMzcta+/cU75gy+c1oeoKMs=\");\n_c = CardWizardEffects;\nvar _c;\n$RefreshReg$(_c, \"CardWizardEffects\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/wizard/CardWizardEffects.tsx\n"));

/***/ })

});