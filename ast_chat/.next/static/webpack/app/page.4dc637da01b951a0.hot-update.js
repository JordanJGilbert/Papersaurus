"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useCardForm.tsx":
/*!*******************************!*\
  !*** ./hooks/useCardForm.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCardForm: function() { return /* binding */ useCardForm; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_storageManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/storageManager */ \"(app-pages-browser)/./lib/storageManager.ts\");\n/* __next_internal_client_entry_do_not_use__ useCardForm auto */ var _s = $RefreshSig$();\n\n\nconst defaultFormData = {\n    // Step 1: Card Basics\n    selectedType: \"birthday\",\n    customCardType: \"\",\n    selectedTone: \"funny\",\n    toField: \"\",\n    fromField: \"\",\n    relationshipField: \"\",\n    // Step 2: Content Creation\n    prompt: \"\",\n    finalCardMessage: \"\",\n    isHandwrittenMessage: false,\n    // Step 3: Personalization\n    selectedArtisticStyle: \"ai-smart-style\",\n    customStyleDescription: \"\",\n    referenceImages: [],\n    referenceImageUrls: [],\n    imageTransformation: \"\",\n    // Step 4: Details\n    userEmail: \"\",\n    selectedImageModel: \"gpt-image-1\",\n    selectedDraftModel: \"gpt-image-1\",\n    selectedPaperSize: \"standard\",\n    numberOfCards: 1,\n    isFrontBackOnly: false\n};\n// Helper function to create serializable form data (excludes File objects)\nconst createSerializableFormData = (formData)=>{\n    const { referenceImages, ...serializableData } = formData;\n    return serializableData;\n};\nfunction useCardForm() {\n    _s();\n    const [formData, setFormData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultFormData);\n    const [wizardState, setWizardState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        currentStep: 1,\n        completedSteps: []\n    });\n    const [isInitialLoadComplete, setIsInitialLoadComplete] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Initialize form data from storage on component mount (after hydration)\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if ( true && !isInitialLoadComplete) {\n            const session = _lib_storageManager__WEBPACK_IMPORTED_MODULE_1__.storage.getSession();\n            if (session) {\n                setFormData({\n                    ...defaultFormData,\n                    ...session.formData,\n                    referenceImages: []\n                });\n                setWizardState(session.wizardState);\n            }\n            setIsInitialLoadComplete(true);\n        }\n    }, [\n        isInitialLoadComplete\n    ]);\n    // Save form data to storage whenever it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!isInitialLoadComplete) return;\n        const serializableData = createSerializableFormData(formData);\n        _lib_storageManager__WEBPACK_IMPORTED_MODULE_1__.storage.saveSession(serializableData, wizardState);\n    }, [\n        formData,\n        wizardState,\n        isInitialLoadComplete\n    ]);\n    const updateFormData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((updates)=>{\n        setFormData((prev)=>({\n                ...prev,\n                ...updates\n            }));\n    }, []);\n    const resetForm = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setFormData(defaultFormData);\n        setWizardState({\n            currentStep: 1,\n            completedSteps: []\n        });\n        _lib_storageManager__WEBPACK_IMPORTED_MODULE_1__.storage.clearSession();\n    }, []);\n    const clearStoredData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        _lib_storageManager__WEBPACK_IMPORTED_MODULE_1__.storage.clearAll();\n    }, []);\n    const updateWizardState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((updates)=>{\n        setWizardState((prev)=>({\n                ...prev,\n                ...updates\n            }));\n    }, []);\n    const markStepCompleted = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((step)=>{\n        setWizardState((prev)=>({\n                ...prev,\n                completedSteps: prev.completedSteps.includes(step) ? prev.completedSteps : [\n                    ...prev.completedSteps,\n                    step\n                ]\n            }));\n    }, []);\n    const resetWizardState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        setWizardState({\n            currentStep: 1,\n            completedSteps: []\n        });\n    }, []);\n    const validateStep = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((step)=>{\n        switch(step){\n            case 1:\n                // Card type is required\n                if (!formData.selectedType) return false;\n                // If custom type is selected, custom description is required\n                if (formData.selectedType === \"custom\" && !formData.customCardType.trim()) return false;\n                // Tone is required\n                if (!formData.selectedTone) return false;\n                // If photos are uploaded, they must have descriptions\n                if (formData.referenceImageUrls.length > 0) {\n                    // Check if we have photoReferences data\n                    if (!formData.photoReferences || formData.photoReferences.length === 0) return false;\n                    // Check if all photos have descriptions\n                    const allHaveDescriptions = formData.photoReferences.every((ref)=>ref.description && ref.description.trim());\n                    if (!allHaveDescriptions) return false;\n                }\n                return true;\n            case 2:\n                // All fields are optional - let AI generate defaults\n                return true;\n            case 3:\n                // All fields are optional\n                // If custom style is selected, description is required\n                if (formData.selectedArtisticStyle === \"custom\" && !formData.customStyleDescription.trim()) return false;\n                // If reference images with incompatible model\n                if (formData.referenceImageUrls.length > 0 && formData.selectedImageModel !== \"gpt-image-1\") return false;\n                return true;\n            case 4:\n                // Email is required\n                if (!formData.userEmail.trim()) return false;\n                // Basic email validation\n                const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                if (!emailRegex.test(formData.userEmail)) return false;\n                return true;\n            case 5:\n                // All previous steps must be valid\n                return validateStep(1) && validateStep(2) && validateStep(3) && validateStep(4);\n            default:\n                return false;\n        }\n    }, [\n        formData\n    ]);\n    const getStepSummary = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((step)=>{\n        const summary = [];\n        switch(step){\n            case 1:\n                const cardType = formData.selectedType === \"custom\" ? formData.customCardType : formData.selectedType;\n                summary.push(\"Card Type: \".concat(cardType || \"Not selected\"));\n                summary.push(\"Tone: \".concat(formData.selectedTone || \"Not selected\"));\n                if (formData.toField) summary.push(\"To: \".concat(formData.toField));\n                if (formData.fromField) summary.push(\"From: \".concat(formData.fromField));\n                break;\n            case 2:\n                if (formData.prompt) summary.push(\"Description: \".concat(formData.prompt.substring(0, 50), \"...\"));\n                if (formData.finalCardMessage) summary.push(\"Message: \".concat(formData.finalCardMessage.substring(0, 50), \"...\"));\n                if (formData.isHandwrittenMessage) summary.push(\"Handwritten message space included\");\n                break;\n            case 3:\n                summary.push(\"Style: \".concat(formData.selectedArtisticStyle));\n                if (formData.referenceImageUrls.length > 0) {\n                    summary.push(\"Reference photos: \".concat(formData.referenceImageUrls.length, \" uploaded\"));\n                }\n                break;\n            case 4:\n                summary.push(\"Email: \".concat(formData.userEmail));\n                summary.push(\"Model: \".concat(formData.selectedImageModel));\n                summary.push(\"Paper: \".concat(formData.selectedPaperSize));\n                if (formData.isFrontBackOnly) summary.push(\"Front/back only\");\n                break;\n        }\n        return summary;\n    }, [\n        formData\n    ]);\n    const getValidationErrors = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((step)=>{\n        const errors = [];\n        switch(step){\n            case 1:\n                if (!formData.selectedType) errors.push(\"Please select a card type\");\n                if (formData.selectedType === \"custom\" && !formData.customCardType.trim()) {\n                    errors.push(\"Please describe your custom card type\");\n                }\n                if (!formData.selectedTone) errors.push(\"Please select a tone\");\n                // Check photo descriptions\n                if (formData.referenceImageUrls.length > 0) {\n                    if (!formData.photoReferences || formData.photoReferences.length === 0) {\n                        errors.push(\"Please describe who's in your photos\");\n                    } else {\n                        const missingDescriptions = formData.photoReferences.filter((ref)=>!ref.description || !ref.description.trim()).length;\n                        if (missingDescriptions > 0) {\n                            errors.push(\"Please describe who's in \".concat(missingDescriptions, \" photo\").concat(missingDescriptions > 1 ? \"s\" : \"\"));\n                        }\n                    }\n                }\n                break;\n            case 3:\n                if (formData.selectedArtisticStyle === \"custom\" && !formData.customStyleDescription.trim()) {\n                    errors.push(\"Please describe your custom artistic style\");\n                }\n                if (formData.referenceImageUrls.length > 0 && formData.selectedImageModel !== \"gpt-image-1\") {\n                    errors.push(\"Reference photos are only supported with GPT Image 1 model\");\n                }\n                break;\n            case 4:\n                if (!formData.userEmail.trim()) {\n                    errors.push(\"Email address is required\");\n                } else {\n                    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                    if (!emailRegex.test(formData.userEmail)) {\n                        errors.push(\"Please enter a valid email address\");\n                    }\n                }\n                break;\n        }\n        return errors;\n    }, [\n        formData\n    ]);\n    return {\n        formData,\n        updateFormData,\n        resetForm,\n        clearStoredData,\n        validateStep,\n        getStepSummary,\n        getValidationErrors,\n        isInitialLoadComplete,\n        wizardState: {\n            ...wizardState,\n            updateCurrentStep: (step)=>updateWizardState({\n                    currentStep: step\n                }),\n            markStepCompleted,\n            resetWizardState\n        },\n        updateWizardState\n    };\n}\n_s(useCardForm, \"YXsICAdHNvhScUcXpS7y9ubE7jc=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useCardForm.tsx\n"));

/***/ })

});