"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/cardStudio/useDraftGeneration.ts":
/*!************************************************!*\
  !*** ./hooks/cardStudio/useDraftGeneration.ts ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useDraftGeneration: function() { return /* binding */ useDraftGeneration; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _lib_promptGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/promptGenerator */ \"(app-pages-browser)/./lib/promptGenerator.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./hooks/cardStudio/constants.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./hooks/cardStudio/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ useDraftGeneration auto */ \n\n\n\n\n\nfunction useDraftGeneration(props) {\n    // Draft mode state\n    const [isDraftMode, setIsDraftMode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [draftCards, setDraftCards] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [selectedDraftIndex, setSelectedDraftIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1);\n    const [isGeneratingFinalCard, setIsGeneratingFinalCard] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [previewingDraftIndex, setPreviewingDraftIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1);\n    const [draftCompletionShown, setDraftCompletionShown] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [draftCompletionCount, setDraftCompletionCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [isGenerating, setIsGenerating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [generationProgress, setGenerationProgress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [generatedCard, setGeneratedCard] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [generatedCards, setGeneratedCards] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isCardCompleted, setIsCardCompleted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [currentJobId, setCurrentJobId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Draft mode generation - creates 5 front cover variations\n    const handleGenerateDraftCards = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        const { userEmail, selectedArtisticStyle, customStyleDescription, referenceImageUrls, selectedDraftModel, selectedType, customCardType, selectedTone, prompt, toField, fromField, selectedPaperSize, saveJobToStorage, subscribeToJob, startElapsedTimeTracking } = props;\n        if (!userEmail.trim()) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Please enter your email address\");\n            return;\n        }\n        // Basic email validation\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(userEmail)) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Please enter a valid email address\");\n            return;\n        }\n        // Validate custom style if selected\n        if (selectedArtisticStyle === \"custom\" && !customStyleDescription.trim()) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Please describe your custom artistic style\");\n            return;\n        }\n        // Validate reference images with model compatibility\n        if (referenceImageUrls.length > 0 && selectedDraftModel !== \"gpt-image-1\") {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Reference photos are only supported with GPT Image 1 model. Please switch to GPT Image 1 for draft mode or remove reference photos.\");\n            return;\n        }\n        // Stop any existing timers first\n        props.stopElapsedTimeTracking();\n        // Clear ALL WebSocket subscriptions before starting\n        if (props.unsubscribeFromAllJobs) {\n            props.unsubscribeFromAllJobs();\n        }\n        // Clear all old draft jobs from localStorage before starting new generation\n        if (true) {\n            console.log(\"\\uD83E\\uDDF9 Clearing old draft jobs before starting new generation\");\n            const keys = Object.keys(localStorage);\n            keys.forEach((key)=>{\n                if (key.startsWith(\"cardJob_draft-\")) {\n                    localStorage.removeItem(key);\n                }\n            });\n            // Also clear from pending jobs list\n            const pendingJobs = JSON.parse(localStorage.getItem(\"pendingCardJobs\") || \"[]\");\n            const filteredJobs = pendingJobs.filter((id)=>!id.startsWith(\"draft-\"));\n            localStorage.setItem(\"pendingCardJobs\", JSON.stringify(filteredJobs));\n        }\n        setIsDraftMode(true);\n        setIsGenerating(true);\n        startElapsedTimeTracking(\"draft\");\n        setGenerationProgress(\"\\uD83C\\uDFA8 Creating 5 front cover variations for you to choose from...\");\n        setDraftCards([\n            null,\n            null,\n            null,\n            null,\n            null\n        ]); // Initialize with 5 empty slots\n        setSelectedDraftIndex(-1);\n        setDraftCompletionShown(false);\n        setDraftCompletionCount(0);\n        // Clear any previous card state\n        setGeneratedCard(null);\n        setGeneratedCards([]);\n        setIsCardCompleted(false);\n        try {\n            console.log(\"\\uD83D\\uDE80 Starting draft mode generation with 5 variations\");\n            const cardTypeForPrompt = selectedType === \"custom\" ? customCardType : selectedType;\n            const selectedToneObj = _constants__WEBPACK_IMPORTED_MODULE_3__.cardTones.find((tone)=>tone.id === selectedTone);\n            const toneDescription = selectedToneObj ? selectedToneObj.description.toLowerCase() : \"heartfelt and sincere\";\n            const effectivePrompt = prompt.trim() || \"A beautiful \".concat(cardTypeForPrompt, \" card with \").concat(toneDescription, \" style\");\n            // Generate 5 draft variations\n            const draftPromises = Array.from({\n                length: 5\n            }, async (_, index)=>{\n                try {\n                    var _paperSizes_find, _paperSizes_find1;\n                    console.log(\"\\uD83C\\uDFA8 Starting draft variation \".concat(index + 1));\n                    // For smart style, use predefined styles\n                    let styleOverride = undefined;\n                    let styleLabel = undefined;\n                    if (selectedArtisticStyle === \"ai-smart-style\") {\n                        const predefinedStyles = [\n                            \"watercolor\",\n                            \"botanical\",\n                            \"comic-book\",\n                            \"dreamy-fantasy\",\n                            \"minimalist\"\n                        ];\n                        const styleLabels = [\n                            \"\\uD83C\\uDFA8 Watercolor\",\n                            \"\\uD83C\\uDF3F Botanical\",\n                            \"\\uD83D\\uDCA5 Comic Book\",\n                            \"\\uD83C\\uDF38 Dreamy Fantasy\",\n                            \"✨ Minimalist\"\n                        ];\n                        styleOverride = predefinedStyles[index];\n                        styleLabel = styleLabels[index];\n                    }\n                    // Generate front cover prompt\n                    const selectedStyle = _constants__WEBPACK_IMPORTED_MODULE_3__.artisticStyles.find((style)=>style.id === (styleOverride || selectedArtisticStyle));\n                    const draftConfig = {\n                        cardType: selectedType,\n                        customCardType: customCardType,\n                        tone: selectedTone,\n                        toneLabel: selectedToneObj ? selectedToneObj.label : \"Heartfelt\",\n                        toneDescription: toneDescription,\n                        theme: effectivePrompt,\n                        toField: toField,\n                        fromField: fromField,\n                        relationshipField: props.relationshipField,\n                        artisticStyle: selectedStyle,\n                        referenceImageUrls: referenceImageUrls,\n                        photoReferences: props.photoReferences,\n                        isDraftVariation: selectedArtisticStyle === \"smart\",\n                        variationIndex: index\n                    };\n                    const { prompt: frontCoverPromptQuery, images } = _lib_promptGenerator__WEBPACK_IMPORTED_MODULE_2__.PromptGenerator.generateDraftPromptWithImages(draftConfig);\n                    const frontCoverPrompt = await (0,_utils__WEBPACK_IMPORTED_MODULE_4__.chatWithAI)(frontCoverPromptQuery, {\n                        model: \"gemini-2.5-pro\",\n                        attachments: images\n                    });\n                    if (!(frontCoverPrompt === null || frontCoverPrompt === void 0 ? void 0 : frontCoverPrompt.trim())) {\n                        throw new Error(\"Failed to generate front cover prompt\");\n                    }\n                    // Enhance with reference image instructions\n                    let enhancedFrontCoverPrompt = frontCoverPrompt.trim();\n                    enhancedFrontCoverPrompt = _lib_promptGenerator__WEBPACK_IMPORTED_MODULE_2__.PromptGenerator.enhancePromptWithReferencePhotos(enhancedFrontCoverPrompt, referenceImageUrls.length > 0, selectedDraftModel);\n                    // Generate the image\n                    const jobId = \"draft-\".concat(index, \"-\").concat((0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])());\n                    const inputImages = [];\n                    if (referenceImageUrls.length > 0 && selectedDraftModel === \"gpt-image-1\") {\n                        inputImages.push(...referenceImageUrls);\n                    }\n                    const response = await fetch(\"/api/generate-card-async\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            jobId,\n                            prompts: {\n                                frontCover: enhancedFrontCoverPrompt\n                            },\n                            config: {\n                                userNumber: \"+17145986105\",\n                                modelVersion: selectedDraftModel,\n                                aspectRatio: ((_paperSizes_find = _constants__WEBPACK_IMPORTED_MODULE_3__.paperSizes.find((size)=>size.id === selectedPaperSize)) === null || _paperSizes_find === void 0 ? void 0 : _paperSizes_find.aspectRatio) || \"9:16\",\n                                quality: \"low\",\n                                outputFormat: \"jpeg\",\n                                outputCompression: 100,\n                                moderation: \"low\",\n                                dimensions: ((_paperSizes_find1 = _constants__WEBPACK_IMPORTED_MODULE_3__.paperSizes.find((size)=>size.id === selectedPaperSize)) === null || _paperSizes_find1 === void 0 ? void 0 : _paperSizes_find1.dimensions) || \"1024x1536\",\n                                isFrontBackOnly: true,\n                                userEmail,\n                                cardType: cardTypeForPrompt,\n                                toField,\n                                fromField,\n                                isDraftMode: true,\n                                ...inputImages.length > 0 && {\n                                    input_images: inputImages,\n                                    input_images_mode: \"front_cover_only\"\n                                }\n                            }\n                        })\n                    });\n                    if (!response.ok) {\n                        throw new Error(\"Server error: \".concat(response.status));\n                    }\n                    const result = await response.json();\n                    if (result.status !== \"processing\") {\n                        throw new Error(result.message || \"Failed to start draft generation\");\n                    }\n                    console.log(\"✅ Draft variation \".concat(index + 1, \" job started:\"), jobId);\n                    // Save draft job to storage for recovery\n                    saveJobToStorage(jobId, {\n                        isDraft: true,\n                        draftIndex: index,\n                        styleInfo: styleOverride ? {\n                            styleName: styleOverride,\n                            styleLabel: styleLabel\n                        } : undefined,\n                        frontCoverPrompt: enhancedFrontCoverPrompt,\n                        userEmail,\n                        selectedType,\n                        selectedTone,\n                        toField,\n                        fromField,\n                        draftCards: [] // Will be updated as drafts complete\n                    });\n                    // Subscribe to WebSocket updates\n                    subscribeToJob(jobId);\n                } catch (error) {\n                    console.error(\"❌ Draft variation \".concat(index + 1, \" failed:\"), error);\n                    sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Draft variation \".concat(index + 1, \" failed: \").concat(error instanceof Error ? error.message : \"Unknown error\"));\n                }\n            });\n            // Wait for all draft generations to start\n            await Promise.allSettled(draftPromises);\n            console.log(\"\\uD83D\\uDE80 All draft variations started\");\n        } catch (error) {\n            console.error(\"Draft card generation error:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Failed to start draft generation: \".concat(error instanceof Error ? error.message : \"Unknown error\"));\n            setIsGenerating(false);\n            setIsDraftMode(false);\n            setDraftCompletionShown(false);\n            setDraftCompletionCount(0);\n            setGenerationProgress(\"\");\n            props.stopElapsedTimeTracking();\n        }\n    }, [\n        props\n    ]);\n    // Generate final high-quality card from selected draft\n    const handleGenerateFinalFromDraft = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (displayIndex)=>{\n        // Prevent duplicate calls\n        if (isGeneratingFinalCard) {\n            console.log(\"⚠️ Final card generation already in progress, skipping duplicate call\");\n            return;\n        }\n        const selectedDraft = draftCards[displayIndex];\n        if (!selectedDraft) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Please wait for the draft to complete before selecting\");\n            return;\n        }\n        const { selectedType, customCardType, selectedTone, prompt, toField, fromField, finalCardMessage, isHandwrittenMessage, selectedArtisticStyle, customStyleDescription, isFrontBackOnly, selectedImageModel, selectedPaperSize, userEmail, referenceImageUrls, startElapsedTimeTracking, subscribeToJob } = props;\n        // Stop any existing timers first\n        props.stopElapsedTimeTracking();\n        setIsGeneratingFinalCard(true);\n        setIsDraftMode(false); // Switch out of draft mode for final generation\n        setSelectedDraftIndex(displayIndex);\n        startElapsedTimeTracking(\"final\");\n        setGenerationProgress(\"\\uD83C\\uDFA8 Creating high-quality version of your selected design...\");\n        try {\n            var _selectedDraft_generatedPrompts, _paperSizes_find, _paperSizes_find1;\n            const jobId = (0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n            // Generate the missing prompts\n            const storedFrontCoverPrompt = (_selectedDraft_generatedPrompts = selectedDraft.generatedPrompts) === null || _selectedDraft_generatedPrompts === void 0 ? void 0 : _selectedDraft_generatedPrompts.frontCover;\n            if (!storedFrontCoverPrompt) {\n                throw new Error(\"Selected draft is missing frontCover prompt\");\n            }\n            const cardTypeForPrompt = selectedType === \"custom\" ? customCardType : selectedType;\n            const selectedToneObj = _constants__WEBPACK_IMPORTED_MODULE_3__.cardTones.find((tone)=>tone.id === selectedTone);\n            const toneDescription = selectedToneObj ? selectedToneObj.description.toLowerCase() : \"heartfelt and sincere\";\n            const effectivePrompt = prompt.trim() || \"A beautiful \".concat(cardTypeForPrompt, \" card with \").concat(toneDescription, \" style\");\n            let messageContent = finalCardMessage;\n            if (isHandwrittenMessage) {\n                messageContent = \"[Blank space for handwritten message]\";\n            }\n            // Get style from the selected draft\n            const draftStyleInfo = selectedDraft.styleInfo;\n            let selectedStyle;\n            if (draftStyleInfo && draftStyleInfo.styleName) {\n                selectedStyle = _constants__WEBPACK_IMPORTED_MODULE_3__.artisticStyles.find((style)=>style.id === draftStyleInfo.styleName);\n            } else {\n                selectedStyle = _constants__WEBPACK_IMPORTED_MODULE_3__.artisticStyles.find((style)=>style.id === selectedArtisticStyle);\n            }\n            // Use PromptGenerator for final card from draft\n            const finalFromDraftConfig = {\n                frontCoverPrompt: storedFrontCoverPrompt,\n                cardType: selectedType,\n                customCardType: customCardType,\n                theme: effectivePrompt,\n                tone: selectedTone,\n                toneDescription: toneDescription,\n                toField: toField,\n                fromField: fromField,\n                message: messageContent,\n                isHandwrittenMessage: isHandwrittenMessage,\n                artisticStyle: selectedStyle,\n                isFrontBackOnly: isFrontBackOnly\n            };\n            const finalPrompts = await _lib_promptGenerator__WEBPACK_IMPORTED_MODULE_2__.PromptGenerator.generateFinalFromDraftPromptsCombined(finalFromDraftConfig);\n            if (!finalPrompts || !finalPrompts.frontCover || !finalPrompts.backCover) {\n                throw new Error(\"Failed to generate complete prompts for final card\");\n            }\n            // Prepare input images for final generation\n            const inputImages = [];\n            if (referenceImageUrls.length > 0 && selectedImageModel === \"gpt-image-1\") {\n                inputImages.push(...referenceImageUrls);\n            }\n            const response = await fetch(\"/api/generate-card-async\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    jobId,\n                    prompts: finalPrompts,\n                    config: {\n                        userNumber: \"+17145986105\",\n                        modelVersion: selectedImageModel,\n                        aspectRatio: ((_paperSizes_find = _constants__WEBPACK_IMPORTED_MODULE_3__.paperSizes.find((size)=>size.id === selectedPaperSize)) === null || _paperSizes_find === void 0 ? void 0 : _paperSizes_find.aspectRatio) || \"9:16\",\n                        quality: \"high\",\n                        outputFormat: \"jpeg\",\n                        outputCompression: 100,\n                        moderation: \"low\",\n                        dimensions: ((_paperSizes_find1 = _constants__WEBPACK_IMPORTED_MODULE_3__.paperSizes.find((size)=>size.id === selectedPaperSize)) === null || _paperSizes_find1 === void 0 ? void 0 : _paperSizes_find1.dimensions) || \"1024x1536\",\n                        isFrontBackOnly,\n                        userEmail,\n                        cardType: selectedType === \"custom\" ? customCardType : selectedType,\n                        toField,\n                        fromField,\n                        isDraftMode: false,\n                        ...inputImages.length > 0 && {\n                            input_images: inputImages,\n                            input_images_mode: \"front_cover_only\"\n                        }\n                    }\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Server error: \".concat(response.status));\n            }\n            const result = await response.json();\n            if (result.status !== \"processing\") {\n                throw new Error(result.message || \"Failed to start final card generation\");\n            }\n            setCurrentJobId(jobId);\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"\\uD83C\\uDFA8 Generating high-quality version of your selected design!\");\n            // Subscribe to WebSocket updates\n            subscribeToJob(jobId);\n        } catch (error) {\n            console.error(\"Final card generation error:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Failed to generate final card. Please try again.\");\n            setIsGeneratingFinalCard(false);\n            setGenerationProgress(\"\");\n            props.stopElapsedTimeTracking(); // Clear time-based progress on error\n        }\n    }, [\n        draftCards,\n        isGeneratingFinalCard,\n        props\n    ]);\n    return {\n        isDraftMode,\n        setIsDraftMode,\n        draftCards,\n        setDraftCards,\n        selectedDraftIndex,\n        setSelectedDraftIndex,\n        isGeneratingFinalCard,\n        setIsGeneratingFinalCard,\n        previewingDraftIndex,\n        setPreviewingDraftIndex,\n        draftCompletionShown,\n        setDraftCompletionShown,\n        draftCompletionCount,\n        setDraftCompletionCount,\n        handleGenerateDraftCards,\n        handleGenerateFinalFromDraft,\n        isGenerating,\n        setIsGenerating,\n        generationProgress,\n        setGenerationProgress,\n        generatedCard,\n        setGeneratedCard,\n        generatedCards,\n        setGeneratedCards,\n        isCardCompleted,\n        setIsCardCompleted,\n        currentJobId,\n        setCurrentJobId\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL2NhcmRTdHVkaW8vdXNlRHJhZnRHZW5lcmF0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O3dFQUU4QztBQUNmO0FBQ0s7QUFDdUQ7QUFDUTtBQUM5RDtBQStCOUIsU0FBU1UsbUJBQW1CQyxLQUEyQjtJQUM1RCxtQkFBbUI7SUFDbkIsTUFBTSxDQUFDQyxhQUFhQyxlQUFlLEdBQUdiLCtDQUFRQSxDQUFVO0lBQ3hELE1BQU0sQ0FBQ2MsWUFBWUMsY0FBYyxHQUFHZiwrQ0FBUUEsQ0FBMkIsRUFBRTtJQUN6RSxNQUFNLENBQUNnQixvQkFBb0JDLHNCQUFzQixHQUFHakIsK0NBQVFBLENBQVMsQ0FBQztJQUN0RSxNQUFNLENBQUNrQix1QkFBdUJDLHlCQUF5QixHQUFHbkIsK0NBQVFBLENBQVU7SUFDNUUsTUFBTSxDQUFDb0Isc0JBQXNCQyx3QkFBd0IsR0FBR3JCLCtDQUFRQSxDQUFTLENBQUM7SUFDMUUsTUFBTSxDQUFDc0Isc0JBQXNCQyx3QkFBd0IsR0FBR3ZCLCtDQUFRQSxDQUFVO0lBQzFFLE1BQU0sQ0FBQ3dCLHNCQUFzQkMsd0JBQXdCLEdBQUd6QiwrQ0FBUUEsQ0FBUztJQUN6RSxNQUFNLENBQUMwQixjQUFjQyxnQkFBZ0IsR0FBRzNCLCtDQUFRQSxDQUFDO0lBQ2pELE1BQU0sQ0FBQzRCLG9CQUFvQkMsc0JBQXNCLEdBQUc3QiwrQ0FBUUEsQ0FBQztJQUM3RCxNQUFNLENBQUM4QixlQUFlQyxpQkFBaUIsR0FBRy9CLCtDQUFRQSxDQUF1QjtJQUN6RSxNQUFNLENBQUNnQyxnQkFBZ0JDLGtCQUFrQixHQUFHakMsK0NBQVFBLENBQWtCLEVBQUU7SUFDeEUsTUFBTSxDQUFDa0MsaUJBQWlCQyxtQkFBbUIsR0FBR25DLCtDQUFRQSxDQUFDO0lBQ3ZELE1BQU0sQ0FBQ29DLGNBQWNDLGdCQUFnQixHQUFHckMsK0NBQVFBLENBQWdCO0lBRWhFLDJEQUEyRDtJQUMzRCxNQUFNc0MsMkJBQTJCckMsa0RB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RUFBRSxFQUFFO2dCQUNoQixNQUFNLElBQUkxQixNQUFNLGlCQUFpQyxPQUFoQk0sU0FBU3FCLE1BQU07WUFDbEQ7WUFFQSxNQUFNQyxTQUFTLE1BQU10QixTQUFTdUIsSUFBSTtZQUVsQyxJQUFJRCxPQUFPRCxNQUFNLEtBQUssY0FBYztnQkFDbEMsTUFBTSxJQUFJM0IsTUFBTTRCLE9BQU9FLE9BQU8sSUFBSTtZQUNwQztZQUVBNUcsZ0JBQWdCaUY7WUFDaEJwSCx5Q0FBS0EsQ0FBQ29LLE9BQU8sQ0FBQztZQUVkLGlDQUFpQztZQUNqQ2xILGVBQWVrRTtRQUVqQixFQUFFLE9BQU8vRCxPQUFPO1lBQ2RNLFFBQVFOLEtBQUssQ0FBQyxnQ0FBZ0NBO1lBQzlDckQseUNBQUtBLENBQUNxRCxLQUFLLENBQUM7WUFDWnBDLHlCQUF5QjtZQUN6QlUsc0JBQXNCO1lBQ3RCbEIsTUFBTWdELHVCQUF1QixJQUFJLHFDQUFxQztRQUN4RTtJQUNGLEdBQUc7UUFBQzdDO1FBQVlJO1FBQXVCUDtLQUFNO0lBRTdDLE9BQU87UUFDTEM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQWE7UUFDQWtIO1FBQ0E5SDtRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaG9va3MvY2FyZFN0dWRpby91c2VEcmFmdEdlbmVyYXRpb24udHM/NGM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB0b2FzdCB9IGZyb20gXCJzb25uZXJcIjtcbmltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gJ3V1aWQnO1xuaW1wb3J0IHsgUHJvbXB0R2VuZXJhdG9yLCBEcmFmdENvbmZpZywgRmluYWxGcm9tRHJhZnRDb25maWcgfSBmcm9tICdAL2xpYi9wcm9tcHRHZW5lcmF0b3InO1xuaW1wb3J0IHsgR2VuZXJhdGVkQ2FyZCwgYXJ0aXN0aWNTdHlsZXMsIHBhcGVyU2l6ZXMsIGNhcmRUb25lcywgUGhvdG9SZWZlcmVuY2UgfSBmcm9tICcuL2NvbnN0YW50cyc7XG5pbXBvcnQgeyBjaGF0V2l0aEFJIH0gZnJvbSAnLi91dGlscyc7XG5cbmludGVyZmFjZSBEcmFmdEdlbmVyYXRpb25Qcm9wcyB7XG4gIC8vIEZvcm0gZGF0YVxuICBzZWxlY3RlZFR5cGU6IHN0cmluZztcbiAgY3VzdG9tQ2FyZFR5cGU6IHN0cmluZztcbiAgc2VsZWN0ZWRUb25lOiBzdHJpbmc7XG4gIHNlbGVjdGVkQXJ0aXN0aWNTdHlsZTogc3RyaW5nO1xuICBjdXN0b21TdHlsZURlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIHNlbGVjdGVkRHJhZnRNb2RlbDogc3RyaW5nO1xuICBzZWxlY3RlZEltYWdlTW9kZWw6IHN0cmluZztcbiAgc2VsZWN0ZWRQYXBlclNpemU6IHN0cmluZztcbiAgcHJvbXB0OiBzdHJpbmc7XG4gIHRvRmllbGQ6IHN0cmluZztcbiAgZnJvbUZpZWxkOiBzdHJpbmc7XG4gIHJlbGF0aW9uc2hpcEZpZWxkOiBzdHJpbmc7XG4gIHVzZXJFbWFpbDogc3RyaW5nO1xuICBmaW5hbENhcmRNZXNzYWdlOiBzdHJpbmc7XG4gIGlzSGFuZHdyaXR0ZW5NZXNzYWdlOiBib29sZWFuO1xuICBpc0Zyb250QmFja09ubHk6IGJvb2xlYW47XG4gIHJlZmVyZW5jZUltYWdlVXJsczogc3RyaW5nW107XG4gIHBob3RvUmVmZXJlbmNlcz86IFBob3RvUmVmZXJlbmNlW107XG4gIFxuICAvLyBKb2IgbWFuYWdlbWVudFxuICBzYXZlSm9iVG9TdG9yYWdlOiAoam9iSWQ6IHN0cmluZywgam9iRGF0YTogYW55KSA9PiB2b2lkO1xuICBzdWJzY3JpYmVUb0pvYjogKGpvYklkOiBzdHJpbmcpID0+IHZvaWQ7XG4gIHVuc3Vic2NyaWJlRnJvbUFsbEpvYnM/OiAoKSA9PiB2b2lkO1xuICBzdGFydEVsYXBzZWRUaW1lVHJhY2tpbmc6IChqb2JUeXBlPzogJ2RyYWZ0JyB8ICdmaW5hbCcpID0+IHZvaWQ7XG4gIHN0b3BFbGFwc2VkVGltZVRyYWNraW5nOiAoKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlRHJhZnRHZW5lcmF0aW9uKHByb3BzOiBEcmFmdEdlbmVyYXRpb25Qcm9wcykge1xuICAvLyBEcmFmdCBtb2RlIHN0YXRlXG4gIGNvbnN0IFtpc0RyYWZ0TW9kZSwgc2V0SXNEcmFmdE1vZGVdID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xuICBjb25zdCBbZHJhZnRDYXJkcywgc2V0RHJhZnRDYXJkc10gPSB1c2VTdGF0ZTwoR2VuZXJhdGVkQ2FyZCB8IG51bGwpW10+KFtdKTtcbiAgY29uc3QgW3NlbGVjdGVkRHJhZnRJbmRleCwgc2V0U2VsZWN0ZWREcmFmdEluZGV4XSA9IHVzZVN0YXRlPG51bWJlcj4oLTEpO1xuICBjb25zdCBbaXNHZW5lcmF0aW5nRmluYWxDYXJkLCBzZXRJc0dlbmVyYXRpbmdGaW5hbENhcmRdID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xuICBjb25zdCBbcHJldmlld2luZ0RyYWZ0SW5kZXgsIHNldFByZXZpZXdpbmdEcmFmdEluZGV4XSA9IHVzZVN0YXRlPG51bWJlcj4oLTEpO1xuICBjb25zdCBbZHJhZnRDb21wbGV0aW9uU2hvd24sIHNldERyYWZ0Q29tcGxldGlvblNob3duXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcbiAgY29uc3QgW2RyYWZ0Q29tcGxldGlvbkNvdW50LCBzZXREcmFmdENvbXBsZXRpb25Db3VudF0gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xuICBjb25zdCBbaXNHZW5lcmF0aW5nLCBzZXRJc0dlbmVyYXRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZ2VuZXJhdGlvblByb2dyZXNzLCBzZXRHZW5lcmF0aW9uUHJvZ3Jlc3NdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtnZW5lcmF0ZWRDYXJkLCBzZXRHZW5lcmF0ZWRDYXJkXSA9IHVzZVN0YXRlPEdlbmVyYXRlZENhcmQgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW2dlbmVyYXRlZENhcmRzLCBzZXRHZW5lcmF0ZWRDYXJkc10gPSB1c2VTdGF0ZTxHZW5lcmF0ZWRDYXJkW10+KFtdKTtcbiAgY29uc3QgW2lzQ2FyZENvbXBsZXRlZCwgc2V0SXNDYXJkQ29tcGxldGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2N1cnJlbnRKb2JJZCwgc2V0Q3VycmVudEpvYklkXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuXG4gIC8vIERyYWZ0IG1vZGUgZ2VuZXJhdGlvbiAtIGNyZWF0ZXMgNSBmcm9udCBjb3ZlciB2YXJpYXRpb25zXG4gIGNvbnN0IGhhbmRsZUdlbmVyYXRlRHJhZnRDYXJkcyA9IHVzZUNhbGxiYWNrKGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7XG4gICAgICB1c2VyRW1haWwsXG4gICAgICBzZWxlY3RlZEFydGlzdGljU3R5bGUsXG4gICAgICBjdXN0b21TdHlsZURlc2NyaXB0aW9uLFxuICAgICAgcmVmZXJlbmNlSW1hZ2VVcmxzLFxuICAgICAgc2VsZWN0ZWREcmFmdE1vZGVsLFxuICAgICAgc2VsZWN0ZWRUeXBlLFxuICAgICAgY3VzdG9tQ2FyZFR5cGUsXG4gICAgICBzZWxlY3RlZFRvbmUsXG4gICAgICBwcm9tcHQsXG4gICAgICB0b0ZpZWxkLFxuICAgICAgZnJvbUZpZWxkLFxuICAgICAgc2VsZWN0ZWRQYXBlclNpemUsXG4gICAgICBzYXZlSm9iVG9TdG9yYWdlLFxuICAgICAgc3Vic2NyaWJlVG9Kb2IsXG4gICAgICBzdGFydEVsYXBzZWRUaW1lVHJhY2tpbmdcbiAgICB9ID0gcHJvcHM7XG5cbiAgICBpZiAoIXVzZXJFbWFpbC50cmltKCkpIHtcbiAgICAgIHRvYXN0LmVycm9yKFwiUGxlYXNlIGVudGVyIHlvdXIgZW1haWwgYWRkcmVzc1wiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBCYXNpYyBlbWFpbCB2YWxpZGF0aW9uXG4gICAgY29uc3QgZW1haWxSZWdleCA9IC9eW15cXHNAXStAW15cXHNAXStcXC5bXlxcc0BdKyQvO1xuICAgIGlmICghZW1haWxSZWdleC50ZXN0KHVzZXJFbWFpbCkpIHtcbiAgICAgIHRvYXN0LmVycm9yKFwiUGxlYXNlIGVudGVyIGEgdmFsaWQgZW1haWwgYWRkcmVzc1wiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBWYWxpZGF0ZSBjdXN0b20gc3R5bGUgaWYgc2VsZWN0ZWRcbiAgICBpZiAoc2VsZWN0ZWRBcnRpc3RpY1N0eWxlID09PSBcImN1c3RvbVwiICYmICFjdXN0b21TdHlsZURlc2NyaXB0aW9uLnRyaW0oKSkge1xuICAgICAgdG9hc3QuZXJyb3IoXCJQbGVhc2UgZGVzY3JpYmUgeW91ciBjdXN0b20gYXJ0aXN0aWMgc3R5bGVcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gVmFsaWRhdGUgcmVmZXJlbmNlIGltYWdlcyB3aXRoIG1vZGVsIGNvbXBhdGliaWxpdHlcbiAgICBpZiAocmVmZXJlbmNlSW1hZ2VVcmxzLmxlbmd0aCA+IDAgJiYgc2VsZWN0ZWREcmFmdE1vZGVsICE9PSBcImdwdC1pbWFnZS0xXCIpIHtcbiAgICAgIHRvYXN0LmVycm9yKFwiUmVmZXJlbmNlIHBob3RvcyBhcmUgb25seSBzdXBwb3J0ZWQgd2l0aCBHUFQgSW1hZ2UgMSBtb2RlbC4gUGxlYXNlIHN3aXRjaCB0byBHUFQgSW1hZ2UgMSBmb3IgZHJhZnQgbW9kZSBvciByZW1vdmUgcmVmZXJlbmNlIHBob3Rvcy5cIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gU3RvcCBhbnkgZXhpc3RpbmcgdGltZXJzIGZpcnN0XG4gICAgcHJvcHMuc3RvcEVsYXBzZWRUaW1lVHJhY2tpbmcoKTtcbiAgICBcbiAgICAvLyBDbGVhciBBTEwgV2ViU29ja2V0IHN1YnNjcmlwdGlvbnMgYmVmb3JlIHN0YXJ0aW5nXG4gICAgaWYgKHByb3BzLnVuc3Vic2NyaWJlRnJvbUFsbEpvYnMpIHtcbiAgICAgIHByb3BzLnVuc3Vic2NyaWJlRnJvbUFsbEpvYnMoKTtcbiAgICB9XG4gICAgXG4gICAgLy8gQ2xlYXIgYWxsIG9sZCBkcmFmdCBqb2JzIGZyb20gbG9jYWxTdG9yYWdlIGJlZm9yZSBzdGFydGluZyBuZXcgZ2VuZXJhdGlvblxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc29sZS5sb2coJ/Cfp7kgQ2xlYXJpbmcgb2xkIGRyYWZ0IGpvYnMgYmVmb3JlIHN0YXJ0aW5nIG5ldyBnZW5lcmF0aW9uJyk7XG4gICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMobG9jYWxTdG9yYWdlKTtcbiAgICAgIGtleXMuZm9yRWFjaChrZXkgPT4ge1xuICAgICAgICBpZiAoa2V5LnN0YXJ0c1dpdGgoJ2NhcmRKb2JfZHJhZnQtJykpIHtcbiAgICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShrZXkpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIC8vIEFsc28gY2xlYXIgZnJvbSBwZW5kaW5nIGpvYnMgbGlzdFxuICAgICAgY29uc3QgcGVuZGluZ0pvYnMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdwZW5kaW5nQ2FyZEpvYnMnKSB8fCAnW10nKTtcbiAgICAgIGNvbnN0IGZpbHRlcmVkSm9icyA9IHBlbmRpbmdKb2JzLmZpbHRlcigoaWQ6IHN0cmluZykgPT4gIWlkLnN0YXJ0c1dpdGgoJ2RyYWZ0LScpKTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdwZW5kaW5nQ2FyZEpvYnMnLCBKU09OLnN0cmluZ2lmeShmaWx0ZXJlZEpvYnMpKTtcbiAgICB9XG4gICAgXG4gICAgc2V0SXNEcmFmdE1vZGUodHJ1ZSk7XG4gICAgc2V0SXNHZW5lcmF0aW5nKHRydWUpO1xuICAgIHN0YXJ0RWxhcHNlZFRpbWVUcmFja2luZygnZHJhZnQnKTtcbiAgICBzZXRHZW5lcmF0aW9uUHJvZ3Jlc3MoXCLwn46oIENyZWF0aW5nIDUgZnJvbnQgY292ZXIgdmFyaWF0aW9ucyBmb3IgeW91IHRvIGNob29zZSBmcm9tLi4uXCIpO1xuICAgIHNldERyYWZ0Q2FyZHMoW251bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGxdKTsgLy8gSW5pdGlhbGl6ZSB3aXRoIDUgZW1wdHkgc2xvdHNcbiAgICBzZXRTZWxlY3RlZERyYWZ0SW5kZXgoLTEpO1xuICAgIHNldERyYWZ0Q29tcGxldGlvblNob3duKGZhbHNlKTtcbiAgICBzZXREcmFmdENvbXBsZXRpb25Db3VudCgwKTtcbiAgICBcbiAgICAvLyBDbGVhciBhbnkgcHJldmlvdXMgY2FyZCBzdGF0ZVxuICAgIHNldEdlbmVyYXRlZENhcmQobnVsbCk7XG4gICAgc2V0R2VuZXJhdGVkQ2FyZHMoW10pO1xuICAgIHNldElzQ2FyZENvbXBsZXRlZChmYWxzZSk7XG4gICAgXG5cbiAgICB0cnkge1xuICAgICAgY29uc29sZS5sb2coXCLwn5qAIFN0YXJ0aW5nIGRyYWZ0IG1vZGUgZ2VuZXJhdGlvbiB3aXRoIDUgdmFyaWF0aW9uc1wiKTtcbiAgICAgIFxuICAgICAgY29uc3QgY2FyZFR5cGVGb3JQcm9tcHQgPSBzZWxlY3RlZFR5cGUgPT09IFwiY3VzdG9tXCIgPyBjdXN0b21DYXJkVHlwZSA6IHNlbGVjdGVkVHlwZTtcbiAgICAgIGNvbnN0IHNlbGVjdGVkVG9uZU9iaiA9IGNhcmRUb25lcy5maW5kKHRvbmUgPT4gdG9uZS5pZCA9PT0gc2VsZWN0ZWRUb25lKTtcbiAgICAgIGNvbnN0IHRvbmVEZXNjcmlwdGlvbiA9IHNlbGVjdGVkVG9uZU9iaiA/IHNlbGVjdGVkVG9uZU9iai5kZXNjcmlwdGlvbi50b0xvd2VyQ2FzZSgpIDogXCJoZWFydGZlbHQgYW5kIHNpbmNlcmVcIjtcbiAgICAgIGNvbnN0IGVmZmVjdGl2ZVByb21wdCA9IHByb21wdC50cmltKCkgfHwgYEEgYmVhdXRpZnVsICR7Y2FyZFR5cGVGb3JQcm9tcHR9IGNhcmQgd2l0aCAke3RvbmVEZXNjcmlwdGlvbn0gc3R5bGVgO1xuXG4gICAgICAvLyBHZW5lcmF0ZSA1IGRyYWZ0IHZhcmlhdGlvbnNcbiAgICAgIGNvbnN0IGRyYWZ0UHJvbWlzZXMgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiA1IH0sIGFzeW5jIChfLCBpbmRleCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGDwn46oIFN0YXJ0aW5nIGRyYWZ0IHZhcmlhdGlvbiAke2luZGV4ICsgMX1gKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBGb3Igc21hcnQgc3R5bGUsIHVzZSBwcmVkZWZpbmVkIHN0eWxlc1xuICAgICAgICAgIGxldCBzdHlsZU92ZXJyaWRlOiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbGV0IHN0eWxlTGFiZWw6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBpZiAoc2VsZWN0ZWRBcnRpc3RpY1N0eWxlID09PSBcImFpLXNtYXJ0LXN0eWxlXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHByZWRlZmluZWRTdHlsZXMgPSBbXCJ3YXRlcmNvbG9yXCIsIFwiYm90YW5pY2FsXCIsIFwiY29taWMtYm9va1wiLCBcImRyZWFteS1mYW50YXN5XCIsIFwibWluaW1hbGlzdFwiXTtcbiAgICAgICAgICAgIGNvbnN0IHN0eWxlTGFiZWxzID0gW1wi8J+OqCBXYXRlcmNvbG9yXCIsIFwi8J+MvyBCb3RhbmljYWxcIiwgXCLwn5KlIENvbWljIEJvb2tcIiwgXCLwn4y4IERyZWFteSBGYW50YXN5XCIsIFwi4pyoIE1pbmltYWxpc3RcIl07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHN0eWxlT3ZlcnJpZGUgPSBwcmVkZWZpbmVkU3R5bGVzW2luZGV4XTtcbiAgICAgICAgICAgIHN0eWxlTGFiZWwgPSBzdHlsZUxhYmVsc1tpbmRleF07XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIEdlbmVyYXRlIGZyb250IGNvdmVyIHByb21wdFxuICAgICAgICAgIGNvbnN0IHNlbGVjdGVkU3R5bGUgPSBhcnRpc3RpY1N0eWxlcy5maW5kKHN0eWxlID0+IHN0eWxlLmlkID09PSAoc3R5bGVPdmVycmlkZSB8fCBzZWxlY3RlZEFydGlzdGljU3R5bGUpKTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCBkcmFmdENvbmZpZzogRHJhZnRDb25maWcgPSB7XG4gICAgICAgICAgICBjYXJkVHlwZTogc2VsZWN0ZWRUeXBlLFxuICAgICAgICAgICAgY3VzdG9tQ2FyZFR5cGU6IGN1c3RvbUNhcmRUeXBlLFxuICAgICAgICAgICAgdG9uZTogc2VsZWN0ZWRUb25lLFxuICAgICAgICAgICAgdG9uZUxhYmVsOiBzZWxlY3RlZFRvbmVPYmogPyBzZWxlY3RlZFRvbmVPYmoubGFiZWwgOiBcIkhlYXJ0ZmVsdFwiLFxuICAgICAgICAgICAgdG9uZURlc2NyaXB0aW9uOiB0b25lRGVzY3JpcHRpb24sXG4gICAgICAgICAgICB0aGVtZTogZWZmZWN0aXZlUHJvbXB0LFxuICAgICAgICAgICAgdG9GaWVsZDogdG9GaWVsZCxcbiAgICAgICAgICAgIGZyb21GaWVsZDogZnJvbUZpZWxkLFxuICAgICAgICAgICAgcmVsYXRpb25zaGlwRmllbGQ6IHByb3BzLnJlbGF0aW9uc2hpcEZpZWxkLFxuICAgICAgICAgICAgYXJ0aXN0aWNTdHlsZTogc2VsZWN0ZWRTdHlsZSxcbiAgICAgICAgICAgIHJlZmVyZW5jZUltYWdlVXJsczogcmVmZXJlbmNlSW1hZ2VVcmxzLFxuICAgICAgICAgICAgcGhvdG9SZWZlcmVuY2VzOiBwcm9wcy5waG90b1JlZmVyZW5jZXMsXG4gICAgICAgICAgICBpc0RyYWZ0VmFyaWF0aW9uOiBzZWxlY3RlZEFydGlzdGljU3R5bGUgPT09IFwic21hcnRcIixcbiAgICAgICAgICAgIHZhcmlhdGlvbkluZGV4OiBpbmRleFxuICAgICAgICAgIH07XG5cbiAgICAgICAgICBjb25zdCB7IHByb21wdDogZnJvbnRDb3ZlclByb21wdFF1ZXJ5LCBpbWFnZXMgfSA9IFByb21wdEdlbmVyYXRvci5nZW5lcmF0ZURyYWZ0UHJvbXB0V2l0aEltYWdlcyhkcmFmdENvbmZpZyk7XG4gICAgICAgICAgXG4gICAgICAgICAgXG4gICAgICAgICAgY29uc3QgZnJvbnRDb3ZlclByb21wdCA9IGF3YWl0IGNoYXRXaXRoQUkoZnJvbnRDb3ZlclByb21wdFF1ZXJ5LCB7XG4gICAgICAgICAgICBtb2RlbDogXCJnZW1pbmktMi41LXByb1wiLFxuICAgICAgICAgICAgYXR0YWNobWVudHM6IGltYWdlc1xuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgaWYgKCFmcm9udENvdmVyUHJvbXB0Py50cmltKCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBnZW5lcmF0ZSBmcm9udCBjb3ZlciBwcm9tcHRcIik7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gRW5oYW5jZSB3aXRoIHJlZmVyZW5jZSBpbWFnZSBpbnN0cnVjdGlvbnNcbiAgICAgICAgICBsZXQgZW5oYW5jZWRGcm9udENvdmVyUHJvbXB0ID0gZnJvbnRDb3ZlclByb21wdC50cmltKCk7XG4gICAgICAgICAgZW5oYW5jZWRGcm9udENvdmVyUHJvbXB0ID0gUHJvbXB0R2VuZXJhdG9yLmVuaGFuY2VQcm9tcHRXaXRoUmVmZXJlbmNlUGhvdG9zKFxuICAgICAgICAgICAgZW5oYW5jZWRGcm9udENvdmVyUHJvbXB0LFxuICAgICAgICAgICAgcmVmZXJlbmNlSW1hZ2VVcmxzLmxlbmd0aCA+IDAsXG4gICAgICAgICAgICBzZWxlY3RlZERyYWZ0TW9kZWxcbiAgICAgICAgICApO1xuXG4gICAgICAgICAgLy8gR2VuZXJhdGUgdGhlIGltYWdlXG4gICAgICAgICAgY29uc3Qgam9iSWQgPSBgZHJhZnQtJHtpbmRleH0tJHt1dWlkdjQoKX1gO1xuICAgICAgICAgIGNvbnN0IGlucHV0SW1hZ2VzOiBzdHJpbmdbXSA9IFtdO1xuICAgICAgICAgIGlmIChyZWZlcmVuY2VJbWFnZVVybHMubGVuZ3RoID4gMCAmJiBzZWxlY3RlZERyYWZ0TW9kZWwgPT09IFwiZ3B0LWltYWdlLTFcIikge1xuICAgICAgICAgICAgaW5wdXRJbWFnZXMucHVzaCguLi5yZWZlcmVuY2VJbWFnZVVybHMpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJy9hcGkvZ2VuZXJhdGUtY2FyZC1hc3luYycsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICAgICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgIGpvYklkLFxuICAgICAgICAgICAgICBwcm9tcHRzOiB7IGZyb250Q292ZXI6IGVuaGFuY2VkRnJvbnRDb3ZlclByb21wdCB9LFxuICAgICAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgICAgICB1c2VyTnVtYmVyOiBcIisxNzE0NTk4NjEwNVwiLFxuICAgICAgICAgICAgICAgIG1vZGVsVmVyc2lvbjogc2VsZWN0ZWREcmFmdE1vZGVsLFxuICAgICAgICAgICAgICAgIGFzcGVjdFJhdGlvOiBwYXBlclNpemVzLmZpbmQoc2l6ZSA9PiBzaXplLmlkID09PSBzZWxlY3RlZFBhcGVyU2l6ZSk/LmFzcGVjdFJhdGlvIHx8IFwiOToxNlwiLFxuICAgICAgICAgICAgICAgIHF1YWxpdHk6IFwibG93XCIsXG4gICAgICAgICAgICAgICAgb3V0cHV0Rm9ybWF0OiBcImpwZWdcIixcbiAgICAgICAgICAgICAgICBvdXRwdXRDb21wcmVzc2lvbjogMTAwLFxuICAgICAgICAgICAgICAgIG1vZGVyYXRpb246IFwibG93XCIsXG4gICAgICAgICAgICAgICAgZGltZW5zaW9uczogcGFwZXJTaXplcy5maW5kKHNpemUgPT4gc2l6ZS5pZCA9PT0gc2VsZWN0ZWRQYXBlclNpemUpPy5kaW1lbnNpb25zIHx8IFwiMTAyNHgxNTM2XCIsXG4gICAgICAgICAgICAgICAgaXNGcm9udEJhY2tPbmx5OiB0cnVlLFxuICAgICAgICAgICAgICAgIHVzZXJFbWFpbCxcbiAgICAgICAgICAgICAgICBjYXJkVHlwZTogY2FyZFR5cGVGb3JQcm9tcHQsXG4gICAgICAgICAgICAgICAgdG9GaWVsZCxcbiAgICAgICAgICAgICAgICBmcm9tRmllbGQsXG4gICAgICAgICAgICAgICAgaXNEcmFmdE1vZGU6IHRydWUsXG4gICAgICAgICAgICAgICAgLi4uKGlucHV0SW1hZ2VzLmxlbmd0aCA+IDAgJiYgeyBcbiAgICAgICAgICAgICAgICAgIGlucHV0X2ltYWdlczogaW5wdXRJbWFnZXMsXG4gICAgICAgICAgICAgICAgICBpbnB1dF9pbWFnZXNfbW9kZTogXCJmcm9udF9jb3Zlcl9vbmx5XCJcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBTZXJ2ZXIgZXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgICBcbiAgICAgICAgICBpZiAocmVzdWx0LnN0YXR1cyAhPT0gJ3Byb2Nlc3NpbmcnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IocmVzdWx0Lm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byBzdGFydCBkcmFmdCBnZW5lcmF0aW9uJyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc29sZS5sb2coYOKchSBEcmFmdCB2YXJpYXRpb24gJHtpbmRleCArIDF9IGpvYiBzdGFydGVkOmAsIGpvYklkKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBTYXZlIGRyYWZ0IGpvYiB0byBzdG9yYWdlIGZvciByZWNvdmVyeVxuICAgICAgICAgIHNhdmVKb2JUb1N0b3JhZ2Uoam9iSWQsIHtcbiAgICAgICAgICAgIGlzRHJhZnQ6IHRydWUsXG4gICAgICAgICAgICBkcmFmdEluZGV4OiBpbmRleCxcbiAgICAgICAgICAgIHN0eWxlSW5mbzogc3R5bGVPdmVycmlkZSA/IHsgc3R5bGVOYW1lOiBzdHlsZU92ZXJyaWRlLCBzdHlsZUxhYmVsOiBzdHlsZUxhYmVsIH0gOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBmcm9udENvdmVyUHJvbXB0OiBlbmhhbmNlZEZyb250Q292ZXJQcm9tcHQsXG4gICAgICAgICAgICB1c2VyRW1haWwsXG4gICAgICAgICAgICBzZWxlY3RlZFR5cGUsXG4gICAgICAgICAgICBzZWxlY3RlZFRvbmUsXG4gICAgICAgICAgICB0b0ZpZWxkLFxuICAgICAgICAgICAgZnJvbUZpZWxkLFxuICAgICAgICAgICAgZHJhZnRDYXJkczogW10gIC8vIFdpbGwgYmUgdXBkYXRlZCBhcyBkcmFmdHMgY29tcGxldGVcbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIC8vIFN1YnNjcmliZSB0byBXZWJTb2NrZXQgdXBkYXRlc1xuICAgICAgICAgIHN1YnNjcmliZVRvSm9iKGpvYklkKTtcblxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYOKdjCBEcmFmdCB2YXJpYXRpb24gJHtpbmRleCArIDF9IGZhaWxlZDpgLCBlcnJvcik7XG4gICAgICAgICAgdG9hc3QuZXJyb3IoYERyYWZ0IHZhcmlhdGlvbiAke2luZGV4ICsgMX0gZmFpbGVkOiAke2Vycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InfWApO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgLy8gV2FpdCBmb3IgYWxsIGRyYWZ0IGdlbmVyYXRpb25zIHRvIHN0YXJ0XG4gICAgICBhd2FpdCBQcm9taXNlLmFsbFNldHRsZWQoZHJhZnRQcm9taXNlcyk7XG4gICAgICBjb25zb2xlLmxvZyhcIvCfmoAgQWxsIGRyYWZ0IHZhcmlhdGlvbnMgc3RhcnRlZFwiKTtcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdEcmFmdCBjYXJkIGdlbmVyYXRpb24gZXJyb3I6JywgZXJyb3IpO1xuICAgICAgdG9hc3QuZXJyb3IoYEZhaWxlZCB0byBzdGFydCBkcmFmdCBnZW5lcmF0aW9uOiAke2Vycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InfWApO1xuICAgICAgXG4gICAgICBzZXRJc0dlbmVyYXRpbmcoZmFsc2UpO1xuICAgICAgc2V0SXNEcmFmdE1vZGUoZmFsc2UpO1xuICAgICAgc2V0RHJhZnRDb21wbGV0aW9uU2hvd24oZmFsc2UpO1xuICAgICAgc2V0RHJhZnRDb21wbGV0aW9uQ291bnQoMCk7XG4gICAgICBzZXRHZW5lcmF0aW9uUHJvZ3Jlc3MoXCJcIik7XG4gICAgICBwcm9wcy5zdG9wRWxhcHNlZFRpbWVUcmFja2luZygpO1xuICAgIH1cbiAgfSwgW3Byb3BzXSk7XG5cbiAgLy8gR2VuZXJhdGUgZmluYWwgaGlnaC1xdWFsaXR5IGNhcmQgZnJvbSBzZWxlY3RlZCBkcmFmdFxuICBjb25zdCBoYW5kbGVHZW5lcmF0ZUZpbmFsRnJvbURyYWZ0ID0gdXNlQ2FsbGJhY2soYXN5bmMgKGRpc3BsYXlJbmRleDogbnVtYmVyKSA9PiB7XG4gICAgLy8gUHJldmVudCBkdXBsaWNhdGUgY2FsbHNcbiAgICBpZiAoaXNHZW5lcmF0aW5nRmluYWxDYXJkKSB7XG4gICAgICBjb25zb2xlLmxvZygn4pqg77iPIEZpbmFsIGNhcmQgZ2VuZXJhdGlvbiBhbHJlYWR5IGluIHByb2dyZXNzLCBza2lwcGluZyBkdXBsaWNhdGUgY2FsbCcpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCBzZWxlY3RlZERyYWZ0ID0gZHJhZnRDYXJkc1tkaXNwbGF5SW5kZXhdO1xuICAgIGlmICghc2VsZWN0ZWREcmFmdCkge1xuICAgICAgdG9hc3QuZXJyb3IoXCJQbGVhc2Ugd2FpdCBmb3IgdGhlIGRyYWZ0IHRvIGNvbXBsZXRlIGJlZm9yZSBzZWxlY3RpbmdcIik7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3Qge1xuICAgICAgc2VsZWN0ZWRUeXBlLFxuICAgICAgY3VzdG9tQ2FyZFR5cGUsXG4gICAgICBzZWxlY3RlZFRvbmUsXG4gICAgICBwcm9tcHQsXG4gICAgICB0b0ZpZWxkLFxuICAgICAgZnJvbUZpZWxkLFxuICAgICAgZmluYWxDYXJkTWVzc2FnZSxcbiAgICAgIGlzSGFuZHdyaXR0ZW5NZXNzYWdlLFxuICAgICAgc2VsZWN0ZWRBcnRpc3RpY1N0eWxlLFxuICAgICAgY3VzdG9tU3R5bGVEZXNjcmlwdGlvbixcbiAgICAgIGlzRnJvbnRCYWNrT25seSxcbiAgICAgIHNlbGVjdGVkSW1hZ2VNb2RlbCxcbiAgICAgIHNlbGVjdGVkUGFwZXJTaXplLFxuICAgICAgdXNlckVtYWlsLFxuICAgICAgcmVmZXJlbmNlSW1hZ2VVcmxzLFxuICAgICAgc3RhcnRFbGFwc2VkVGltZVRyYWNraW5nLFxuICAgICAgc3Vic2NyaWJlVG9Kb2JcbiAgICB9ID0gcHJvcHM7XG5cbiAgICAvLyBTdG9wIGFueSBleGlzdGluZyB0aW1lcnMgZmlyc3RcbiAgICBwcm9wcy5zdG9wRWxhcHNlZFRpbWVUcmFja2luZygpO1xuICAgIFxuICAgIHNldElzR2VuZXJhdGluZ0ZpbmFsQ2FyZCh0cnVlKTtcbiAgICBzZXRJc0RyYWZ0TW9kZShmYWxzZSk7IC8vIFN3aXRjaCBvdXQgb2YgZHJhZnQgbW9kZSBmb3IgZmluYWwgZ2VuZXJhdGlvblxuICAgIHNldFNlbGVjdGVkRHJhZnRJbmRleChkaXNwbGF5SW5kZXgpO1xuICAgIHN0YXJ0RWxhcHNlZFRpbWVUcmFja2luZygnZmluYWwnKTtcbiAgICBzZXRHZW5lcmF0aW9uUHJvZ3Jlc3MoXCLwn46oIENyZWF0aW5nIGhpZ2gtcXVhbGl0eSB2ZXJzaW9uIG9mIHlvdXIgc2VsZWN0ZWQgZGVzaWduLi4uXCIpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGpvYklkID0gdXVpZHY0KCk7XG4gICAgICBcbiAgICAgIC8vIEdlbmVyYXRlIHRoZSBtaXNzaW5nIHByb21wdHNcbiAgICAgIGNvbnN0IHN0b3JlZEZyb250Q292ZXJQcm9tcHQgPSBzZWxlY3RlZERyYWZ0LmdlbmVyYXRlZFByb21wdHM/LmZyb250Q292ZXI7XG4gICAgICBpZiAoIXN0b3JlZEZyb250Q292ZXJQcm9tcHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU2VsZWN0ZWQgZHJhZnQgaXMgbWlzc2luZyBmcm9udENvdmVyIHByb21wdFwiKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3QgY2FyZFR5cGVGb3JQcm9tcHQgPSBzZWxlY3RlZFR5cGUgPT09IFwiY3VzdG9tXCIgPyBjdXN0b21DYXJkVHlwZSA6IHNlbGVjdGVkVHlwZTtcbiAgICAgIGNvbnN0IHNlbGVjdGVkVG9uZU9iaiA9IGNhcmRUb25lcy5maW5kKHRvbmUgPT4gdG9uZS5pZCA9PT0gc2VsZWN0ZWRUb25lKTtcbiAgICAgIGNvbnN0IHRvbmVEZXNjcmlwdGlvbiA9IHNlbGVjdGVkVG9uZU9iaiA/IHNlbGVjdGVkVG9uZU9iai5kZXNjcmlwdGlvbi50b0xvd2VyQ2FzZSgpIDogXCJoZWFydGZlbHQgYW5kIHNpbmNlcmVcIjtcbiAgICAgIGNvbnN0IGVmZmVjdGl2ZVByb21wdCA9IHByb21wdC50cmltKCkgfHwgYEEgYmVhdXRpZnVsICR7Y2FyZFR5cGVGb3JQcm9tcHR9IGNhcmQgd2l0aCAke3RvbmVEZXNjcmlwdGlvbn0gc3R5bGVgO1xuICAgICAgXG4gICAgICBsZXQgbWVzc2FnZUNvbnRlbnQgPSBmaW5hbENhcmRNZXNzYWdlO1xuICAgICAgaWYgKGlzSGFuZHdyaXR0ZW5NZXNzYWdlKSB7XG4gICAgICAgIG1lc3NhZ2VDb250ZW50ID0gXCJbQmxhbmsgc3BhY2UgZm9yIGhhbmR3cml0dGVuIG1lc3NhZ2VdXCI7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEdldCBzdHlsZSBmcm9tIHRoZSBzZWxlY3RlZCBkcmFmdFxuICAgICAgY29uc3QgZHJhZnRTdHlsZUluZm8gPSBzZWxlY3RlZERyYWZ0LnN0eWxlSW5mbztcbiAgICAgIGxldCBzZWxlY3RlZFN0eWxlO1xuICAgICAgaWYgKGRyYWZ0U3R5bGVJbmZvICYmIGRyYWZ0U3R5bGVJbmZvLnN0eWxlTmFtZSkge1xuICAgICAgICBzZWxlY3RlZFN0eWxlID0gYXJ0aXN0aWNTdHlsZXMuZmluZChzdHlsZSA9PiBzdHlsZS5pZCA9PT0gZHJhZnRTdHlsZUluZm8uc3R5bGVOYW1lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlbGVjdGVkU3R5bGUgPSBhcnRpc3RpY1N0eWxlcy5maW5kKHN0eWxlID0+IHN0eWxlLmlkID09PSBzZWxlY3RlZEFydGlzdGljU3R5bGUpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBVc2UgUHJvbXB0R2VuZXJhdG9yIGZvciBmaW5hbCBjYXJkIGZyb20gZHJhZnRcbiAgICAgIGNvbnN0IGZpbmFsRnJvbURyYWZ0Q29uZmlnOiBGaW5hbEZyb21EcmFmdENvbmZpZyA9IHtcbiAgICAgICAgZnJvbnRDb3ZlclByb21wdDogc3RvcmVkRnJvbnRDb3ZlclByb21wdCxcbiAgICAgICAgY2FyZFR5cGU6IHNlbGVjdGVkVHlwZSxcbiAgICAgICAgY3VzdG9tQ2FyZFR5cGU6IGN1c3RvbUNhcmRUeXBlLFxuICAgICAgICB0aGVtZTogZWZmZWN0aXZlUHJvbXB0LFxuICAgICAgICB0b25lOiBzZWxlY3RlZFRvbmUsXG4gICAgICAgIHRvbmVEZXNjcmlwdGlvbjogdG9uZURlc2NyaXB0aW9uLFxuICAgICAgICB0b0ZpZWxkOiB0b0ZpZWxkLFxuICAgICAgICBmcm9tRmllbGQ6IGZyb21GaWVsZCxcbiAgICAgICAgbWVzc2FnZTogbWVzc2FnZUNvbnRlbnQsXG4gICAgICAgIGlzSGFuZHdyaXR0ZW5NZXNzYWdlOiBpc0hhbmR3cml0dGVuTWVzc2FnZSxcbiAgICAgICAgYXJ0aXN0aWNTdHlsZTogc2VsZWN0ZWRTdHlsZSxcbiAgICAgICAgaXNGcm9udEJhY2tPbmx5OiBpc0Zyb250QmFja09ubHlcbiAgICAgIH07XG5cbiAgICAgIGNvbnN0IGZpbmFsUHJvbXB0cyA9IGF3YWl0IFByb21wdEdlbmVyYXRvci5nZW5lcmF0ZUZpbmFsRnJvbURyYWZ0UHJvbXB0c0NvbWJpbmVkKGZpbmFsRnJvbURyYWZ0Q29uZmlnKTtcblxuICAgICAgaWYgKCFmaW5hbFByb21wdHMgfHwgIWZpbmFsUHJvbXB0cy5mcm9udENvdmVyIHx8ICFmaW5hbFByb21wdHMuYmFja0NvdmVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBnZW5lcmF0ZSBjb21wbGV0ZSBwcm9tcHRzIGZvciBmaW5hbCBjYXJkXCIpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBQcmVwYXJlIGlucHV0IGltYWdlcyBmb3IgZmluYWwgZ2VuZXJhdGlvblxuICAgICAgY29uc3QgaW5wdXRJbWFnZXM6IHN0cmluZ1tdID0gW107XG4gICAgICBpZiAocmVmZXJlbmNlSW1hZ2VVcmxzLmxlbmd0aCA+IDAgJiYgc2VsZWN0ZWRJbWFnZU1vZGVsID09PSBcImdwdC1pbWFnZS0xXCIpIHtcbiAgICAgICAgaW5wdXRJbWFnZXMucHVzaCguLi5yZWZlcmVuY2VJbWFnZVVybHMpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2dlbmVyYXRlLWNhcmQtYXN5bmMnLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIGpvYklkLFxuICAgICAgICAgIHByb21wdHM6IGZpbmFsUHJvbXB0cyxcbiAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgIHVzZXJOdW1iZXI6IFwiKzE3MTQ1OTg2MTA1XCIsXG4gICAgICAgICAgICBtb2RlbFZlcnNpb246IHNlbGVjdGVkSW1hZ2VNb2RlbCxcbiAgICAgICAgICAgIGFzcGVjdFJhdGlvOiBwYXBlclNpemVzLmZpbmQoc2l6ZSA9PiBzaXplLmlkID09PSBzZWxlY3RlZFBhcGVyU2l6ZSk/LmFzcGVjdFJhdGlvIHx8IFwiOToxNlwiLFxuICAgICAgICAgICAgcXVhbGl0eTogXCJoaWdoXCIsXG4gICAgICAgICAgICBvdXRwdXRGb3JtYXQ6IFwianBlZ1wiLFxuICAgICAgICAgICAgb3V0cHV0Q29tcHJlc3Npb246IDEwMCxcbiAgICAgICAgICAgIG1vZGVyYXRpb246IFwibG93XCIsXG4gICAgICAgICAgICBkaW1lbnNpb25zOiBwYXBlclNpemVzLmZpbmQoc2l6ZSA9PiBzaXplLmlkID09PSBzZWxlY3RlZFBhcGVyU2l6ZSk/LmRpbWVuc2lvbnMgfHwgXCIxMDI0eDE1MzZcIixcbiAgICAgICAgICAgIGlzRnJvbnRCYWNrT25seSxcbiAgICAgICAgICAgIHVzZXJFbWFpbCxcbiAgICAgICAgICAgIGNhcmRUeXBlOiBzZWxlY3RlZFR5cGUgPT09IFwiY3VzdG9tXCIgPyBjdXN0b21DYXJkVHlwZSA6IHNlbGVjdGVkVHlwZSxcbiAgICAgICAgICAgIHRvRmllbGQsXG4gICAgICAgICAgICBmcm9tRmllbGQsXG4gICAgICAgICAgICBpc0RyYWZ0TW9kZTogZmFsc2UsXG4gICAgICAgICAgICAuLi4oaW5wdXRJbWFnZXMubGVuZ3RoID4gMCAmJiB7IFxuICAgICAgICAgICAgICBpbnB1dF9pbWFnZXM6IGlucHV0SW1hZ2VzLFxuICAgICAgICAgICAgICBpbnB1dF9pbWFnZXNfbW9kZTogXCJmcm9udF9jb3Zlcl9vbmx5XCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBTZXJ2ZXIgZXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBcbiAgICAgIGlmIChyZXN1bHQuc3RhdHVzICE9PSAncHJvY2Vzc2luZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlc3VsdC5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gc3RhcnQgZmluYWwgY2FyZCBnZW5lcmF0aW9uJyk7XG4gICAgICB9XG5cbiAgICAgIHNldEN1cnJlbnRKb2JJZChqb2JJZCk7XG4gICAgICB0b2FzdC5zdWNjZXNzKFwi8J+OqCBHZW5lcmF0aW5nIGhpZ2gtcXVhbGl0eSB2ZXJzaW9uIG9mIHlvdXIgc2VsZWN0ZWQgZGVzaWduIVwiKTtcbiAgICAgIFxuICAgICAgLy8gU3Vic2NyaWJlIHRvIFdlYlNvY2tldCB1cGRhdGVzXG4gICAgICBzdWJzY3JpYmVUb0pvYihqb2JJZCk7XG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmluYWwgY2FyZCBnZW5lcmF0aW9uIGVycm9yOicsIGVycm9yKTtcbiAgICAgIHRvYXN0LmVycm9yKFwiRmFpbGVkIHRvIGdlbmVyYXRlIGZpbmFsIGNhcmQuIFBsZWFzZSB0cnkgYWdhaW4uXCIpO1xuICAgICAgc2V0SXNHZW5lcmF0aW5nRmluYWxDYXJkKGZhbHNlKTtcbiAgICAgIHNldEdlbmVyYXRpb25Qcm9ncmVzcyhcIlwiKTtcbiAgICAgIHByb3BzLnN0b3BFbGFwc2VkVGltZVRyYWNraW5nKCk7IC8vIENsZWFyIHRpbWUtYmFzZWQgcHJvZ3Jlc3Mgb24gZXJyb3JcbiAgICB9XG4gIH0sIFtkcmFmdENhcmRzLCBpc0dlbmVyYXRpbmdGaW5hbENhcmQsIHByb3BzXSk7XG5cbiAgcmV0dXJuIHtcbiAgICBpc0RyYWZ0TW9kZSxcbiAgICBzZXRJc0RyYWZ0TW9kZSxcbiAgICBkcmFmdENhcmRzLFxuICAgIHNldERyYWZ0Q2FyZHMsXG4gICAgc2VsZWN0ZWREcmFmdEluZGV4LFxuICAgIHNldFNlbGVjdGVkRHJhZnRJbmRleCxcbiAgICBpc0dlbmVyYXRpbmdGaW5hbENhcmQsXG4gICAgc2V0SXNHZW5lcmF0aW5nRmluYWxDYXJkLFxuICAgIHByZXZpZXdpbmdEcmFmdEluZGV4LFxuICAgIHNldFByZXZpZXdpbmdEcmFmdEluZGV4LFxuICAgIGRyYWZ0Q29tcGxldGlvblNob3duLFxuICAgIHNldERyYWZ0Q29tcGxldGlvblNob3duLFxuICAgIGRyYWZ0Q29tcGxldGlvbkNvdW50LFxuICAgIHNldERyYWZ0Q29tcGxldGlvbkNvdW50LFxuICAgIGhhbmRsZUdlbmVyYXRlRHJhZnRDYXJkcyxcbiAgICBoYW5kbGVHZW5lcmF0ZUZpbmFsRnJvbURyYWZ0LFxuICAgIGlzR2VuZXJhdGluZyxcbiAgICBzZXRJc0dlbmVyYXRpbmcsXG4gICAgZ2VuZXJhdGlvblByb2dyZXNzLFxuICAgIHNldEdlbmVyYXRpb25Qcm9ncmVzcyxcbiAgICBnZW5lcmF0ZWRDYXJkLFxuICAgIHNldEdlbmVyYXRlZENhcmQsXG4gICAgZ2VuZXJhdGVkQ2FyZHMsXG4gICAgc2V0R2VuZXJhdGVkQ2FyZHMsXG4gICAgaXNDYXJkQ29tcGxldGVkLFxuICAgIHNldElzQ2FyZENvbXBsZXRlZCxcbiAgICBjdXJyZW50Sm9iSWQsXG4gICAgc2V0Q3VycmVudEpvYklkXG4gIH07XG59Il0sIm5hbWVzIjpbInVzZVN0YXRlIiwidXNlQ2FsbGJhY2siLCJ0b2FzdCIsInY0IiwidXVpZHY0IiwiUHJvbXB0R2VuZXJhdG9yIiwiYXJ0aXN0aWNTdHlsZXMiLCJwYXBlclNpemVzIiwiY2FyZFRvbmVzIiwiY2hhdFdpdGhBSSIsInVzZURyYWZ0R2VuZXJhdGlvbiIsInByb3BzIiwiaXNEcmFmdE1vZGUiLCJzZXRJc0RyYWZ0TW9kZSIsImRyYWZ0Q2FyZHMiLCJzZXREcmFmdENhcmRzIiwic2VsZWN0ZWREcmFmdEluZGV4Iiwic2V0U2VsZWN0ZWREcmFmdEluZGV4IiwiaXNHZW5lcmF0aW5nRmluYWxDYXJkIiwic2V0SXNHZW5lcmF0aW5nRmluYWxDYXJkIiwicHJldmlld2luZ0RyYWZ0SW5kZXgiLCJzZXRQcmV2aWV3aW5nRHJhZnRJbmRleCIsImRyYWZ0Q29tcGxldGlvblNob3duIiwic2V0RHJhZnRDb21wbGV0aW9uU2hvd24iLCJkcmFmdENvbXBsZXRpb25Db3VudCIsInNldERyYWZ0Q29tcGxldGlvbkNvdW50IiwiaXNHZW5lcmF0aW5nIiwic2V0SXNHZW5lcmF0aW5nIiwiZ2VuZXJhdGlvblByb2dyZXNzIiwic2V0R2VuZXJhdGlvblByb2dyZXNzIiwiZ2VuZXJhdGVkQ2FyZCIsInNldEdlbmVyYXRlZENhcmQiLCJnZW5lcmF0ZWRDYXJkcyIsInNldEdlbmVyYXRlZENhcmRzIiwiaXNDYXJkQ29tcGxldGVkIiwic2V0SXNDYXJkQ29tcGxldGVkIiwiY3VycmVudEpvYklkIiwic2V0Q3VycmVudEpvYklkIiwiaGFuZGxlR2VuZXJhdGVEcmFmdENhcmRzIiwidXNlckVtYWlsIiwic2VsZWN0ZWRBcnRpc3RpY1N0eWxlIiwiY3VzdG9tU3R5bGVEZXNjcmlwdGlvbiIsInJlZmVyZW5jZUltYWdlVXJscyIsInNlbGVjdGVkRHJhZnRNb2RlbCIsInNlbGVjdGVkVHlwZSIsImN1c3RvbUNhcmRUeXBlIiwic2VsZWN0ZWRUb25lIiwicHJvbXB0IiwidG9GaWVsZCIsImZyb21GaWVsZCIsInNlbGVjdGVkUGFwZXJTaXplIiwic2F2ZUpvYlRvU3RvcmFnZSIsInN1YnNjcmliZVRvSm9iIiwic3RhcnRFbGFwc2VkVGltZVRyYWNraW5nIiwidHJpbSIsImVycm9yIiwiZW1haWxSZWdleCIsInRlc3QiLCJsZW5ndGgiLCJzdG9wRWxhcHNlZFRpbWVUcmFja2luZyIsInVuc3Vic2NyaWJlRnJvbUFsbEpvYnMiLCJjb25zb2xlIiwibG9nIiwia2V5cyIsIk9iamVjdCIsImxvY2FsU3RvcmFnZSIsImZvckVhY2giLCJrZXkiLCJzdGFydHNXaXRoIiwicmVtb3ZlSXRlbSIsInBlbmRpbmdKb2JzIiwiSlNPTiIsInBhcnNlIiwiZ2V0SXRlbSIsImZpbHRlcmVkSm9icyIsImZpbHRlciIsImlkIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsImNhcmRUeXBlRm9yUHJvbXB0Iiwic2VsZWN0ZWRUb25lT2JqIiwiZmluZCIsInRvbmUiLCJ0b25lRGVzY3JpcHRpb24iLCJkZXNjcmlwdGlvbiIsInRvTG93ZXJDYXNlIiwiZWZmZWN0aXZlUHJvbXB0IiwiZHJhZnRQcm9taXNlcyIsIkFycmF5IiwiZnJvbSIsIl8iLCJpbmRleCIsInN0eWxlT3ZlcnJpZGUiLCJ1bmRlZmluZWQiLCJzdHlsZUxhYmVsIiwicHJlZGVmaW5lZFN0eWxlcyIsInN0eWxlTGFiZWxzIiwic2VsZWN0ZWRTdHlsZSIsInN0eWxlIiwiZHJhZnRDb25maWciLCJjYXJkVHlwZSIsInRvbmVMYWJlbCIsImxhYmVsIiwidGhlbWUiLCJyZWxhdGlvbnNoaXBGaWVsZCIsImFydGlzdGljU3R5bGUiLCJwaG90b1JlZmVyZW5jZXMiLCJpc0RyYWZ0VmFyaWF0aW9uIiwidmFyaWF0aW9uSW5kZXgiLCJmcm9udENvdmVyUHJvbXB0UXVlcnkiLCJpbWFnZXMiLCJnZW5lcmF0ZURyYWZ0UHJvbXB0V2l0aEltYWdlcyIsImZyb250Q292ZXJQcm9tcHQiLCJtb2RlbCIsImF0dGFjaG1lbnRzIiwiRXJyb3IiLCJlbmhhbmNlZEZyb250Q292ZXJQcm9tcHQiLCJlbmhhbmNlUHJvbXB0V2l0aFJlZmVyZW5jZVBob3RvcyIsImpvYklkIiwiaW5wdXRJbWFnZXMiLCJwdXNoIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwicHJvbXB0cyIsImZyb250Q292ZXIiLCJjb25maWciLCJ1c2VyTnVtYmVyIiwibW9kZWxWZXJzaW9uIiwiYXNwZWN0UmF0aW8iLCJzaXplIiwicXVhbGl0eSIsIm91dHB1dEZvcm1hdCIsIm91dHB1dENvbXByZXNzaW9uIiwibW9kZXJhdGlvbiIsImRpbWVuc2lvbnMiLCJpc0Zyb250QmFja09ubHkiLCJpbnB1dF9pbWFnZXMiLCJpbnB1dF9pbWFnZXNfbW9kZSIsIm9rIiwic3RhdHVzIiwicmVzdWx0IiwianNvbiIsIm1lc3NhZ2UiLCJpc0RyYWZ0IiwiZHJhZnRJbmRleCIsInN0eWxlSW5mbyIsInN0eWxlTmFtZSIsIlByb21pc2UiLCJhbGxTZXR0bGVkIiwiaGFuZGxlR2VuZXJhdGVGaW5hbEZyb21EcmFmdCIsImRpc3BsYXlJbmRleCIsInNlbGVjdGVkRHJhZnQiLCJmaW5hbENhcmRNZXNzYWdlIiwiaXNIYW5kd3JpdHRlbk1lc3NhZ2UiLCJzZWxlY3RlZEltYWdlTW9kZWwiLCJzdG9yZWRGcm9udENvdmVyUHJvbXB0IiwiZ2VuZXJhdGVkUHJvbXB0cyIsIm1lc3NhZ2VDb250ZW50IiwiZHJhZnRTdHlsZUluZm8iLCJmaW5hbEZyb21EcmFmdENvbmZpZyIsImZpbmFsUHJvbXB0cyIsImdlbmVyYXRlRmluYWxGcm9tRHJhZnRQcm9tcHRzQ29tYmluZWQiLCJiYWNrQ292ZXIiLCJzdWNjZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/cardStudio/useDraftGeneration.ts\n"));

/***/ })

});