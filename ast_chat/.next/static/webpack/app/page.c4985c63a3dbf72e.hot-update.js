"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/cardStudio/useDraftGeneration.ts":
/*!************************************************!*\
  !*** ./hooks/cardStudio/useDraftGeneration.ts ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useDraftGeneration: function() { return /* binding */ useDraftGeneration; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _lib_promptGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/promptGenerator */ \"(app-pages-browser)/./lib/promptGenerator.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./hooks/cardStudio/constants.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./hooks/cardStudio/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ useDraftGeneration auto */ \n\n\n\n\n\nfunction useDraftGeneration(props) {\n    // Draft mode state\n    const [isDraftMode, setIsDraftMode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [draftCards, setDraftCards] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [draftIndexMapping, setDraftIndexMapping] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [selectedDraftIndex, setSelectedDraftIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1);\n    const [isGeneratingFinalCard, setIsGeneratingFinalCard] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [previewingDraftIndex, setPreviewingDraftIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1);\n    const [draftCompletionShown, setDraftCompletionShown] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [draftCompletionCount, setDraftCompletionCount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [isGenerating, setIsGenerating] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [generationProgress, setGenerationProgress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [progressPercentage, setProgressPercentage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [generatedCard, setGeneratedCard] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [generatedCards, setGeneratedCards] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [isCardCompleted, setIsCardCompleted] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [currentJobId, setCurrentJobId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Draft mode generation - creates 5 front cover variations\n    const handleGenerateDraftCards = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        const { userEmail, selectedArtisticStyle, customStyleDescription, referenceImageUrls, selectedDraftModel, selectedType, customCardType, selectedTone, prompt, toField, fromField, selectedPaperSize, saveJobToStorage, subscribeToJob, startElapsedTimeTracking } = props;\n        if (!userEmail.trim()) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Please enter your email address\");\n            return;\n        }\n        // Basic email validation\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(userEmail)) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Please enter a valid email address\");\n            return;\n        }\n        // Validate custom style if selected\n        if (selectedArtisticStyle === \"custom\" && !customStyleDescription.trim()) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Please describe your custom artistic style\");\n            return;\n        }\n        // Validate reference images with model compatibility\n        if (referenceImageUrls.length > 0 && selectedDraftModel !== \"gpt-image-1\") {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Reference photos are only supported with GPT Image 1 model. Please switch to GPT Image 1 for draft mode or remove reference photos.\");\n            return;\n        }\n        // Stop any existing timers first\n        props.stopElapsedTimeTracking();\n        setIsDraftMode(true);\n        setIsGenerating(true);\n        startElapsedTimeTracking(undefined, 45); // 45 seconds for draft mode\n        setGenerationProgress(\"\\uD83C\\uDFA8 Creating 5 front cover variations for you to choose from...\");\n        setProgressPercentage(0);\n        setDraftCards([]);\n        setDraftIndexMapping([]);\n        setSelectedDraftIndex(-1);\n        setDraftCompletionShown(false);\n        setDraftCompletionCount(0);\n        // Clear any previous card state\n        setGeneratedCard(null);\n        setGeneratedCards([]);\n        setIsCardCompleted(false);\n        try {\n            console.log(\"\\uD83D\\uDE80 Starting draft mode generation with 5 variations\");\n            console.log(\"\\uD83D\\uDCF8 Props referenceImageUrls:\", props.referenceImageUrls);\n            console.log(\"\\uD83D\\uDCF8 Local referenceImageUrls:\", referenceImageUrls);\n            const cardTypeForPrompt = selectedType === \"custom\" ? customCardType : selectedType;\n            const selectedToneObj = _constants__WEBPACK_IMPORTED_MODULE_3__.cardTones.find((tone)=>tone.id === selectedTone);\n            const toneDescription = selectedToneObj ? selectedToneObj.description.toLowerCase() : \"heartfelt and sincere\";\n            const effectivePrompt = prompt.trim() || \"A beautiful \".concat(cardTypeForPrompt, \" card with \").concat(toneDescription, \" style\");\n            // Generate 5 draft variations\n            const draftPromises = Array.from({\n                length: 5\n            }, async (_, index)=>{\n                try {\n                    var _paperSizes_find, _paperSizes_find1;\n                    console.log(\"\\uD83C\\uDFA8 Starting draft variation \".concat(index + 1));\n                    // For smart style, use predefined styles\n                    let styleOverride = undefined;\n                    let styleLabel = undefined;\n                    if (selectedArtisticStyle === \"ai-smart-style\") {\n                        const predefinedStyles = [\n                            \"watercolor\",\n                            \"botanical\",\n                            \"comic-book\",\n                            \"dreamy-fantasy\",\n                            \"minimalist\"\n                        ];\n                        const styleLabels = [\n                            \"\\uD83C\\uDFA8 Watercolor\",\n                            \"\\uD83C\\uDF3F Botanical\",\n                            \"\\uD83D\\uDCA5 Comic Book\",\n                            \"\\uD83C\\uDF38 Dreamy Fantasy\",\n                            \"✨ Minimalist\"\n                        ];\n                        styleOverride = predefinedStyles[index];\n                        styleLabel = styleLabels[index];\n                    }\n                    // Generate front cover prompt\n                    const selectedStyle = _constants__WEBPACK_IMPORTED_MODULE_3__.artisticStyles.find((style)=>style.id === (styleOverride || selectedArtisticStyle));\n                    const draftConfig = {\n                        cardType: selectedType,\n                        customCardType: customCardType,\n                        tone: selectedTone,\n                        toneLabel: selectedToneObj ? selectedToneObj.label : \"Heartfelt\",\n                        toneDescription: toneDescription,\n                        theme: effectivePrompt,\n                        toField: toField,\n                        fromField: fromField,\n                        artisticStyle: selectedStyle,\n                        referenceImageUrls: referenceImageUrls,\n                        photoAnalyses: props.photoAnalyses,\n                        isDraftVariation: selectedArtisticStyle === \"smart\",\n                        variationIndex: index\n                    };\n                    const { prompt: frontCoverPromptQuery, images } = _lib_promptGenerator__WEBPACK_IMPORTED_MODULE_2__.PromptGenerator.generateDraftPromptWithImages(draftConfig);\n                    // Debug logging for image URLs\n                    console.log(\"\\uD83D\\uDDBC️ Draft \".concat(index + 1, \" - draftConfig.referenceImageUrls:\"), draftConfig.referenceImageUrls);\n                    console.log(\"\\uD83D\\uDDBC️ Draft \".concat(index + 1, \" - images from generator:\"), images);\n                    console.log(\"\\uD83D\\uDDBC️ Draft \".concat(index + 1, \" - images length:\"), (images === null || images === void 0 ? void 0 : images.length) || 0);\n                    const frontCoverPrompt = await (0,_utils__WEBPACK_IMPORTED_MODULE_4__.chatWithAI)(frontCoverPromptQuery, {\n                        model: \"gemini-2.5-pro\",\n                        attachments: images\n                    });\n                    if (!(frontCoverPrompt === null || frontCoverPrompt === void 0 ? void 0 : frontCoverPrompt.trim())) {\n                        throw new Error(\"Failed to generate front cover prompt\");\n                    }\n                    // Enhance with reference image instructions\n                    let enhancedFrontCoverPrompt = frontCoverPrompt.trim();\n                    enhancedFrontCoverPrompt = _lib_promptGenerator__WEBPACK_IMPORTED_MODULE_2__.PromptGenerator.enhancePromptWithReferencePhotos(enhancedFrontCoverPrompt, referenceImageUrls.length > 0, selectedDraftModel);\n                    // Generate the image\n                    const jobId = \"draft-\".concat(index, \"-\").concat((0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])());\n                    const inputImages = [];\n                    if (referenceImageUrls.length > 0 && selectedDraftModel === \"gpt-image-1\") {\n                        inputImages.push(...referenceImageUrls);\n                    }\n                    const response = await fetch(\"/api/generate-card-async\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"application/json\"\n                        },\n                        body: JSON.stringify({\n                            jobId,\n                            prompts: {\n                                frontCover: enhancedFrontCoverPrompt\n                            },\n                            config: {\n                                userNumber: \"+17145986105\",\n                                modelVersion: selectedDraftModel,\n                                aspectRatio: ((_paperSizes_find = _constants__WEBPACK_IMPORTED_MODULE_3__.paperSizes.find((size)=>size.id === selectedPaperSize)) === null || _paperSizes_find === void 0 ? void 0 : _paperSizes_find.aspectRatio) || \"9:16\",\n                                quality: \"low\",\n                                outputFormat: \"jpeg\",\n                                outputCompression: 100,\n                                moderation: \"low\",\n                                dimensions: ((_paperSizes_find1 = _constants__WEBPACK_IMPORTED_MODULE_3__.paperSizes.find((size)=>size.id === selectedPaperSize)) === null || _paperSizes_find1 === void 0 ? void 0 : _paperSizes_find1.dimensions) || \"1024x1536\",\n                                isFrontBackOnly: true,\n                                userEmail,\n                                cardType: cardTypeForPrompt,\n                                toField,\n                                fromField,\n                                isDraftMode: true,\n                                ...inputImages.length > 0 && {\n                                    input_images: inputImages,\n                                    input_images_mode: \"front_cover_only\"\n                                }\n                            }\n                        })\n                    });\n                    if (!response.ok) {\n                        throw new Error(\"Server error: \".concat(response.status));\n                    }\n                    const result = await response.json();\n                    if (result.status !== \"processing\") {\n                        throw new Error(result.message || \"Failed to start draft generation\");\n                    }\n                    console.log(\"✅ Draft variation \".concat(index + 1, \" job started:\"), jobId);\n                    // Don't save draft jobs to storage - only save final cards\n                    // saveJobToStorage(jobId, {\n                    //   isDraft: true,\n                    //   draftIndex: index,\n                    //   styleInfo: styleOverride ? { styleName: styleOverride, styleLabel: styleLabel } : undefined,\n                    //   frontCoverPrompt: enhancedFrontCoverPrompt\n                    // });\n                    // Subscribe to WebSocket updates\n                    subscribeToJob(jobId);\n                } catch (error) {\n                    console.error(\"❌ Draft variation \".concat(index + 1, \" failed:\"), error);\n                    sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Draft variation \".concat(index + 1, \" failed: \").concat(error instanceof Error ? error.message : \"Unknown error\"));\n                }\n            });\n            // Wait for all draft generations to start\n            await Promise.allSettled(draftPromises);\n            console.log(\"\\uD83D\\uDE80 All draft variations started\");\n        } catch (error) {\n            console.error(\"Draft card generation error:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Failed to start draft generation: \".concat(error instanceof Error ? error.message : \"Unknown error\"));\n            setIsGenerating(false);\n            setIsDraftMode(false);\n            setDraftCompletionShown(false);\n            setDraftCompletionCount(0);\n            setGenerationProgress(\"\");\n            props.stopElapsedTimeTracking();\n        }\n    }, [\n        props\n    ]);\n    // Generate final high-quality card from selected draft\n    const handleGenerateFinalFromDraft = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (displayIndex)=>{\n        // Prevent duplicate calls\n        if (isGeneratingFinalCard) {\n            console.log(\"⚠️ Final card generation already in progress, skipping duplicate call\");\n            return;\n        }\n        if (displayIndex < 0 || displayIndex >= draftCards.length || !draftCards[displayIndex]) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Invalid draft selection\");\n            return;\n        }\n        const { selectedType, customCardType, selectedTone, prompt, toField, fromField, finalCardMessage, isHandwrittenMessage, selectedArtisticStyle, customStyleDescription, isFrontBackOnly, selectedImageModel, selectedPaperSize, userEmail, referenceImageUrls, startElapsedTimeTracking, subscribeToJob } = props;\n        // Get the original draft index from the mapping\n        const originalDraftIndex = draftIndexMapping[displayIndex];\n        if (originalDraftIndex === undefined) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Could not find original draft data\");\n            return;\n        }\n        // Stop any existing timers first\n        props.stopElapsedTimeTracking();\n        setIsGeneratingFinalCard(true);\n        setSelectedDraftIndex(displayIndex);\n        startElapsedTimeTracking(undefined, 120);\n        setGenerationProgress(\"\\uD83C\\uDFA8 Creating high-quality version of your selected design...\");\n        try {\n            var _selectedDraft_generatedPrompts, _paperSizes_find, _paperSizes_find1;\n            const selectedDraft = draftCards[displayIndex];\n            const jobId = (0,uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n            // Generate the missing prompts\n            const storedFrontCoverPrompt = (_selectedDraft_generatedPrompts = selectedDraft.generatedPrompts) === null || _selectedDraft_generatedPrompts === void 0 ? void 0 : _selectedDraft_generatedPrompts.frontCover;\n            if (!storedFrontCoverPrompt) {\n                throw new Error(\"Selected draft is missing frontCover prompt\");\n            }\n            const cardTypeForPrompt = selectedType === \"custom\" ? customCardType : selectedType;\n            const selectedToneObj = _constants__WEBPACK_IMPORTED_MODULE_3__.cardTones.find((tone)=>tone.id === selectedTone);\n            const toneDescription = selectedToneObj ? selectedToneObj.description.toLowerCase() : \"heartfelt and sincere\";\n            const effectivePrompt = prompt.trim() || \"A beautiful \".concat(cardTypeForPrompt, \" card with \").concat(toneDescription, \" style\");\n            let messageContent = finalCardMessage;\n            if (isHandwrittenMessage) {\n                messageContent = \"[Blank space for handwritten message]\";\n            }\n            // Get style from the selected draft\n            const draftStyleInfo = selectedDraft.styleInfo;\n            let selectedStyle;\n            if (draftStyleInfo && draftStyleInfo.styleName) {\n                selectedStyle = _constants__WEBPACK_IMPORTED_MODULE_3__.artisticStyles.find((style)=>style.id === draftStyleInfo.styleName);\n            } else {\n                selectedStyle = _constants__WEBPACK_IMPORTED_MODULE_3__.artisticStyles.find((style)=>style.id === selectedArtisticStyle);\n            }\n            // Use PromptGenerator for final card from draft\n            const finalFromDraftConfig = {\n                frontCoverPrompt: storedFrontCoverPrompt,\n                cardType: selectedType,\n                customCardType: customCardType,\n                theme: effectivePrompt,\n                tone: selectedTone,\n                toneDescription: toneDescription,\n                toField: toField,\n                fromField: fromField,\n                message: messageContent,\n                isHandwrittenMessage: isHandwrittenMessage,\n                artisticStyle: selectedStyle,\n                isFrontBackOnly: isFrontBackOnly\n            };\n            const finalPrompts = await _lib_promptGenerator__WEBPACK_IMPORTED_MODULE_2__.PromptGenerator.generateFinalFromDraftPromptsCombined(finalFromDraftConfig);\n            if (!finalPrompts || !finalPrompts.frontCover || !finalPrompts.backCover) {\n                throw new Error(\"Failed to generate complete prompts for final card\");\n            }\n            // Prepare input images for final generation\n            const inputImages = [];\n            if (referenceImageUrls.length > 0 && selectedImageModel === \"gpt-image-1\") {\n                inputImages.push(...referenceImageUrls);\n            }\n            const response = await fetch(\"/api/generate-card-async\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    jobId,\n                    prompts: finalPrompts,\n                    config: {\n                        userNumber: \"+17145986105\",\n                        modelVersion: selectedImageModel,\n                        aspectRatio: ((_paperSizes_find = _constants__WEBPACK_IMPORTED_MODULE_3__.paperSizes.find((size)=>size.id === selectedPaperSize)) === null || _paperSizes_find === void 0 ? void 0 : _paperSizes_find.aspectRatio) || \"9:16\",\n                        quality: \"high\",\n                        outputFormat: \"jpeg\",\n                        outputCompression: 100,\n                        moderation: \"low\",\n                        dimensions: ((_paperSizes_find1 = _constants__WEBPACK_IMPORTED_MODULE_3__.paperSizes.find((size)=>size.id === selectedPaperSize)) === null || _paperSizes_find1 === void 0 ? void 0 : _paperSizes_find1.dimensions) || \"1024x1536\",\n                        isFrontBackOnly,\n                        userEmail,\n                        cardType: selectedType === \"custom\" ? customCardType : selectedType,\n                        toField,\n                        fromField,\n                        isDraftMode: false,\n                        ...inputImages.length > 0 && {\n                            input_images: inputImages,\n                            input_images_mode: \"front_cover_only\"\n                        }\n                    }\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Server error: \".concat(response.status));\n            }\n            const result = await response.json();\n            if (result.status !== \"processing\") {\n                throw new Error(result.message || \"Failed to start final card generation\");\n            }\n            setCurrentJobId(jobId);\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"\\uD83C\\uDFA8 Generating high-quality version of your selected design!\");\n            // Subscribe to WebSocket updates\n            subscribeToJob(jobId);\n        } catch (error) {\n            console.error(\"Final card generation error:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Failed to generate final card. Please try again.\");\n            setIsGeneratingFinalCard(false);\n            setGenerationProgress(\"\");\n            props.stopElapsedTimeTracking();\n        }\n    }, [\n        draftCards,\n        draftIndexMapping,\n        isGeneratingFinalCard,\n        props\n    ]);\n    return {\n        isDraftMode,\n        setIsDraftMode,\n        draftCards,\n        setDraftCards,\n        draftIndexMapping,\n        setDraftIndexMapping,\n        selectedDraftIndex,\n        setSelectedDraftIndex,\n        isGeneratingFinalCard,\n        setIsGeneratingFinalCard,\n        previewingDraftIndex,\n        setPreviewingDraftIndex,\n        draftCompletionShown,\n        setDraftCompletionShown,\n        draftCompletionCount,\n        setDraftCompletionCount,\n        handleGenerateDraftCards,\n        handleGenerateFinalFromDraft,\n        isGenerating,\n        setIsGenerating,\n        generationProgress,\n        setGenerationProgress,\n        progressPercentage,\n        setProgressPercentage,\n        generatedCard,\n        setGeneratedCard,\n        generatedCards,\n        setGeneratedCards,\n        isCardCompleted,\n        setIsCardCompleted,\n        currentJobId,\n        setCurrentJobId\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL2NhcmRTdHVkaW8vdXNlRHJhZnRHZW5lcmF0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O3dFQUU4QztBQUNmO0FBQ0s7QUFDdUQ7QUFDTztBQUM3RDtBQThCOUIsU0FBU1UsbUJBQW1CQyxLQUEyQjtJQUM1RCxtQkFBbUI7SUFDbkIsTUFBTSxDQUFDQyxhQUFhQyxlQUFlLEdBQUdiLCtDQUFRQSxDQUFVO0lBQ3hELE1BQU0sQ0FBQ2MsWUFBWUMsY0FBYyxHQUFHZiwrQ0FBUUEsQ0FBa0IsRUFBRTtJQUNoRSxNQUFNLENBQUNnQixtQkFBbUJDLHFCQUFxQixHQUFHakIsK0NBQVFBLENBQVcsRUFBRTtJQUN2RSxNQUFNLENBQUNrQixvQkFBb0JDLHNCQUFzQixHQUFHbkIsK0NBQVFBLENBQVMsQ0FBQztJQUN0RSxNQUFNLENBQUNvQix1QkFBdUJDLHlCQUF5QixHQUFHckIsK0NBQVFBLENBQVU7SUFDNUUsTUFBTSxDQUFDc0Isc0JBQXNCQyx3QkFBd0IsR0FBR3ZCLCtDQUFRQSxDQUFTLENBQUM7SUFDMUUsTUFBTSxDQUFDd0Isc0JBQXNCQyx3QkFBd0IsR0FBR3pCLCtDQUFRQSxDQUFVO0lBQzFFLE1BQU0sQ0FBQzBCLHNCQUFzQkMsd0JBQXdCLEdBQUczQiwrQ0FBUUEsQ0FBUztJQUN6RSxNQUFNLENBQUM0QixjQUFjQyxnQkFBZ0IsR0FBRzdCLCtDQUFRQSxDQUFDO0lBQ2pELE1BQU0sQ0FBQzhCLG9CQUFvQkMsc0JBQXNCLEdBQUcvQiwrQ0FBUUEsQ0FBQztJQUM3RCxNQUFNLENBQUNnQyxvQkFBb0JDLHNCQUFzQixHQUFHakMsK0NBQVFBLENBQUM7SUFDN0QsTUFBTSxDQUFDa0MsZUFBZUMsaUJBQWlCLEdBQUduQywrQ0FBUUEsQ0FBdUI7SUFDekUsTUFBTSxDQUFDb0MsZ0JBQWdCQyxrQkFBa0IsR0FBR3JDLCtDQUFRQSxDQUFrQixFQUFFO0lBQ3hFLE1BQU0sQ0FBQ3NDLGlCQUFpQkMsbUJBQW1C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SUFBSTVCLE1BQU0saUJBQWlDLE9BQWhCTSxTQUFTdUIsTUFBTTtZQUNsRDtZQUVBLE1BQU1DLFNBQVMsTUFBTXhCLFNBQVN5QixJQUFJO1lBRWxDLElBQUlELE9BQU9ELE1BQU0sS0FBSyxjQUFjO2dCQUNsQyxNQUFNLElBQUk3QixNQUFNOEIsT0FBT0UsT0FBTyxJQUFJO1lBQ3BDO1lBRUE3RixnQkFBZ0JnRTtZQUNoQnZHLHlDQUFLQSxDQUFDd0osT0FBTyxDQUFDO1lBRWQsaUNBQWlDO1lBQ2pDbEcsZUFBZWlEO1FBRWpCLEVBQUUsT0FBTzlDLE9BQU87WUFDZE0sUUFBUU4sS0FBSyxDQUFDLGdDQUFnQ0E7WUFDOUN6RCx5Q0FBS0EsQ0FBQ3lELEtBQUssQ0FBQztZQUNadEMseUJBQXlCO1lBQ3pCVSxzQkFBc0I7WUFDdEJwQixNQUFNb0QsdUJBQXVCO1FBQy9CO0lBQ0YsR0FBRztRQUFDakQ7UUFBWUU7UUFBbUJJO1FBQXVCVDtLQUFNO0lBRWhFLE9BQU87UUFDTEM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQUM7UUFDQWU7UUFDQStGO1FBQ0E3RztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztRQUNBQztJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaG9va3MvY2FyZFN0dWRpby91c2VEcmFmdEdlbmVyYXRpb24udHM/NGM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB0b2FzdCB9IGZyb20gXCJzb25uZXJcIjtcbmltcG9ydCB7IHY0IGFzIHV1aWR2NCB9IGZyb20gJ3V1aWQnO1xuaW1wb3J0IHsgUHJvbXB0R2VuZXJhdG9yLCBEcmFmdENvbmZpZywgRmluYWxGcm9tRHJhZnRDb25maWcgfSBmcm9tICdAL2xpYi9wcm9tcHRHZW5lcmF0b3InO1xuaW1wb3J0IHsgR2VuZXJhdGVkQ2FyZCwgYXJ0aXN0aWNTdHlsZXMsIHBhcGVyU2l6ZXMsIGNhcmRUb25lcywgUGhvdG9BbmFseXNpcyB9IGZyb20gJy4vY29uc3RhbnRzJztcbmltcG9ydCB7IGNoYXRXaXRoQUkgfSBmcm9tICcuL3V0aWxzJztcblxuaW50ZXJmYWNlIERyYWZ0R2VuZXJhdGlvblByb3BzIHtcbiAgLy8gRm9ybSBkYXRhXG4gIHNlbGVjdGVkVHlwZTogc3RyaW5nO1xuICBjdXN0b21DYXJkVHlwZTogc3RyaW5nO1xuICBzZWxlY3RlZFRvbmU6IHN0cmluZztcbiAgc2VsZWN0ZWRBcnRpc3RpY1N0eWxlOiBzdHJpbmc7XG4gIGN1c3RvbVN0eWxlRGVzY3JpcHRpb246IHN0cmluZztcbiAgc2VsZWN0ZWREcmFmdE1vZGVsOiBzdHJpbmc7XG4gIHNlbGVjdGVkSW1hZ2VNb2RlbDogc3RyaW5nO1xuICBzZWxlY3RlZFBhcGVyU2l6ZTogc3RyaW5nO1xuICBwcm9tcHQ6IHN0cmluZztcbiAgdG9GaWVsZDogc3RyaW5nO1xuICBmcm9tRmllbGQ6IHN0cmluZztcbiAgdXNlckVtYWlsOiBzdHJpbmc7XG4gIGZpbmFsQ2FyZE1lc3NhZ2U6IHN0cmluZztcbiAgaXNIYW5kd3JpdHRlbk1lc3NhZ2U6IGJvb2xlYW47XG4gIGlzRnJvbnRCYWNrT25seTogYm9vbGVhbjtcbiAgcmVmZXJlbmNlSW1hZ2VVcmxzOiBzdHJpbmdbXTtcbiAgcGhvdG9BbmFseXNlcz86IFBob3RvQW5hbHlzaXNbXTtcbiAgXG4gIC8vIEpvYiBtYW5hZ2VtZW50XG4gIHNhdmVKb2JUb1N0b3JhZ2U6IChqb2JJZDogc3RyaW5nLCBqb2JEYXRhOiBhbnkpID0+IHZvaWQ7XG4gIHN1YnNjcmliZVRvSm9iOiAoam9iSWQ6IHN0cmluZykgPT4gdm9pZDtcbiAgdW5zdWJzY3JpYmVGcm9tQWxsSm9icz86ICgpID0+IHZvaWQ7XG4gIHN0YXJ0RWxhcHNlZFRpbWVUcmFja2luZzogKHN0YXJ0VGltZT86IG51bWJlciwgZXN0aW1hdGVkVG90YWxTZWNvbmRzPzogbnVtYmVyKSA9PiB2b2lkO1xuICBzdG9wRWxhcHNlZFRpbWVUcmFja2luZzogKCkgPT4gdm9pZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVzZURyYWZ0R2VuZXJhdGlvbihwcm9wczogRHJhZnRHZW5lcmF0aW9uUHJvcHMpIHtcbiAgLy8gRHJhZnQgbW9kZSBzdGF0ZVxuICBjb25zdCBbaXNEcmFmdE1vZGUsIHNldElzRHJhZnRNb2RlXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcbiAgY29uc3QgW2RyYWZ0Q2FyZHMsIHNldERyYWZ0Q2FyZHNdID0gdXNlU3RhdGU8R2VuZXJhdGVkQ2FyZFtdPihbXSk7XG4gIGNvbnN0IFtkcmFmdEluZGV4TWFwcGluZywgc2V0RHJhZnRJbmRleE1hcHBpbmddID0gdXNlU3RhdGU8bnVtYmVyW10+KFtdKTtcbiAgY29uc3QgW3NlbGVjdGVkRHJhZnRJbmRleCwgc2V0U2VsZWN0ZWREcmFmdEluZGV4XSA9IHVzZVN0YXRlPG51bWJlcj4oLTEpO1xuICBjb25zdCBbaXNHZW5lcmF0aW5nRmluYWxDYXJkLCBzZXRJc0dlbmVyYXRpbmdGaW5hbENhcmRdID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xuICBjb25zdCBbcHJldmlld2luZ0RyYWZ0SW5kZXgsIHNldFByZXZpZXdpbmdEcmFmdEluZGV4XSA9IHVzZVN0YXRlPG51bWJlcj4oLTEpO1xuICBjb25zdCBbZHJhZnRDb21wbGV0aW9uU2hvd24sIHNldERyYWZ0Q29tcGxldGlvblNob3duXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcbiAgY29uc3QgW2RyYWZ0Q29tcGxldGlvbkNvdW50LCBzZXREcmFmdENvbXBsZXRpb25Db3VudF0gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xuICBjb25zdCBbaXNHZW5lcmF0aW5nLCBzZXRJc0dlbmVyYXRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZ2VuZXJhdGlvblByb2dyZXNzLCBzZXRHZW5lcmF0aW9uUHJvZ3Jlc3NdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IFtwcm9ncmVzc1BlcmNlbnRhZ2UsIHNldFByb2dyZXNzUGVyY2VudGFnZV0gPSB1c2VTdGF0ZSgwKTtcbiAgY29uc3QgW2dlbmVyYXRlZENhcmQsIHNldEdlbmVyYXRlZENhcmRdID0gdXNlU3RhdGU8R2VuZXJhdGVkQ2FyZCB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbZ2VuZXJhdGVkQ2FyZHMsIHNldEdlbmVyYXRlZENhcmRzXSA9IHVzZVN0YXRlPEdlbmVyYXRlZENhcmRbXT4oW10pO1xuICBjb25zdCBbaXNDYXJkQ29tcGxldGVkLCBzZXRJc0NhcmRDb21wbGV0ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbY3VycmVudEpvYklkLCBzZXRDdXJyZW50Sm9iSWRdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG5cbiAgLy8gRHJhZnQgbW9kZSBnZW5lcmF0aW9uIC0gY3JlYXRlcyA1IGZyb250IGNvdmVyIHZhcmlhdGlvbnNcbiAgY29uc3QgaGFuZGxlR2VuZXJhdGVEcmFmdENhcmRzID0gdXNlQ2FsbGJhY2soYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgIHVzZXJFbWFpbCxcbiAgICAgIHNlbGVjdGVkQXJ0aXN0aWNTdHlsZSxcbiAgICAgIGN1c3RvbVN0eWxlRGVzY3JpcHRpb24sXG4gICAgICByZWZlcmVuY2VJbWFnZVVybHMsXG4gICAgICBzZWxlY3RlZERyYWZ0TW9kZWwsXG4gICAgICBzZWxlY3RlZFR5cGUsXG4gICAgICBjdXN0b21DYXJkVHlwZSxcbiAgICAgIHNlbGVjdGVkVG9uZSxcbiAgICAgIHByb21wdCxcbiAgICAgIHRvRmllbGQsXG4gICAgICBmcm9tRmllbGQsXG4gICAgICBzZWxlY3RlZFBhcGVyU2l6ZSxcbiAgICAgIHNhdmVKb2JUb1N0b3JhZ2UsXG4gICAgICBzdWJzY3JpYmVUb0pvYixcbiAgICAgIHN0YXJ0RWxhcHNlZFRpbWVUcmFja2luZ1xuICAgIH0gPSBwcm9wcztcblxuICAgIGlmICghdXNlckVtYWlsLnRyaW0oKSkge1xuICAgICAgdG9hc3QuZXJyb3IoXCJQbGVhc2UgZW50ZXIgeW91ciBlbWFpbCBhZGRyZXNzXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIEJhc2ljIGVtYWlsIHZhbGlkYXRpb25cbiAgICBjb25zdCBlbWFpbFJlZ2V4ID0gL15bXlxcc0BdK0BbXlxcc0BdK1xcLlteXFxzQF0rJC87XG4gICAgaWYgKCFlbWFpbFJlZ2V4LnRlc3QodXNlckVtYWlsKSkge1xuICAgICAgdG9hc3QuZXJyb3IoXCJQbGVhc2UgZW50ZXIgYSB2YWxpZCBlbWFpbCBhZGRyZXNzXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIC8vIFZhbGlkYXRlIGN1c3RvbSBzdHlsZSBpZiBzZWxlY3RlZFxuICAgIGlmIChzZWxlY3RlZEFydGlzdGljU3R5bGUgPT09IFwiY3VzdG9tXCIgJiYgIWN1c3RvbVN0eWxlRGVzY3JpcHRpb24udHJpbSgpKSB7XG4gICAgICB0b2FzdC5lcnJvcihcIlBsZWFzZSBkZXNjcmliZSB5b3VyIGN1c3RvbSBhcnRpc3RpYyBzdHlsZVwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBWYWxpZGF0ZSByZWZlcmVuY2UgaW1hZ2VzIHdpdGggbW9kZWwgY29tcGF0aWJpbGl0eVxuICAgIGlmIChyZWZlcmVuY2VJbWFnZVVybHMubGVuZ3RoID4gMCAmJiBzZWxlY3RlZERyYWZ0TW9kZWwgIT09IFwiZ3B0LWltYWdlLTFcIikge1xuICAgICAgdG9hc3QuZXJyb3IoXCJSZWZlcmVuY2UgcGhvdG9zIGFyZSBvbmx5IHN1cHBvcnRlZCB3aXRoIEdQVCBJbWFnZSAxIG1vZGVsLiBQbGVhc2Ugc3dpdGNoIHRvIEdQVCBJbWFnZSAxIGZvciBkcmFmdCBtb2RlIG9yIHJlbW92ZSByZWZlcmVuY2UgcGhvdG9zLlwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBTdG9wIGFueSBleGlzdGluZyB0aW1lcnMgZmlyc3RcbiAgICBwcm9wcy5zdG9wRWxhcHNlZFRpbWVUcmFja2luZygpO1xuICAgIFxuICAgIHNldElzRHJhZnRNb2RlKHRydWUpO1xuICAgIHNldElzR2VuZXJhdGluZyh0cnVlKTtcbiAgICBzdGFydEVsYXBzZWRUaW1lVHJhY2tpbmcodW5kZWZpbmVkLCA0NSk7IC8vIDQ1IHNlY29uZHMgZm9yIGRyYWZ0IG1vZGVcbiAgICBzZXRHZW5lcmF0aW9uUHJvZ3Jlc3MoXCLwn46oIENyZWF0aW5nIDUgZnJvbnQgY292ZXIgdmFyaWF0aW9ucyBmb3IgeW91IHRvIGNob29zZSBmcm9tLi4uXCIpO1xuICAgIHNldFByb2dyZXNzUGVyY2VudGFnZSgwKTtcbiAgICBzZXREcmFmdENhcmRzKFtdKTtcbiAgICBzZXREcmFmdEluZGV4TWFwcGluZyhbXSk7XG4gICAgc2V0U2VsZWN0ZWREcmFmdEluZGV4KC0xKTtcbiAgICBzZXREcmFmdENvbXBsZXRpb25TaG93bihmYWxzZSk7XG4gICAgc2V0RHJhZnRDb21wbGV0aW9uQ291bnQoMCk7XG4gICAgXG4gICAgLy8gQ2xlYXIgYW55IHByZXZpb3VzIGNhcmQgc3RhdGVcbiAgICBzZXRHZW5lcmF0ZWRDYXJkKG51bGwpO1xuICAgIHNldEdlbmVyYXRlZENhcmRzKFtdKTtcbiAgICBzZXRJc0NhcmRDb21wbGV0ZWQoZmFsc2UpO1xuXG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKFwi8J+agCBTdGFydGluZyBkcmFmdCBtb2RlIGdlbmVyYXRpb24gd2l0aCA1IHZhcmlhdGlvbnNcIik7XG4gICAgICBjb25zb2xlLmxvZyhcIvCfk7ggUHJvcHMgcmVmZXJlbmNlSW1hZ2VVcmxzOlwiLCBwcm9wcy5yZWZlcmVuY2VJbWFnZVVybHMpO1xuICAgICAgY29uc29sZS5sb2coXCLwn5O4IExvY2FsIHJlZmVyZW5jZUltYWdlVXJsczpcIiwgcmVmZXJlbmNlSW1hZ2VVcmxzKTtcbiAgICAgIFxuICAgICAgY29uc3QgY2FyZFR5cGVGb3JQcm9tcHQgPSBzZWxlY3RlZFR5cGUgPT09IFwiY3VzdG9tXCIgPyBjdXN0b21DYXJkVHlwZSA6IHNlbGVjdGVkVHlwZTtcbiAgICAgIGNvbnN0IHNlbGVjdGVkVG9uZU9iaiA9IGNhcmRUb25lcy5maW5kKHRvbmUgPT4gdG9uZS5pZCA9PT0gc2VsZWN0ZWRUb25lKTtcbiAgICAgIGNvbnN0IHRvbmVEZXNjcmlwdGlvbiA9IHNlbGVjdGVkVG9uZU9iaiA/IHNlbGVjdGVkVG9uZU9iai5kZXNjcmlwdGlvbi50b0xvd2VyQ2FzZSgpIDogXCJoZWFydGZlbHQgYW5kIHNpbmNlcmVcIjtcbiAgICAgIGNvbnN0IGVmZmVjdGl2ZVByb21wdCA9IHByb21wdC50cmltKCkgfHwgYEEgYmVhdXRpZnVsICR7Y2FyZFR5cGVGb3JQcm9tcHR9IGNhcmQgd2l0aCAke3RvbmVEZXNjcmlwdGlvbn0gc3R5bGVgO1xuXG4gICAgICAvLyBHZW5lcmF0ZSA1IGRyYWZ0IHZhcmlhdGlvbnNcbiAgICAgIGNvbnN0IGRyYWZ0UHJvbWlzZXMgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiA1IH0sIGFzeW5jIChfLCBpbmRleCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGDwn46oIFN0YXJ0aW5nIGRyYWZ0IHZhcmlhdGlvbiAke2luZGV4ICsgMX1gKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBGb3Igc21hcnQgc3R5bGUsIHVzZSBwcmVkZWZpbmVkIHN0eWxlc1xuICAgICAgICAgIGxldCBzdHlsZU92ZXJyaWRlOiBzdHJpbmcgfCB1bmRlZmluZWQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbGV0IHN0eWxlTGFiZWw6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICBpZiAoc2VsZWN0ZWRBcnRpc3RpY1N0eWxlID09PSBcImFpLXNtYXJ0LXN0eWxlXCIpIHtcbiAgICAgICAgICAgIGNvbnN0IHByZWRlZmluZWRTdHlsZXMgPSBbXCJ3YXRlcmNvbG9yXCIsIFwiYm90YW5pY2FsXCIsIFwiY29taWMtYm9va1wiLCBcImRyZWFteS1mYW50YXN5XCIsIFwibWluaW1hbGlzdFwiXTtcbiAgICAgICAgICAgIGNvbnN0IHN0eWxlTGFiZWxzID0gW1wi8J+OqCBXYXRlcmNvbG9yXCIsIFwi8J+MvyBCb3RhbmljYWxcIiwgXCLwn5KlIENvbWljIEJvb2tcIiwgXCLwn4y4IERyZWFteSBGYW50YXN5XCIsIFwi4pyoIE1pbmltYWxpc3RcIl07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHN0eWxlT3ZlcnJpZGUgPSBwcmVkZWZpbmVkU3R5bGVzW2luZGV4XTtcbiAgICAgICAgICAgIHN0eWxlTGFiZWwgPSBzdHlsZUxhYmVsc1tpbmRleF07XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIEdlbmVyYXRlIGZyb250IGNvdmVyIHByb21wdFxuICAgICAgICAgIGNvbnN0IHNlbGVjdGVkU3R5bGUgPSBhcnRpc3RpY1N0eWxlcy5maW5kKHN0eWxlID0+IHN0eWxlLmlkID09PSAoc3R5bGVPdmVycmlkZSB8fCBzZWxlY3RlZEFydGlzdGljU3R5bGUpKTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCBkcmFmdENvbmZpZzogRHJhZnRDb25maWcgPSB7XG4gICAgICAgICAgICBjYXJkVHlwZTogc2VsZWN0ZWRUeXBlLFxuICAgICAgICAgICAgY3VzdG9tQ2FyZFR5cGU6IGN1c3RvbUNhcmRUeXBlLFxuICAgICAgICAgICAgdG9uZTogc2VsZWN0ZWRUb25lLFxuICAgICAgICAgICAgdG9uZUxhYmVsOiBzZWxlY3RlZFRvbmVPYmogPyBzZWxlY3RlZFRvbmVPYmoubGFiZWwgOiBcIkhlYXJ0ZmVsdFwiLFxuICAgICAgICAgICAgdG9uZURlc2NyaXB0aW9uOiB0b25lRGVzY3JpcHRpb24sXG4gICAgICAgICAgICB0aGVtZTogZWZmZWN0aXZlUHJvbXB0LFxuICAgICAgICAgICAgdG9GaWVsZDogdG9GaWVsZCxcbiAgICAgICAgICAgIGZyb21GaWVsZDogZnJvbUZpZWxkLFxuICAgICAgICAgICAgYXJ0aXN0aWNTdHlsZTogc2VsZWN0ZWRTdHlsZSxcbiAgICAgICAgICAgIHJlZmVyZW5jZUltYWdlVXJsczogcmVmZXJlbmNlSW1hZ2VVcmxzLFxuICAgICAgICAgICAgcGhvdG9BbmFseXNlczogcHJvcHMucGhvdG9BbmFseXNlcyxcbiAgICAgICAgICAgIGlzRHJhZnRWYXJpYXRpb246IHNlbGVjdGVkQXJ0aXN0aWNTdHlsZSA9PT0gXCJzbWFydFwiLFxuICAgICAgICAgICAgdmFyaWF0aW9uSW5kZXg6IGluZGV4XG4gICAgICAgICAgfTtcblxuICAgICAgICAgIGNvbnN0IHsgcHJvbXB0OiBmcm9udENvdmVyUHJvbXB0UXVlcnksIGltYWdlcyB9ID0gUHJvbXB0R2VuZXJhdG9yLmdlbmVyYXRlRHJhZnRQcm9tcHRXaXRoSW1hZ2VzKGRyYWZ0Q29uZmlnKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBEZWJ1ZyBsb2dnaW5nIGZvciBpbWFnZSBVUkxzXG4gICAgICAgICAgY29uc29sZS5sb2coYPCflrzvuI8gRHJhZnQgJHtpbmRleCArIDF9IC0gZHJhZnRDb25maWcucmVmZXJlbmNlSW1hZ2VVcmxzOmAsIGRyYWZ0Q29uZmlnLnJlZmVyZW5jZUltYWdlVXJscyk7XG4gICAgICAgICAgY29uc29sZS5sb2coYPCflrzvuI8gRHJhZnQgJHtpbmRleCArIDF9IC0gaW1hZ2VzIGZyb20gZ2VuZXJhdG9yOmAsIGltYWdlcyk7XG4gICAgICAgICAgY29uc29sZS5sb2coYPCflrzvuI8gRHJhZnQgJHtpbmRleCArIDF9IC0gaW1hZ2VzIGxlbmd0aDpgLCBpbWFnZXM/Lmxlbmd0aCB8fCAwKTtcbiAgICAgICAgICBcbiAgICAgICAgICBjb25zdCBmcm9udENvdmVyUHJvbXB0ID0gYXdhaXQgY2hhdFdpdGhBSShmcm9udENvdmVyUHJvbXB0UXVlcnksIHtcbiAgICAgICAgICAgIG1vZGVsOiBcImdlbWluaS0yLjUtcHJvXCIsXG4gICAgICAgICAgICBhdHRhY2htZW50czogaW1hZ2VzXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiAoIWZyb250Q292ZXJQcm9tcHQ/LnRyaW0oKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGdlbmVyYXRlIGZyb250IGNvdmVyIHByb21wdFwiKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBFbmhhbmNlIHdpdGggcmVmZXJlbmNlIGltYWdlIGluc3RydWN0aW9uc1xuICAgICAgICAgIGxldCBlbmhhbmNlZEZyb250Q292ZXJQcm9tcHQgPSBmcm9udENvdmVyUHJvbXB0LnRyaW0oKTtcbiAgICAgICAgICBlbmhhbmNlZEZyb250Q292ZXJQcm9tcHQgPSBQcm9tcHRHZW5lcmF0b3IuZW5oYW5jZVByb21wdFdpdGhSZWZlcmVuY2VQaG90b3MoXG4gICAgICAgICAgICBlbmhhbmNlZEZyb250Q292ZXJQcm9tcHQsXG4gICAgICAgICAgICByZWZlcmVuY2VJbWFnZVVybHMubGVuZ3RoID4gMCxcbiAgICAgICAgICAgIHNlbGVjdGVkRHJhZnRNb2RlbFxuICAgICAgICAgICk7XG5cbiAgICAgICAgICAvLyBHZW5lcmF0ZSB0aGUgaW1hZ2VcbiAgICAgICAgICBjb25zdCBqb2JJZCA9IGBkcmFmdC0ke2luZGV4fS0ke3V1aWR2NCgpfWA7XG4gICAgICAgICAgY29uc3QgaW5wdXRJbWFnZXM6IHN0cmluZ1tdID0gW107XG4gICAgICAgICAgaWYgKHJlZmVyZW5jZUltYWdlVXJscy5sZW5ndGggPiAwICYmIHNlbGVjdGVkRHJhZnRNb2RlbCA9PT0gXCJncHQtaW1hZ2UtMVwiKSB7XG4gICAgICAgICAgICBpbnB1dEltYWdlcy5wdXNoKC4uLnJlZmVyZW5jZUltYWdlVXJscyk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL2FwaS9nZW5lcmF0ZS1jYXJkLWFzeW5jJywge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgam9iSWQsXG4gICAgICAgICAgICAgIHByb21wdHM6IHsgZnJvbnRDb3ZlcjogZW5oYW5jZWRGcm9udENvdmVyUHJvbXB0IH0sXG4gICAgICAgICAgICAgIGNvbmZpZzoge1xuICAgICAgICAgICAgICAgIHVzZXJOdW1iZXI6IFwiKzE3MTQ1OTg2MTA1XCIsXG4gICAgICAgICAgICAgICAgbW9kZWxWZXJzaW9uOiBzZWxlY3RlZERyYWZ0TW9kZWwsXG4gICAgICAgICAgICAgICAgYXNwZWN0UmF0aW86IHBhcGVyU2l6ZXMuZmluZChzaXplID0+IHNpemUuaWQgPT09IHNlbGVjdGVkUGFwZXJTaXplKT8uYXNwZWN0UmF0aW8gfHwgXCI5OjE2XCIsXG4gICAgICAgICAgICAgICAgcXVhbGl0eTogXCJsb3dcIixcbiAgICAgICAgICAgICAgICBvdXRwdXRGb3JtYXQ6IFwianBlZ1wiLFxuICAgICAgICAgICAgICAgIG91dHB1dENvbXByZXNzaW9uOiAxMDAsXG4gICAgICAgICAgICAgICAgbW9kZXJhdGlvbjogXCJsb3dcIixcbiAgICAgICAgICAgICAgICBkaW1lbnNpb25zOiBwYXBlclNpemVzLmZpbmQoc2l6ZSA9PiBzaXplLmlkID09PSBzZWxlY3RlZFBhcGVyU2l6ZSk/LmRpbWVuc2lvbnMgfHwgXCIxMDI0eDE1MzZcIixcbiAgICAgICAgICAgICAgICBpc0Zyb250QmFja09ubHk6IHRydWUsXG4gICAgICAgICAgICAgICAgdXNlckVtYWlsLFxuICAgICAgICAgICAgICAgIGNhcmRUeXBlOiBjYXJkVHlwZUZvclByb21wdCxcbiAgICAgICAgICAgICAgICB0b0ZpZWxkLFxuICAgICAgICAgICAgICAgIGZyb21GaWVsZCxcbiAgICAgICAgICAgICAgICBpc0RyYWZ0TW9kZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAuLi4oaW5wdXRJbWFnZXMubGVuZ3RoID4gMCAmJiB7IFxuICAgICAgICAgICAgICAgICAgaW5wdXRfaW1hZ2VzOiBpbnB1dEltYWdlcyxcbiAgICAgICAgICAgICAgICAgIGlucHV0X2ltYWdlc19tb2RlOiBcImZyb250X2NvdmVyX29ubHlcIlxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfSk7XG5cbiAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFNlcnZlciBlcnJvcjogJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChyZXN1bHQuc3RhdHVzICE9PSAncHJvY2Vzc2luZycpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihyZXN1bHQubWVzc2FnZSB8fCAnRmFpbGVkIHRvIHN0YXJ0IGRyYWZ0IGdlbmVyYXRpb24nKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zb2xlLmxvZyhg4pyFIERyYWZ0IHZhcmlhdGlvbiAke2luZGV4ICsgMX0gam9iIHN0YXJ0ZWQ6YCwgam9iSWQpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIERvbid0IHNhdmUgZHJhZnQgam9icyB0byBzdG9yYWdlIC0gb25seSBzYXZlIGZpbmFsIGNhcmRzXG4gICAgICAgICAgLy8gc2F2ZUpvYlRvU3RvcmFnZShqb2JJZCwge1xuICAgICAgICAgIC8vICAgaXNEcmFmdDogdHJ1ZSxcbiAgICAgICAgICAvLyAgIGRyYWZ0SW5kZXg6IGluZGV4LFxuICAgICAgICAgIC8vICAgc3R5bGVJbmZvOiBzdHlsZU92ZXJyaWRlID8geyBzdHlsZU5hbWU6IHN0eWxlT3ZlcnJpZGUsIHN0eWxlTGFiZWw6IHN0eWxlTGFiZWwgfSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAvLyAgIGZyb250Q292ZXJQcm9tcHQ6IGVuaGFuY2VkRnJvbnRDb3ZlclByb21wdFxuICAgICAgICAgIC8vIH0pO1xuXG4gICAgICAgICAgLy8gU3Vic2NyaWJlIHRvIFdlYlNvY2tldCB1cGRhdGVzXG4gICAgICAgICAgc3Vic2NyaWJlVG9Kb2Ioam9iSWQpO1xuXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihg4p2MIERyYWZ0IHZhcmlhdGlvbiAke2luZGV4ICsgMX0gZmFpbGVkOmAsIGVycm9yKTtcbiAgICAgICAgICB0b2FzdC5lcnJvcihgRHJhZnQgdmFyaWF0aW9uICR7aW5kZXggKyAxfSBmYWlsZWQ6ICR7ZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcid9YCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuXG4gICAgICAvLyBXYWl0IGZvciBhbGwgZHJhZnQgZ2VuZXJhdGlvbnMgdG8gc3RhcnRcbiAgICAgIGF3YWl0IFByb21pc2UuYWxsU2V0dGxlZChkcmFmdFByb21pc2VzKTtcbiAgICAgIGNvbnNvbGUubG9nKFwi8J+agCBBbGwgZHJhZnQgdmFyaWF0aW9ucyBzdGFydGVkXCIpO1xuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0RyYWZ0IGNhcmQgZ2VuZXJhdGlvbiBlcnJvcjonLCBlcnJvcik7XG4gICAgICB0b2FzdC5lcnJvcihgRmFpbGVkIHRvIHN0YXJ0IGRyYWZ0IGdlbmVyYXRpb246ICR7ZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnVW5rbm93biBlcnJvcid9YCk7XG4gICAgICBcbiAgICAgIHNldElzR2VuZXJhdGluZyhmYWxzZSk7XG4gICAgICBzZXRJc0RyYWZ0TW9kZShmYWxzZSk7XG4gICAgICBzZXREcmFmdENvbXBsZXRpb25TaG93bihmYWxzZSk7XG4gICAgICBzZXREcmFmdENvbXBsZXRpb25Db3VudCgwKTtcbiAgICAgIHNldEdlbmVyYXRpb25Qcm9ncmVzcyhcIlwiKTtcbiAgICAgIHByb3BzLnN0b3BFbGFwc2VkVGltZVRyYWNraW5nKCk7XG4gICAgfVxuICB9LCBbcHJvcHNdKTtcblxuICAvLyBHZW5lcmF0ZSBmaW5hbCBoaWdoLXF1YWxpdHkgY2FyZCBmcm9tIHNlbGVjdGVkIGRyYWZ0XG4gIGNvbnN0IGhhbmRsZUdlbmVyYXRlRmluYWxGcm9tRHJhZnQgPSB1c2VDYWxsYmFjayhhc3luYyAoZGlzcGxheUluZGV4OiBudW1iZXIpID0+IHtcbiAgICAvLyBQcmV2ZW50IGR1cGxpY2F0ZSBjYWxsc1xuICAgIGlmIChpc0dlbmVyYXRpbmdGaW5hbENhcmQpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfimqDvuI8gRmluYWwgY2FyZCBnZW5lcmF0aW9uIGFscmVhZHkgaW4gcHJvZ3Jlc3MsIHNraXBwaW5nIGR1cGxpY2F0ZSBjYWxsJyk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGlmIChkaXNwbGF5SW5kZXggPCAwIHx8IGRpc3BsYXlJbmRleCA+PSBkcmFmdENhcmRzLmxlbmd0aCB8fCAhZHJhZnRDYXJkc1tkaXNwbGF5SW5kZXhdKSB7XG4gICAgICB0b2FzdC5lcnJvcihcIkludmFsaWQgZHJhZnQgc2VsZWN0aW9uXCIpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IHtcbiAgICAgIHNlbGVjdGVkVHlwZSxcbiAgICAgIGN1c3RvbUNhcmRUeXBlLFxuICAgICAgc2VsZWN0ZWRUb25lLFxuICAgICAgcHJvbXB0LFxuICAgICAgdG9GaWVsZCxcbiAgICAgIGZyb21GaWVsZCxcbiAgICAgIGZpbmFsQ2FyZE1lc3NhZ2UsXG4gICAgICBpc0hhbmR3cml0dGVuTWVzc2FnZSxcbiAgICAgIHNlbGVjdGVkQXJ0aXN0aWNTdHlsZSxcbiAgICAgIGN1c3RvbVN0eWxlRGVzY3JpcHRpb24sXG4gICAgICBpc0Zyb250QmFja09ubHksXG4gICAgICBzZWxlY3RlZEltYWdlTW9kZWwsXG4gICAgICBzZWxlY3RlZFBhcGVyU2l6ZSxcbiAgICAgIHVzZXJFbWFpbCxcbiAgICAgIHJlZmVyZW5jZUltYWdlVXJscyxcbiAgICAgIHN0YXJ0RWxhcHNlZFRpbWVUcmFja2luZyxcbiAgICAgIHN1YnNjcmliZVRvSm9iXG4gICAgfSA9IHByb3BzO1xuXG4gICAgLy8gR2V0IHRoZSBvcmlnaW5hbCBkcmFmdCBpbmRleCBmcm9tIHRoZSBtYXBwaW5nXG4gICAgY29uc3Qgb3JpZ2luYWxEcmFmdEluZGV4ID0gZHJhZnRJbmRleE1hcHBpbmdbZGlzcGxheUluZGV4XTtcbiAgICBpZiAob3JpZ2luYWxEcmFmdEluZGV4ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRvYXN0LmVycm9yKFwiQ291bGQgbm90IGZpbmQgb3JpZ2luYWwgZHJhZnQgZGF0YVwiKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBTdG9wIGFueSBleGlzdGluZyB0aW1lcnMgZmlyc3RcbiAgICBwcm9wcy5zdG9wRWxhcHNlZFRpbWVUcmFja2luZygpO1xuICAgIFxuICAgIHNldElzR2VuZXJhdGluZ0ZpbmFsQ2FyZCh0cnVlKTtcbiAgICBzZXRTZWxlY3RlZERyYWZ0SW5kZXgoZGlzcGxheUluZGV4KTtcbiAgICBzdGFydEVsYXBzZWRUaW1lVHJhY2tpbmcodW5kZWZpbmVkLCAxMjApO1xuICAgIHNldEdlbmVyYXRpb25Qcm9ncmVzcyhcIvCfjqggQ3JlYXRpbmcgaGlnaC1xdWFsaXR5IHZlcnNpb24gb2YgeW91ciBzZWxlY3RlZCBkZXNpZ24uLi5cIik7XG5cbiAgICB0cnkge1xuICAgICAgY29uc3Qgc2VsZWN0ZWREcmFmdCA9IGRyYWZ0Q2FyZHNbZGlzcGxheUluZGV4XTtcbiAgICAgIGNvbnN0IGpvYklkID0gdXVpZHY0KCk7XG4gICAgICBcbiAgICAgIC8vIEdlbmVyYXRlIHRoZSBtaXNzaW5nIHByb21wdHNcbiAgICAgIGNvbnN0IHN0b3JlZEZyb250Q292ZXJQcm9tcHQgPSBzZWxlY3RlZERyYWZ0LmdlbmVyYXRlZFByb21wdHM/LmZyb250Q292ZXI7XG4gICAgICBpZiAoIXN0b3JlZEZyb250Q292ZXJQcm9tcHQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU2VsZWN0ZWQgZHJhZnQgaXMgbWlzc2luZyBmcm9udENvdmVyIHByb21wdFwiKTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3QgY2FyZFR5cGVGb3JQcm9tcHQgPSBzZWxlY3RlZFR5cGUgPT09IFwiY3VzdG9tXCIgPyBjdXN0b21DYXJkVHlwZSA6IHNlbGVjdGVkVHlwZTtcbiAgICAgIGNvbnN0IHNlbGVjdGVkVG9uZU9iaiA9IGNhcmRUb25lcy5maW5kKHRvbmUgPT4gdG9uZS5pZCA9PT0gc2VsZWN0ZWRUb25lKTtcbiAgICAgIGNvbnN0IHRvbmVEZXNjcmlwdGlvbiA9IHNlbGVjdGVkVG9uZU9iaiA/IHNlbGVjdGVkVG9uZU9iai5kZXNjcmlwdGlvbi50b0xvd2VyQ2FzZSgpIDogXCJoZWFydGZlbHQgYW5kIHNpbmNlcmVcIjtcbiAgICAgIGNvbnN0IGVmZmVjdGl2ZVByb21wdCA9IHByb21wdC50cmltKCkgfHwgYEEgYmVhdXRpZnVsICR7Y2FyZFR5cGVGb3JQcm9tcHR9IGNhcmQgd2l0aCAke3RvbmVEZXNjcmlwdGlvbn0gc3R5bGVgO1xuICAgICAgXG4gICAgICBsZXQgbWVzc2FnZUNvbnRlbnQgPSBmaW5hbENhcmRNZXNzYWdlO1xuICAgICAgaWYgKGlzSGFuZHdyaXR0ZW5NZXNzYWdlKSB7XG4gICAgICAgIG1lc3NhZ2VDb250ZW50ID0gXCJbQmxhbmsgc3BhY2UgZm9yIGhhbmR3cml0dGVuIG1lc3NhZ2VdXCI7XG4gICAgICB9XG4gICAgICBcbiAgICAgIC8vIEdldCBzdHlsZSBmcm9tIHRoZSBzZWxlY3RlZCBkcmFmdFxuICAgICAgY29uc3QgZHJhZnRTdHlsZUluZm8gPSBzZWxlY3RlZERyYWZ0LnN0eWxlSW5mbztcbiAgICAgIGxldCBzZWxlY3RlZFN0eWxlO1xuICAgICAgaWYgKGRyYWZ0U3R5bGVJbmZvICYmIGRyYWZ0U3R5bGVJbmZvLnN0eWxlTmFtZSkge1xuICAgICAgICBzZWxlY3RlZFN0eWxlID0gYXJ0aXN0aWNTdHlsZXMuZmluZChzdHlsZSA9PiBzdHlsZS5pZCA9PT0gZHJhZnRTdHlsZUluZm8uc3R5bGVOYW1lKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNlbGVjdGVkU3R5bGUgPSBhcnRpc3RpY1N0eWxlcy5maW5kKHN0eWxlID0+IHN0eWxlLmlkID09PSBzZWxlY3RlZEFydGlzdGljU3R5bGUpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBVc2UgUHJvbXB0R2VuZXJhdG9yIGZvciBmaW5hbCBjYXJkIGZyb20gZHJhZnRcbiAgICAgIGNvbnN0IGZpbmFsRnJvbURyYWZ0Q29uZmlnOiBGaW5hbEZyb21EcmFmdENvbmZpZyA9IHtcbiAgICAgICAgZnJvbnRDb3ZlclByb21wdDogc3RvcmVkRnJvbnRDb3ZlclByb21wdCxcbiAgICAgICAgY2FyZFR5cGU6IHNlbGVjdGVkVHlwZSxcbiAgICAgICAgY3VzdG9tQ2FyZFR5cGU6IGN1c3RvbUNhcmRUeXBlLFxuICAgICAgICB0aGVtZTogZWZmZWN0aXZlUHJvbXB0LFxuICAgICAgICB0b25lOiBzZWxlY3RlZFRvbmUsXG4gICAgICAgIHRvbmVEZXNjcmlwdGlvbjogdG9uZURlc2NyaXB0aW9uLFxuICAgICAgICB0b0ZpZWxkOiB0b0ZpZWxkLFxuICAgICAgICBmcm9tRmllbGQ6IGZyb21GaWVsZCxcbiAgICAgICAgbWVzc2FnZTogbWVzc2FnZUNvbnRlbnQsXG4gICAgICAgIGlzSGFuZHdyaXR0ZW5NZXNzYWdlOiBpc0hhbmR3cml0dGVuTWVzc2FnZSxcbiAgICAgICAgYXJ0aXN0aWNTdHlsZTogc2VsZWN0ZWRTdHlsZSxcbiAgICAgICAgaXNGcm9udEJhY2tPbmx5OiBpc0Zyb250QmFja09ubHlcbiAgICAgIH07XG5cbiAgICAgIGNvbnN0IGZpbmFsUHJvbXB0cyA9IGF3YWl0IFByb21wdEdlbmVyYXRvci5nZW5lcmF0ZUZpbmFsRnJvbURyYWZ0UHJvbXB0c0NvbWJpbmVkKGZpbmFsRnJvbURyYWZ0Q29uZmlnKTtcblxuICAgICAgaWYgKCFmaW5hbFByb21wdHMgfHwgIWZpbmFsUHJvbXB0cy5mcm9udENvdmVyIHx8ICFmaW5hbFByb21wdHMuYmFja0NvdmVyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBnZW5lcmF0ZSBjb21wbGV0ZSBwcm9tcHRzIGZvciBmaW5hbCBjYXJkXCIpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyBQcmVwYXJlIGlucHV0IGltYWdlcyBmb3IgZmluYWwgZ2VuZXJhdGlvblxuICAgICAgY29uc3QgaW5wdXRJbWFnZXM6IHN0cmluZ1tdID0gW107XG4gICAgICBpZiAocmVmZXJlbmNlSW1hZ2VVcmxzLmxlbmd0aCA+IDAgJiYgc2VsZWN0ZWRJbWFnZU1vZGVsID09PSBcImdwdC1pbWFnZS0xXCIpIHtcbiAgICAgICAgaW5wdXRJbWFnZXMucHVzaCguLi5yZWZlcmVuY2VJbWFnZVVybHMpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2dlbmVyYXRlLWNhcmQtYXN5bmMnLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgIGpvYklkLFxuICAgICAgICAgIHByb21wdHM6IGZpbmFsUHJvbXB0cyxcbiAgICAgICAgICBjb25maWc6IHtcbiAgICAgICAgICAgIHVzZXJOdW1iZXI6IFwiKzE3MTQ1OTg2MTA1XCIsXG4gICAgICAgICAgICBtb2RlbFZlcnNpb246IHNlbGVjdGVkSW1hZ2VNb2RlbCxcbiAgICAgICAgICAgIGFzcGVjdFJhdGlvOiBwYXBlclNpemVzLmZpbmQoc2l6ZSA9PiBzaXplLmlkID09PSBzZWxlY3RlZFBhcGVyU2l6ZSk/LmFzcGVjdFJhdGlvIHx8IFwiOToxNlwiLFxuICAgICAgICAgICAgcXVhbGl0eTogXCJoaWdoXCIsXG4gICAgICAgICAgICBvdXRwdXRGb3JtYXQ6IFwianBlZ1wiLFxuICAgICAgICAgICAgb3V0cHV0Q29tcHJlc3Npb246IDEwMCxcbiAgICAgICAgICAgIG1vZGVyYXRpb246IFwibG93XCIsXG4gICAgICAgICAgICBkaW1lbnNpb25zOiBwYXBlclNpemVzLmZpbmQoc2l6ZSA9PiBzaXplLmlkID09PSBzZWxlY3RlZFBhcGVyU2l6ZSk/LmRpbWVuc2lvbnMgfHwgXCIxMDI0eDE1MzZcIixcbiAgICAgICAgICAgIGlzRnJvbnRCYWNrT25seSxcbiAgICAgICAgICAgIHVzZXJFbWFpbCxcbiAgICAgICAgICAgIGNhcmRUeXBlOiBzZWxlY3RlZFR5cGUgPT09IFwiY3VzdG9tXCIgPyBjdXN0b21DYXJkVHlwZSA6IHNlbGVjdGVkVHlwZSxcbiAgICAgICAgICAgIHRvRmllbGQsXG4gICAgICAgICAgICBmcm9tRmllbGQsXG4gICAgICAgICAgICBpc0RyYWZ0TW9kZTogZmFsc2UsXG4gICAgICAgICAgICAuLi4oaW5wdXRJbWFnZXMubGVuZ3RoID4gMCAmJiB7IFxuICAgICAgICAgICAgICBpbnB1dF9pbWFnZXM6IGlucHV0SW1hZ2VzLFxuICAgICAgICAgICAgICBpbnB1dF9pbWFnZXNfbW9kZTogXCJmcm9udF9jb3Zlcl9vbmx5XCJcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgfSk7XG5cbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBTZXJ2ZXIgZXJyb3I6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICBcbiAgICAgIGlmIChyZXN1bHQuc3RhdHVzICE9PSAncHJvY2Vzc2luZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlc3VsdC5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gc3RhcnQgZmluYWwgY2FyZCBnZW5lcmF0aW9uJyk7XG4gICAgICB9XG5cbiAgICAgIHNldEN1cnJlbnRKb2JJZChqb2JJZCk7XG4gICAgICB0b2FzdC5zdWNjZXNzKFwi8J+OqCBHZW5lcmF0aW5nIGhpZ2gtcXVhbGl0eSB2ZXJzaW9uIG9mIHlvdXIgc2VsZWN0ZWQgZGVzaWduIVwiKTtcbiAgICAgIFxuICAgICAgLy8gU3Vic2NyaWJlIHRvIFdlYlNvY2tldCB1cGRhdGVzXG4gICAgICBzdWJzY3JpYmVUb0pvYihqb2JJZCk7XG5cbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcignRmluYWwgY2FyZCBnZW5lcmF0aW9uIGVycm9yOicsIGVycm9yKTtcbiAgICAgIHRvYXN0LmVycm9yKFwiRmFpbGVkIHRvIGdlbmVyYXRlIGZpbmFsIGNhcmQuIFBsZWFzZSB0cnkgYWdhaW4uXCIpO1xuICAgICAgc2V0SXNHZW5lcmF0aW5nRmluYWxDYXJkKGZhbHNlKTtcbiAgICAgIHNldEdlbmVyYXRpb25Qcm9ncmVzcyhcIlwiKTtcbiAgICAgIHByb3BzLnN0b3BFbGFwc2VkVGltZVRyYWNraW5nKCk7XG4gICAgfVxuICB9LCBbZHJhZnRDYXJkcywgZHJhZnRJbmRleE1hcHBpbmcsIGlzR2VuZXJhdGluZ0ZpbmFsQ2FyZCwgcHJvcHNdKTtcblxuICByZXR1cm4ge1xuICAgIGlzRHJhZnRNb2RlLFxuICAgIHNldElzRHJhZnRNb2RlLFxuICAgIGRyYWZ0Q2FyZHMsXG4gICAgc2V0RHJhZnRDYXJkcyxcbiAgICBkcmFmdEluZGV4TWFwcGluZyxcbiAgICBzZXREcmFmdEluZGV4TWFwcGluZyxcbiAgICBzZWxlY3RlZERyYWZ0SW5kZXgsXG4gICAgc2V0U2VsZWN0ZWREcmFmdEluZGV4LFxuICAgIGlzR2VuZXJhdGluZ0ZpbmFsQ2FyZCxcbiAgICBzZXRJc0dlbmVyYXRpbmdGaW5hbENhcmQsXG4gICAgcHJldmlld2luZ0RyYWZ0SW5kZXgsXG4gICAgc2V0UHJldmlld2luZ0RyYWZ0SW5kZXgsXG4gICAgZHJhZnRDb21wbGV0aW9uU2hvd24sXG4gICAgc2V0RHJhZnRDb21wbGV0aW9uU2hvd24sXG4gICAgZHJhZnRDb21wbGV0aW9uQ291bnQsXG4gICAgc2V0RHJhZnRDb21wbGV0aW9uQ291bnQsXG4gICAgaGFuZGxlR2VuZXJhdGVEcmFmdENhcmRzLFxuICAgIGhhbmRsZUdlbmVyYXRlRmluYWxGcm9tRHJhZnQsXG4gICAgaXNHZW5lcmF0aW5nLFxuICAgIHNldElzR2VuZXJhdGluZyxcbiAgICBnZW5lcmF0aW9uUHJvZ3Jlc3MsXG4gICAgc2V0R2VuZXJhdGlvblByb2dyZXNzLFxuICAgIHByb2dyZXNzUGVyY2VudGFnZSxcbiAgICBzZXRQcm9ncmVzc1BlcmNlbnRhZ2UsXG4gICAgZ2VuZXJhdGVkQ2FyZCxcbiAgICBzZXRHZW5lcmF0ZWRDYXJkLFxuICAgIGdlbmVyYXRlZENhcmRzLFxuICAgIHNldEdlbmVyYXRlZENhcmRzLFxuICAgIGlzQ2FyZENvbXBsZXRlZCxcbiAgICBzZXRJc0NhcmRDb21wbGV0ZWQsXG4gICAgY3VycmVudEpvYklkLFxuICAgIHNldEN1cnJlbnRKb2JJZFxuICB9O1xufSJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUNhbGxiYWNrIiwidG9hc3QiLCJ2NCIsInV1aWR2NCIsIlByb21wdEdlbmVyYXRvciIsImFydGlzdGljU3R5bGVzIiwicGFwZXJTaXplcyIsImNhcmRUb25lcyIsImNoYXRXaXRoQUkiLCJ1c2VEcmFmdEdlbmVyYXRpb24iLCJwcm9wcyIsImlzRHJhZnRNb2RlIiwic2V0SXNEcmFmdE1vZGUiLCJkcmFmdENhcmRzIiwic2V0RHJhZnRDYXJkcyIsImRyYWZ0SW5kZXhNYXBwaW5nIiwic2V0RHJhZnRJbmRleE1hcHBpbmciLCJzZWxlY3RlZERyYWZ0SW5kZXgiLCJzZXRTZWxlY3RlZERyYWZ0SW5kZXgiLCJpc0dlbmVyYXRpbmdGaW5hbENhcmQiLCJzZXRJc0dlbmVyYXRpbmdGaW5hbENhcmQiLCJwcmV2aWV3aW5nRHJhZnRJbmRleCIsInNldFByZXZpZXdpbmdEcmFmdEluZGV4IiwiZHJhZnRDb21wbGV0aW9uU2hvd24iLCJzZXREcmFmdENvbXBsZXRpb25TaG93biIsImRyYWZ0Q29tcGxldGlvbkNvdW50Iiwic2V0RHJhZnRDb21wbGV0aW9uQ291bnQiLCJpc0dlbmVyYXRpbmciLCJzZXRJc0dlbmVyYXRpbmciLCJnZW5lcmF0aW9uUHJvZ3Jlc3MiLCJzZXRHZW5lcmF0aW9uUHJvZ3Jlc3MiLCJwcm9ncmVzc1BlcmNlbnRhZ2UiLCJzZXRQcm9ncmVzc1BlcmNlbnRhZ2UiLCJnZW5lcmF0ZWRDYXJkIiwic2V0R2VuZXJhdGVkQ2FyZCIsImdlbmVyYXRlZENhcmRzIiwic2V0R2VuZXJhdGVkQ2FyZHMiLCJpc0NhcmRDb21wbGV0ZWQiLCJzZXRJc0NhcmRDb21wbGV0ZWQiLCJjdXJyZW50Sm9iSWQiLCJzZXRDdXJyZW50Sm9iSWQiLCJoYW5kbGVHZW5lcmF0ZURyYWZ0Q2FyZHMiLCJ1c2VyRW1haWwiLCJzZWxlY3RlZEFydGlzdGljU3R5bGUiLCJjdXN0b21TdHlsZURlc2NyaXB0aW9uIiwicmVmZXJlbmNlSW1hZ2VVcmxzIiwic2VsZWN0ZWREcmFmdE1vZGVsIiwic2VsZWN0ZWRUeXBlIiwiY3VzdG9tQ2FyZFR5cGUiLCJzZWxlY3RlZFRvbmUiLCJwcm9tcHQiLCJ0b0ZpZWxkIiwiZnJvbUZpZWxkIiwic2VsZWN0ZWRQYXBlclNpemUiLCJzYXZlSm9iVG9TdG9yYWdlIiwic3Vic2NyaWJlVG9Kb2IiLCJzdGFydEVsYXBzZWRUaW1lVHJhY2tpbmciLCJ0cmltIiwiZXJyb3IiLCJlbWFpbFJlZ2V4IiwidGVzdCIsImxlbmd0aCIsInN0b3BFbGFwc2VkVGltZVRyYWNraW5nIiwidW5kZWZpbmVkIiwiY29uc29sZSIsImxvZyIsImNhcmRUeXBlRm9yUHJvbXB0Iiwic2VsZWN0ZWRUb25lT2JqIiwiZmluZCIsInRvbmUiLCJpZCIsInRvbmVEZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uIiwidG9Mb3dlckNhc2UiLCJlZmZlY3RpdmVQcm9tcHQiLCJkcmFmdFByb21pc2VzIiwiQXJyYXkiLCJmcm9tIiwiXyIsImluZGV4Iiwic3R5bGVPdmVycmlkZSIsInN0eWxlTGFiZWwiLCJwcmVkZWZpbmVkU3R5bGVzIiwic3R5bGVMYWJlbHMiLCJzZWxlY3RlZFN0eWxlIiwic3R5bGUiLCJkcmFmdENvbmZpZyIsImNhcmRUeXBlIiwidG9uZUxhYmVsIiwibGFiZWwiLCJ0aGVtZSIsImFydGlzdGljU3R5bGUiLCJwaG90b0FuYWx5c2VzIiwiaXNEcmFmdFZhcmlhdGlvbiIsInZhcmlhdGlvbkluZGV4IiwiZnJvbnRDb3ZlclByb21wdFF1ZXJ5IiwiaW1hZ2VzIiwiZ2VuZXJhdGVEcmFmdFByb21wdFdpdGhJbWFnZXMiLCJmcm9udENvdmVyUHJvbXB0IiwibW9kZWwiLCJhdHRhY2htZW50cyIsIkVycm9yIiwiZW5oYW5jZWRGcm9udENvdmVyUHJvbXB0IiwiZW5oYW5jZVByb21wdFdpdGhSZWZlcmVuY2VQaG90b3MiLCJqb2JJZCIsImlucHV0SW1hZ2VzIiwicHVzaCIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJwcm9tcHRzIiwiZnJvbnRDb3ZlciIsImNvbmZpZyIsInVzZXJOdW1iZXIiLCJtb2RlbFZlcnNpb24iLCJhc3BlY3RSYXRpbyIsInNpemUiLCJxdWFsaXR5Iiwib3V0cHV0Rm9ybWF0Iiwib3V0cHV0Q29tcHJlc3Npb24iLCJtb2RlcmF0aW9uIiwiZGltZW5zaW9ucyIsImlzRnJvbnRCYWNrT25seSIsImlucHV0X2ltYWdlcyIsImlucHV0X2ltYWdlc19tb2RlIiwib2siLCJzdGF0dXMiLCJyZXN1bHQiLCJqc29uIiwibWVzc2FnZSIsIlByb21pc2UiLCJhbGxTZXR0bGVkIiwiaGFuZGxlR2VuZXJhdGVGaW5hbEZyb21EcmFmdCIsImRpc3BsYXlJbmRleCIsImZpbmFsQ2FyZE1lc3NhZ2UiLCJpc0hhbmR3cml0dGVuTWVzc2FnZSIsInNlbGVjdGVkSW1hZ2VNb2RlbCIsIm9yaWdpbmFsRHJhZnRJbmRleCIsInNlbGVjdGVkRHJhZnQiLCJzdG9yZWRGcm9udENvdmVyUHJvbXB0IiwiZ2VuZXJhdGVkUHJvbXB0cyIsIm1lc3NhZ2VDb250ZW50IiwiZHJhZnRTdHlsZUluZm8iLCJzdHlsZUluZm8iLCJzdHlsZU5hbWUiLCJmaW5hbEZyb21EcmFmdENvbmZpZyIsImZpbmFsUHJvbXB0cyIsImdlbmVyYXRlRmluYWxGcm9tRHJhZnRQcm9tcHRzQ29tYmluZWQiLCJiYWNrQ292ZXIiLCJzdWNjZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/cardStudio/useDraftGeneration.ts\n"));

/***/ })

});