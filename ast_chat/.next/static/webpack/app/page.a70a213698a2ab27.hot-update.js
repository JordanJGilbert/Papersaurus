"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/cardStudio/useMessageGeneration.ts":
/*!**************************************************!*\
  !*** ./hooks/cardStudio/useMessageGeneration.ts ***!
  \**************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMessageGeneration: function() { return /* binding */ useMessageGeneration; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var _lib_promptGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/promptGenerator */ \"(app-pages-browser)/./lib/promptGenerator.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"(app-pages-browser)/./hooks/cardStudio/constants.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(app-pages-browser)/./hooks/cardStudio/utils.ts\");\n/* __next_internal_client_entry_do_not_use__ useMessageGeneration auto */ \n\n\n\n\nfunction useMessageGeneration(selectedType, customCardType, selectedTone, prompt, toField, fromField, relationshipField, photoAnalyses) {\n    const [finalCardMessage, setFinalCardMessage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [isGeneratingMessage, setIsGeneratingMessage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [messageHistory, setMessageHistory] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [currentMessageIndex, setCurrentMessageIndex] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(-1);\n    const [refinementPrompt, setRefinementPrompt] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [isRefiningMessage, setIsRefiningMessage] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [showRefinementBox, setShowRefinementBox] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Message version control functions\n    const addMessageToHistory = (message)=>{\n        if (message.trim() === \"\") return;\n        const cleanMessage = message.replace(/<\\/?MESSAGE>/g, \"\").trim();\n        if (cleanMessage === \"\") return;\n        const newHistory = messageHistory.slice(0, currentMessageIndex + 1);\n        newHistory.push(cleanMessage);\n        if (newHistory.length > 10) {\n            newHistory.shift();\n        } else {\n            setCurrentMessageIndex(currentMessageIndex + 1);\n        }\n        setMessageHistory(newHistory);\n        setCurrentMessageIndex(newHistory.length - 1);\n    };\n    const undoMessage = ()=>{\n        if (currentMessageIndex > 0) {\n            const newIndex = currentMessageIndex - 1;\n            setCurrentMessageIndex(newIndex);\n            setFinalCardMessage(messageHistory[newIndex]);\n        }\n    };\n    const redoMessage = ()=>{\n        if (currentMessageIndex < messageHistory.length - 1) {\n            const newIndex = currentMessageIndex + 1;\n            setCurrentMessageIndex(newIndex);\n            setFinalCardMessage(messageHistory[newIndex]);\n        }\n    };\n    // Full message generation function\n    const handleGetMessageHelp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        // Validate custom card type if selected\n        if (selectedType === \"custom\" && !customCardType.trim()) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Please describe your custom card type first!\");\n            return;\n        }\n        setIsGeneratingMessage(true);\n        try {\n            const cardTypeForPrompt = selectedType === \"custom\" ? customCardType : selectedType;\n            const selectedToneObj = _constants__WEBPACK_IMPORTED_MODULE_3__.cardTones.find((tone)=>tone.id === selectedTone);\n            const toneDescription = selectedToneObj ? selectedToneObj.description.toLowerCase() : \"heartfelt and sincere\";\n            // Use effective prompt logic here too\n            const effectivePrompt = prompt.trim() || \"A beautiful \".concat(cardTypeForPrompt, \" card with \").concat(toneDescription, \" style\");\n            // Use PromptGenerator for message generation\n            const messageConfig = {\n                cardType: selectedType,\n                customCardType: customCardType,\n                tone: selectedTone,\n                toneLabel: selectedToneObj ? selectedToneObj.label : \"Heartfelt\",\n                toneDescription: toneDescription,\n                theme: effectivePrompt,\n                toField: toField,\n                fromField: fromField,\n                relationshipField: relationshipField,\n                photoAnalyses: photoAnalyses\n            };\n            const messagePrompt = _lib_promptGenerator__WEBPACK_IMPORTED_MODULE_2__.PromptGenerator.generateMessagePrompt(messageConfig);\n            const generatedMessage = await (0,_utils__WEBPACK_IMPORTED_MODULE_4__.chatWithAI)(messagePrompt, {\n                model: \"gemini-2.5-pro\",\n                includeThoughts: false // Don't include thinking content in message generation\n            });\n            if (generatedMessage === null || generatedMessage === void 0 ? void 0 : generatedMessage.trim()) {\n                // Extract message content between <MESSAGE> tags using regex\n                const messageMatch = generatedMessage.match(/<MESSAGE>([\\s\\S]*?)<\\/MESSAGE>/);\n                let extractedMessage = messageMatch ? messageMatch[1].trim() : generatedMessage.trim();\n                // Ensure no MESSAGE tags are included in the final message\n                extractedMessage = extractedMessage.replace(/<\\/?MESSAGE>/g, \"\").trim();\n                // Add current message to history if it exists and is different\n                if (finalCardMessage.trim() && finalCardMessage.trim() !== extractedMessage) {\n                    addMessageToHistory(finalCardMessage);\n                }\n                setFinalCardMessage(extractedMessage);\n                // Add the new message to history\n                addMessageToHistory(extractedMessage);\n                sonner__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"âœ¨ Personalized message created!\");\n                // Return the generated message so the caller can use it\n                return extractedMessage;\n            }\n        } catch (error) {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Failed to generate message. Please try again.\");\n            return null;\n        } finally{\n            setIsGeneratingMessage(false);\n        }\n    }, [\n        selectedType,\n        customCardType,\n        selectedTone,\n        prompt,\n        toField,\n        fromField,\n        finalCardMessage,\n        photoAnalyses\n    ]);\n    return {\n        finalCardMessage,\n        setFinalCardMessage,\n        isGeneratingMessage,\n        setIsGeneratingMessage,\n        messageHistory,\n        setMessageHistory,\n        currentMessageIndex,\n        setCurrentMessageIndex,\n        refinementPrompt,\n        setRefinementPrompt,\n        isRefiningMessage,\n        setIsRefiningMessage,\n        showRefinementBox,\n        setShowRefinementBox,\n        handleGetMessageHelp,\n        addMessageToHistory,\n        undoMessage,\n        redoMessage\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/cardStudio/useMessageGeneration.ts\n"));

/***/ })

});