"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useCardHistorySimplified.ts":
/*!*******************************************!*\
  !*** ./hooks/useCardHistorySimplified.ts ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCardHistory: function() { return /* binding */ useCardHistory; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_storageManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/storageManager */ \"(app-pages-browser)/./lib/storageManager.ts\");\n/* __next_internal_client_entry_do_not_use__ useCardHistory auto */ \n\nfunction useCardHistory() {\n    const [cardHistory, setCardHistory] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [draftSessions, setDraftSessions] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    // Load recent cards and draft sessions on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const recent = _lib_storageManager__WEBPACK_IMPORTED_MODULE_1__.storage.getRecentCards();\n        const historyItems = recent.map((card)=>({\n                id: card.id,\n                date: card.date,\n                type: card.type,\n                tone: card.tone,\n                recipient: card.recipient,\n                sender: undefined,\n                message: undefined,\n                thumbnailUrl: card.preview\n            }));\n        setCardHistory(historyItems);\n        // Load draft sessions from localStorage directly\n        if (true) {\n            try {\n                const sessions = JSON.parse(localStorage.getItem(\"vibe-draft-sessions\") || \"[]\");\n                const twoHours = 2 * 60 * 60 * 1000;\n                // Filter out expired sessions\n                const validSessions = sessions.filter((session)=>{\n                    if (!session.savedAt) return false;\n                    const age = Date.now() - new Date(session.savedAt).getTime();\n                    return age < twoHours;\n                });\n                // Update localStorage if we removed any expired sessions\n                if (validSessions.length !== sessions.length) {\n                    localStorage.setItem(\"vibe-draft-sessions\", JSON.stringify(validSessions));\n                }\n                setDraftSessions(validSessions);\n            } catch (e) {\n                setDraftSessions([]);\n            }\n        }\n    }, []);\n    // Add a new card to history\n    const addCardToHistory = (card)=>{\n        _lib_storageManager__WEBPACK_IMPORTED_MODULE_1__.storage.addRecentCard({\n            id: card.id,\n            date: card.date,\n            type: card.type,\n            tone: card.tone,\n            recipient: card.recipient,\n            preview: card.thumbnailUrl\n        });\n        // Update local state\n        setCardHistory((prev)=>[\n                card,\n                ...prev\n            ].slice(0, 5));\n    };\n    // Clear all history\n    const clearHistory = ()=>{\n        _lib_storageManager__WEBPACK_IMPORTED_MODULE_1__.storage.clearAll();\n        setCardHistory([]);\n    };\n    // Draft session management\n    const saveDraftSession = (formData, draftCards, selectedIndex, sessionId)=>{\n        if (false) {}\n        const id = sessionId || \"draft_\".concat(Date.now());\n        const session = {\n            id,\n            formData,\n            draftCards: draftCards.filter(Boolean),\n            selectedIndex,\n            savedAt: new Date().toISOString()\n        };\n        try {\n            // Save current session\n            localStorage.setItem(\"vibe-current-draft-session\", JSON.stringify(session));\n            // Update draft sessions list\n            const sessions = JSON.parse(localStorage.getItem(\"vibe-draft-sessions\") || \"[]\");\n            const existingIndex = sessions.findIndex((s)=>s.id === id);\n            if (existingIndex >= 0) {\n                sessions[existingIndex] = session;\n            } else {\n                sessions.unshift(session);\n            }\n            // Keep only the most recent session\n            const updatedSessions = sessions.slice(0, 1);\n            localStorage.setItem(\"vibe-draft-sessions\", JSON.stringify(updatedSessions));\n            setDraftSessions(updatedSessions);\n        } catch (e) {\n            console.error(\"Failed to save draft session:\", e);\n        }\n        return id;\n    };\n    const resumeDraftSession = (sessionId)=>{\n        if (false) {}\n        try {\n            // Check current session first\n            const currentSession = JSON.parse(localStorage.getItem(\"vibe-current-draft-session\") || \"null\");\n            if (currentSession && (sessionId === \"current\" || currentSession.id === sessionId)) {\n                return currentSession;\n            }\n            // Check sessions list\n            const sessions = JSON.parse(localStorage.getItem(\"vibe-draft-sessions\") || \"[]\");\n            return sessions.find((s)=>s.id === sessionId);\n        } catch (e) {\n            return null;\n        }\n    };\n    const removeDraftSession = (sessionId)=>{\n        if (false) {}\n        try {\n            const currentSession = JSON.parse(localStorage.getItem(\"vibe-current-draft-session\") || \"null\");\n            if (currentSession && currentSession.id === sessionId) {\n                localStorage.removeItem(\"vibe-current-draft-session\");\n            }\n            const sessions = JSON.parse(localStorage.getItem(\"vibe-draft-sessions\") || \"[]\");\n            const filtered = sessions.filter((s)=>s.id !== sessionId);\n            localStorage.setItem(\"vibe-draft-sessions\", JSON.stringify(filtered));\n            setDraftSessions(filtered);\n        } catch (e) {\n            console.error(\"Failed to remove draft session:\", e);\n        }\n    };\n    // Alias for backward compatibility\n    const addCompletedCard = (card)=>{\n        var _card_images;\n        // Convert from the old format to new format\n        const historyItem = {\n            id: card.id || Date.now().toString(),\n            date: new Date().toISOString(),\n            type: card.cardType || \"custom\",\n            tone: card.cardTone || \"casual\",\n            recipient: card.toField,\n            sender: card.fromField,\n            message: card.finalCardMessage,\n            thumbnailUrl: card.frontCover || ((_card_images = card.images) === null || _card_images === void 0 ? void 0 : _card_images.frontCover)\n        };\n        addCardToHistory(historyItem);\n    };\n    return {\n        cardHistory,\n        draftSessions,\n        addCardToHistory,\n        addCompletedCard,\n        clearHistory,\n        saveDraftSession,\n        resumeDraftSession,\n        removeDraftSession,\n        // Add these for backward compatibility\n        hasCompletedCards: cardHistory.length > 0,\n        hasDraftSessions: draftSessions.length > 0,\n        totalCards: cardHistory.length,\n        totalDrafts: draftSessions.length\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2hvb2tzL3VzZUNhcmRIaXN0b3J5U2ltcGxpZmllZC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O29FQUU0QztBQUNHO0FBYXhDLFNBQVNHO0lBQ2QsTUFBTSxDQUFDQyxhQUFhQyxlQUFlLEdBQUdMLCtDQUFRQSxDQUFvQixFQUFFO0lBQ3BFLE1BQU0sQ0FBQ00sZUFBZUMsaUJBQWlCLEdBQUdQLCtDQUFRQSxDQUFRLEVBQUU7SUFFNUQsZ0RBQWdEO0lBQ2hEQyxnREFBU0EsQ0FBQztRQUNSLE1BQU1PLFNBQVNOLHdEQUFPQSxDQUFDTyxjQUFjO1FBQ3JDLE1BQU1DLGVBQWtDRixPQUFPRyxHQUFHLENBQUNDLENBQUFBLE9BQVM7Z0JBQzFEQyxJQUFJRCxLQUFLQyxFQUFFO2dCQUNYQyxNQUFNRixLQUFLRSxJQUFJO2dCQUNmQyxNQUFNSCxLQUFLRyxJQUFJO2dCQUNmQyxNQUFNSixLQUFLSSxJQUFJO2dCQUNmQyxXQUFXTCxLQUFLSyxTQUFTO2dCQUN6QkMsUUFBUUM7Z0JBQ1JDLFNBQVNEO2dCQUNURSxjQUFjVCxLQUFLVSxPQUFPO1lBQzVCO1FBQ0FqQixlQUFlSztRQUVmLGlEQUFpRDtRQUNqRCxJQUFJLElBQWtCLEVBQWE7WUFDakMsSUFBSTtnQkFDRixNQUFNYSxXQUFXQyxLQUFLQyxLQUFLLENBQUNDLGFBQWFDLE9BQU8sQ0FBQywwQkFBMEI7Z0JBQzNFLE1BQU1DLFdBQVcsSUFBSSxLQUFLLEtBQUs7Z0JBRS9CLDhCQUE4QjtnQkFDOUIsTUFBTUMsZ0JBQWdCTixTQUFTTyxNQUFNLENBQUMsQ0FBQ0M7b0JBQ3JDLElBQUksQ0FBQ0EsUUFBUUMsT0FBTyxFQUFFLE9BQU87b0JBQzdCLE1BQU1DLE1BQU1DLEtBQUtDLEdBQUcsS0FBSyxJQUFJRCxLQUFLSCxRQUFRQyxPQUFPLEVBQUVJLE9BQU87b0JBQzFELE9BQU9ILE1BQU1MO2dCQUNmO2dCQUVBLHlEQUF5RDtnQkFDekQsSUFBSUMsY0FBY1EsTUFBTSxLQUFLZCxT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QUFNO1FBQzlCMkMsYUFBYTFFLGNBQWMrQixNQUFNO0lBQ25DO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vaG9va3MvdXNlQ2FyZEhpc3RvcnlTaW1wbGlmaWVkLnRzP2Q4YmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBzdG9yYWdlIH0gZnJvbSAnQC9saWIvc3RvcmFnZU1hbmFnZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIENhcmRIaXN0b3J5SXRlbSB7XG4gIGlkOiBzdHJpbmc7XG4gIGRhdGU6IHN0cmluZztcbiAgdHlwZTogc3RyaW5nO1xuICB0b25lOiBzdHJpbmc7XG4gIHJlY2lwaWVudD86IHN0cmluZztcbiAgc2VuZGVyPzogc3RyaW5nO1xuICBtZXNzYWdlPzogc3RyaW5nO1xuICB0aHVtYm5haWxVcmw/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VDYXJkSGlzdG9yeSgpIHtcbiAgY29uc3QgW2NhcmRIaXN0b3J5LCBzZXRDYXJkSGlzdG9yeV0gPSB1c2VTdGF0ZTxDYXJkSGlzdG9yeUl0ZW1bXT4oW10pO1xuICBjb25zdCBbZHJhZnRTZXNzaW9ucywgc2V0RHJhZnRTZXNzaW9uc10gPSB1c2VTdGF0ZTxhbnlbXT4oW10pO1xuXG4gIC8vIExvYWQgcmVjZW50IGNhcmRzIGFuZCBkcmFmdCBzZXNzaW9ucyBvbiBtb3VudFxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHJlY2VudCA9IHN0b3JhZ2UuZ2V0UmVjZW50Q2FyZHMoKTtcbiAgICBjb25zdCBoaXN0b3J5SXRlbXM6IENhcmRIaXN0b3J5SXRlbVtdID0gcmVjZW50Lm1hcChjYXJkID0+ICh7XG4gICAgICBpZDogY2FyZC5pZCxcbiAgICAgIGRhdGU6IGNhcmQuZGF0ZSxcbiAgICAgIHR5cGU6IGNhcmQudHlwZSxcbiAgICAgIHRvbmU6IGNhcmQudG9uZSxcbiAgICAgIHJlY2lwaWVudDogY2FyZC5yZWNpcGllbnQsXG4gICAgICBzZW5kZXI6IHVuZGVmaW5lZCxcbiAgICAgIG1lc3NhZ2U6IHVuZGVmaW5lZCxcbiAgICAgIHRodW1ibmFpbFVybDogY2FyZC5wcmV2aWV3XG4gICAgfSkpO1xuICAgIHNldENhcmRIaXN0b3J5KGhpc3RvcnlJdGVtcyk7XG4gICAgXG4gICAgLy8gTG9hZCBkcmFmdCBzZXNzaW9ucyBmcm9tIGxvY2FsU3RvcmFnZSBkaXJlY3RseVxuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3Qgc2Vzc2lvbnMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd2aWJlLWRyYWZ0LXNlc3Npb25zJykgfHwgJ1tdJyk7XG4gICAgICAgIGNvbnN0IHR3b0hvdXJzID0gMiAqIDYwICogNjAgKiAxMDAwO1xuICAgICAgICBcbiAgICAgICAgLy8gRmlsdGVyIG91dCBleHBpcmVkIHNlc3Npb25zXG4gICAgICAgIGNvbnN0IHZhbGlkU2Vzc2lvbnMgPSBzZXNzaW9ucy5maWx0ZXIoKHNlc3Npb246IGFueSkgPT4ge1xuICAgICAgICAgIGlmICghc2Vzc2lvbi5zYXZlZEF0KSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgY29uc3QgYWdlID0gRGF0ZS5ub3coKSAtIG5ldyBEYXRlKHNlc3Npb24uc2F2ZWRBdCkuZ2V0VGltZSgpO1xuICAgICAgICAgIHJldHVybiBhZ2UgPCB0d29Ib3VycztcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICAvLyBVcGRhdGUgbG9jYWxTdG9yYWdlIGlmIHdlIHJlbW92ZWQgYW55IGV4cGlyZWQgc2Vzc2lvbnNcbiAgICAgICAgaWYgKHZhbGlkU2Vzc2lvbnMubGVuZ3RoICE9PSBzZXNzaW9ucy5sZW5ndGgpIHtcbiAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndmliZS1kcmFmdC1zZXNzaW9ucycsIEpTT04uc3RyaW5naWZ5KHZhbGlkU2Vzc2lvbnMpKTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgc2V0RHJhZnRTZXNzaW9ucyh2YWxpZFNlc3Npb25zKTtcbiAgICAgIH0gY2F0Y2gge1xuICAgICAgICBzZXREcmFmdFNlc3Npb25zKFtdKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtdKTtcblxuICAvLyBBZGQgYSBuZXcgY2FyZCB0byBoaXN0b3J5XG4gIGNvbnN0IGFkZENhcmRUb0hpc3RvcnkgPSAoY2FyZDogQ2FyZEhpc3RvcnlJdGVtKSA9PiB7XG4gICAgc3RvcmFnZS5hZGRSZWNlbnRDYXJkKHtcbiAgICAgIGlkOiBjYXJkLmlkLFxuICAgICAgZGF0ZTogY2FyZC5kYXRlLFxuICAgICAgdHlwZTogY2FyZC50eXBlLFxuICAgICAgdG9uZTogY2FyZC50b25lLFxuICAgICAgcmVjaXBpZW50OiBjYXJkLnJlY2lwaWVudCxcbiAgICAgIHByZXZpZXc6IGNhcmQudGh1bWJuYWlsVXJsXG4gICAgfSk7XG4gICAgXG4gICAgLy8gVXBkYXRlIGxvY2FsIHN0YXRlXG4gICAgc2V0Q2FyZEhpc3RvcnkocHJldiA9PiBbY2FyZCwgLi4ucHJldl0uc2xpY2UoMCwgNSkpO1xuICB9O1xuXG4gIC8vIENsZWFyIGFsbCBoaXN0b3J5XG4gIGNvbnN0IGNsZWFySGlzdG9yeSA9ICgpID0+IHtcbiAgICBzdG9yYWdlLmNsZWFyQWxsKCk7XG4gICAgc2V0Q2FyZEhpc3RvcnkoW10pO1xuICB9O1xuXG4gIC8vIERyYWZ0IHNlc3Npb24gbWFuYWdlbWVudFxuICBjb25zdCBzYXZlRHJhZnRTZXNzaW9uID0gKGZvcm1EYXRhOiBhbnksIGRyYWZ0Q2FyZHM6IGFueVtdLCBzZWxlY3RlZEluZGV4OiBudW1iZXIsIHNlc3Npb25JZD86IHN0cmluZykgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIHNlc3Npb25JZCB8fCAnJztcbiAgICBcbiAgICBjb25zdCBpZCA9IHNlc3Npb25JZCB8fCBgZHJhZnRfJHtEYXRlLm5vdygpfWA7XG4gICAgY29uc3Qgc2Vzc2lvbiA9IHtcbiAgICAgIGlkLFxuICAgICAgZm9ybURhdGEsXG4gICAgICBkcmFmdENhcmRzOiBkcmFmdENhcmRzLmZpbHRlcihCb29sZWFuKSwgLy8gT25seSBzYXZlIGNvbXBsZXRlZCBkcmFmdHNcbiAgICAgIHNlbGVjdGVkSW5kZXgsXG4gICAgICBzYXZlZEF0OiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKClcbiAgICB9O1xuICAgIFxuICAgIHRyeSB7XG4gICAgICAvLyBTYXZlIGN1cnJlbnQgc2Vzc2lvblxuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3ZpYmUtY3VycmVudC1kcmFmdC1zZXNzaW9uJywgSlNPTi5zdHJpbmdpZnkoc2Vzc2lvbikpO1xuICAgICAgXG4gICAgICAvLyBVcGRhdGUgZHJhZnQgc2Vzc2lvbnMgbGlzdFxuICAgICAgY29uc3Qgc2Vzc2lvbnMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd2aWJlLWRyYWZ0LXNlc3Npb25zJykgfHwgJ1tdJyk7XG4gICAgICBjb25zdCBleGlzdGluZ0luZGV4ID0gc2Vzc2lvbnMuZmluZEluZGV4KChzOiBhbnkpID0+IHMuaWQgPT09IGlkKTtcbiAgICAgIGlmIChleGlzdGluZ0luZGV4ID49IDApIHtcbiAgICAgICAgc2Vzc2lvbnNbZXhpc3RpbmdJbmRleF0gPSBzZXNzaW9uO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2Vzc2lvbnMudW5zaGlmdChzZXNzaW9uKTtcbiAgICAgIH1cbiAgICAgIC8vIEtlZXAgb25seSB0aGUgbW9zdCByZWNlbnQgc2Vzc2lvblxuICAgICAgY29uc3QgdXBkYXRlZFNlc3Npb25zID0gc2Vzc2lvbnMuc2xpY2UoMCwgMSk7XG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndmliZS1kcmFmdC1zZXNzaW9ucycsIEpTT04uc3RyaW5naWZ5KHVwZGF0ZWRTZXNzaW9ucykpO1xuICAgICAgc2V0RHJhZnRTZXNzaW9ucyh1cGRhdGVkU2Vzc2lvbnMpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBzYXZlIGRyYWZ0IHNlc3Npb246JywgZSk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiBpZDtcbiAgfTtcbiAgXG4gIGNvbnN0IHJlc3VtZURyYWZ0U2Vzc2lvbiA9IChzZXNzaW9uSWQ6IHN0cmluZykgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykgcmV0dXJuIG51bGw7XG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIC8vIENoZWNrIGN1cnJlbnQgc2Vzc2lvbiBmaXJzdFxuICAgICAgY29uc3QgY3VycmVudFNlc3Npb24gPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd2aWJlLWN1cnJlbnQtZHJhZnQtc2Vzc2lvbicpIHx8ICdudWxsJyk7XG4gICAgICBpZiAoY3VycmVudFNlc3Npb24gJiYgKHNlc3Npb25JZCA9PT0gJ2N1cnJlbnQnIHx8IGN1cnJlbnRTZXNzaW9uLmlkID09PSBzZXNzaW9uSWQpKSB7XG4gICAgICAgIHJldHVybiBjdXJyZW50U2Vzc2lvbjtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gQ2hlY2sgc2Vzc2lvbnMgbGlzdFxuICAgICAgY29uc3Qgc2Vzc2lvbnMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd2aWJlLWRyYWZ0LXNlc3Npb25zJykgfHwgJ1tdJyk7XG4gICAgICByZXR1cm4gc2Vzc2lvbnMuZmluZCgoczogYW55KSA9PiBzLmlkID09PSBzZXNzaW9uSWQpO1xuICAgIH0gY2F0Y2gge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9O1xuICBcbiAgY29uc3QgcmVtb3ZlRHJhZnRTZXNzaW9uID0gKHNlc3Npb25JZDogc3RyaW5nKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSByZXR1cm47XG4gICAgXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGN1cnJlbnRTZXNzaW9uID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndmliZS1jdXJyZW50LWRyYWZ0LXNlc3Npb24nKSB8fCAnbnVsbCcpO1xuICAgICAgaWYgKGN1cnJlbnRTZXNzaW9uICYmIGN1cnJlbnRTZXNzaW9uLmlkID09PSBzZXNzaW9uSWQpIHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ3ZpYmUtY3VycmVudC1kcmFmdC1zZXNzaW9uJyk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGNvbnN0IHNlc3Npb25zID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndmliZS1kcmFmdC1zZXNzaW9ucycpIHx8ICdbXScpO1xuICAgICAgY29uc3QgZmlsdGVyZWQgPSBzZXNzaW9ucy5maWx0ZXIoKHM6IGFueSkgPT4gcy5pZCAhPT0gc2Vzc2lvbklkKTtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd2aWJlLWRyYWZ0LXNlc3Npb25zJywgSlNPTi5zdHJpbmdpZnkoZmlsdGVyZWQpKTtcbiAgICAgIHNldERyYWZ0U2Vzc2lvbnMoZmlsdGVyZWQpO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byByZW1vdmUgZHJhZnQgc2Vzc2lvbjonLCBlKTtcbiAgICB9XG4gIH07XG5cbiAgLy8gQWxpYXMgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcbiAgY29uc3QgYWRkQ29tcGxldGVkQ2FyZCA9IChjYXJkOiBhbnkpID0+IHtcbiAgICAvLyBDb252ZXJ0IGZyb20gdGhlIG9sZCBmb3JtYXQgdG8gbmV3IGZvcm1hdFxuICAgIGNvbnN0IGhpc3RvcnlJdGVtOiBDYXJkSGlzdG9yeUl0ZW0gPSB7XG4gICAgICBpZDogY2FyZC5pZCB8fCBEYXRlLm5vdygpLnRvU3RyaW5nKCksXG4gICAgICBkYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICB0eXBlOiBjYXJkLmNhcmRUeXBlIHx8ICdjdXN0b20nLFxuICAgICAgdG9uZTogY2FyZC5jYXJkVG9uZSB8fCAnY2FzdWFsJyxcbiAgICAgIHJlY2lwaWVudDogY2FyZC50b0ZpZWxkLFxuICAgICAgc2VuZGVyOiBjYXJkLmZyb21GaWVsZCxcbiAgICAgIG1lc3NhZ2U6IGNhcmQuZmluYWxDYXJkTWVzc2FnZSxcbiAgICAgIHRodW1ibmFpbFVybDogY2FyZC5mcm9udENvdmVyIHx8IGNhcmQuaW1hZ2VzPy5mcm9udENvdmVyXG4gICAgfTtcbiAgICBhZGRDYXJkVG9IaXN0b3J5KGhpc3RvcnlJdGVtKTtcbiAgfTtcblxuICByZXR1cm4ge1xuICAgIGNhcmRIaXN0b3J5LFxuICAgIGRyYWZ0U2Vzc2lvbnMsXG4gICAgYWRkQ2FyZFRvSGlzdG9yeSxcbiAgICBhZGRDb21wbGV0ZWRDYXJkLCAgLy8gQWRkIHRoaXMgZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHlcbiAgICBjbGVhckhpc3RvcnksXG4gICAgc2F2ZURyYWZ0U2Vzc2lvbixcbiAgICByZXN1bWVEcmFmdFNlc3Npb24sXG4gICAgcmVtb3ZlRHJhZnRTZXNzaW9uLFxuICAgIC8vIEFkZCB0aGVzZSBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eVxuICAgIGhhc0NvbXBsZXRlZENhcmRzOiBjYXJkSGlzdG9yeS5sZW5ndGggPiAwLFxuICAgIGhhc0RyYWZ0U2Vzc2lvbnM6IGRyYWZ0U2Vzc2lvbnMubGVuZ3RoID4gMCxcbiAgICB0b3RhbENhcmRzOiBjYXJkSGlzdG9yeS5sZW5ndGgsXG4gICAgdG90YWxEcmFmdHM6IGRyYWZ0U2Vzc2lvbnMubGVuZ3RoLFxuICB9O1xufSJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInN0b3JhZ2UiLCJ1c2VDYXJkSGlzdG9yeSIsImNhcmRIaXN0b3J5Iiwic2V0Q2FyZEhpc3RvcnkiLCJkcmFmdFNlc3Npb25zIiwic2V0RHJhZnRTZXNzaW9ucyIsInJlY2VudCIsImdldFJlY2VudENhcmRzIiwiaGlzdG9yeUl0ZW1zIiwibWFwIiwiY2FyZCIsImlkIiwiZGF0ZSIsInR5cGUiLCJ0b25lIiwicmVjaXBpZW50Iiwic2VuZGVyIiwidW5kZWZpbmVkIiwibWVzc2FnZSIsInRodW1ibmFpbFVybCIsInByZXZpZXciLCJzZXNzaW9ucyIsIkpTT04iLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJ0d29Ib3VycyIsInZhbGlkU2Vzc2lvbnMiLCJmaWx0ZXIiLCJzZXNzaW9uIiwic2F2ZWRBdCIsImFnZSIsIkRhdGUiLCJub3ciLCJnZXRUaW1lIiwibGVuZ3RoIiwic2V0SXRlbSIsInN0cmluZ2lmeSIsImFkZENhcmRUb0hpc3RvcnkiLCJhZGRSZWNlbnRDYXJkIiwicHJldiIsInNsaWNlIiwiY2xlYXJIaXN0b3J5IiwiY2xlYXJBbGwiLCJzYXZlRHJhZnRTZXNzaW9uIiwiZm9ybURhdGEiLCJkcmFmdENhcmRzIiwic2VsZWN0ZWRJbmRleCIsInNlc3Npb25JZCIsIkJvb2xlYW4iLCJ0b0lTT1N0cmluZyIsImV4aXN0aW5nSW5kZXgiLCJmaW5kSW5kZXgiLCJzIiwidW5zaGlmdCIsInVwZGF0ZWRTZXNzaW9ucyIsImUiLCJjb25zb2xlIiwiZXJyb3IiLCJyZXN1bWVEcmFmdFNlc3Npb24iLCJjdXJyZW50U2Vzc2lvbiIsImZpbmQiLCJyZW1vdmVEcmFmdFNlc3Npb24iLCJyZW1vdmVJdGVtIiwiZmlsdGVyZWQiLCJhZGRDb21wbGV0ZWRDYXJkIiwiaGlzdG9yeUl0ZW0iLCJ0b1N0cmluZyIsImNhcmRUeXBlIiwiY2FyZFRvbmUiLCJ0b0ZpZWxkIiwiZnJvbUZpZWxkIiwiZmluYWxDYXJkTWVzc2FnZSIsImZyb250Q292ZXIiLCJpbWFnZXMiLCJoYXNDb21wbGV0ZWRDYXJkcyIsImhhc0RyYWZ0U2Vzc2lvbnMiLCJ0b3RhbENhcmRzIiwidG90YWxEcmFmdHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useCardHistorySimplified.ts\n"));

/***/ })

});