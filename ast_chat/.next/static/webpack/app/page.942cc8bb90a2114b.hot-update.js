"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/wizard/CardWizardEffects.tsx":
/*!*************************************************!*\
  !*** ./components/wizard/CardWizardEffects.tsx ***!
  \*************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CardWizardEffects: function() { return /* binding */ CardWizardEffects; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ CardWizardEffects auto */ var _s = $RefreshSig$();\n\nfunction CardWizardEffects(param) {\n    let { cardStudio, cardForm, cardHistory, wizardState, isResumingDraft } = param;\n    _s();\n    // Check for pending jobs on component mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        cardStudio.checkPendingJobs();\n    }, []);\n    // Auto-resume to the appropriate step based on saved data\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!wizardState.isInitialLoadComplete || !cardForm.isInitialLoadComplete) return;\n        // Only auto-advance if we're on step 1 and have data\n        if (wizardState.currentStep === 1 && wizardState.completedSteps.length === 0) {\n            const formData = cardForm.formData;\n            // Check if user has meaningful progress\n            if (formData.userEmail) {\n                // User has email, advance to at least step 4\n                console.log(\"\\uD83D\\uDD04 Auto-resuming to email step or beyond\");\n                wizardState.markStepCompleted(1);\n                if (formData.finalCardMessage || formData.prompt) {\n                    wizardState.markStepCompleted(2);\n                }\n                if (formData.selectedArtisticStyle || formData.referenceImages.length > 0) {\n                    wizardState.markStepCompleted(3);\n                }\n                wizardState.markStepCompleted(4);\n                // If they have draft cards, go to step 5\n                if (cardStudio.draftCards.length > 0) {\n                    wizardState.goToStep(5);\n                } else {\n                    wizardState.goToStep(4);\n                }\n            } else if (formData.finalCardMessage || formData.prompt) {\n                // User has message content, advance to step 2\n                console.log(\"\\uD83D\\uDD04 Auto-resuming to message step\");\n                wizardState.markStepCompleted(1);\n                wizardState.goToStep(2);\n            } else if (formData.selectedType && formData.selectedTone) {\n                // User has completed step 1 but not moved on\n                console.log(\"\\uD83D\\uDD04 Auto-completing step 1\");\n                wizardState.markStepCompleted(1);\n            }\n        }\n    }, [\n        wizardState.isInitialLoadComplete,\n        cardForm.isInitialLoadComplete\n    ]);\n    // Auto-save drafts when user creates draft cards\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardStudio.draftCards.length > 0 && cardForm.isInitialLoadComplete && !isResumingDraft) {\n            cardHistory.saveDraftSession(cardForm.formData, cardStudio.draftCards, cardStudio.selectedDraftIndex);\n        }\n    }, [\n        cardStudio.draftCards,\n        cardStudio.selectedDraftIndex,\n        cardForm.formData,\n        cardForm.isInitialLoadComplete,\n        isResumingDraft\n    ]);\n    // Auto-save completed cards\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardStudio.generatedCard && cardStudio.isCardCompleted) {\n            cardHistory.addCompletedCard(cardStudio.generatedCard);\n        }\n    }, [\n        cardStudio.generatedCard,\n        cardStudio.isCardCompleted\n    ]);\n    // Sync form data with cardStudio when form data changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (!cardForm.isInitialLoadComplete) return;\n        const { formData } = cardForm;\n        // Update cardStudio with form data\n        cardStudio.setSelectedType(formData.selectedType);\n        cardStudio.setCustomCardType(formData.customCardType);\n        cardStudio.setSelectedTone(formData.selectedTone);\n        cardStudio.setToField(formData.toField);\n        cardStudio.setFromField(formData.fromField);\n        cardStudio.setRelationshipField(formData.relationshipField);\n        cardStudio.setPrompt(formData.prompt);\n        cardStudio.setFinalCardMessage(formData.finalCardMessage);\n        cardStudio.setIsHandwrittenMessage(formData.isHandwrittenMessage);\n        cardStudio.setSelectedArtisticStyle(formData.selectedArtisticStyle);\n        cardStudio.setCustomStyleDescription(formData.customStyleDescription);\n        // Only update reference images if cardStudio doesn't already have them\n        // This prevents clearing images that were just uploaded\n        if (cardStudio.referenceImages.length === 0 && formData.referenceImages.length > 0) {\n            cardStudio.setReferenceImages(formData.referenceImages);\n            cardStudio.setReferenceImageUrls(formData.referenceImageUrls);\n        } else if (formData.referenceImages.length === 0 && cardStudio.referenceImages.length === 0) {\n            // Both are empty, safe to sync\n            cardStudio.setReferenceImages(formData.referenceImages);\n            cardStudio.setReferenceImageUrls(formData.referenceImageUrls);\n        }\n        // Otherwise, keep cardStudio's current state to avoid clearing recently uploaded images\n        cardStudio.setImageTransformation(formData.imageTransformation);\n        cardStudio.setUserEmail(formData.userEmail);\n        cardStudio.setSelectedImageModel(formData.selectedImageModel);\n        cardStudio.setSelectedDraftModel(formData.selectedDraftModel);\n        cardStudio.setSelectedPaperSize(formData.selectedPaperSize);\n        cardStudio.setNumberOfCards(formData.numberOfCards);\n        cardStudio.setIsFrontBackOnly(formData.isFrontBackOnly);\n    }, [\n        cardForm.formData,\n        cardForm.isInitialLoadComplete\n    ]);\n    // Auto-complete step 1 once user makes selections\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardForm.validateStep(1) && !wizardState.completedSteps.includes(1)) {\n            wizardState.markStepCompleted(1);\n        }\n    }, [\n        cardForm.formData.selectedType,\n        cardForm.formData.selectedTone,\n        cardForm.formData.customCardType,\n        wizardState\n    ]);\n    // Auto-complete step 4 once email is valid\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardForm.validateStep(4) && !wizardState.completedSteps.includes(4)) {\n            wizardState.markStepCompleted(4);\n        }\n    }, [\n        cardForm.formData.userEmail,\n        wizardState\n    ]);\n    // Auto-advance to Step 6 when final card generation starts\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (cardStudio.isGeneratingFinalCard && wizardState.currentStep < 6) {\n            console.log(\"\\uD83D\\uDE80 Auto-advancing to Step 6: Final Generation\");\n            if (!wizardState.completedSteps.includes(5)) {\n                wizardState.markStepCompleted(5);\n            }\n            wizardState.goToStep(6);\n        }\n    }, [\n        cardStudio.isGeneratingFinalCard,\n        wizardState\n    ]);\n    return null;\n}\n_s(CardWizardEffects, \"tt6kjypLGXbVrNnlJkQ/C4dLuzI=\");\n_c = CardWizardEffects;\nvar _c;\n$RefreshReg$(_c, \"CardWizardEffects\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/wizard/CardWizardEffects.tsx\n"));

/***/ })

});